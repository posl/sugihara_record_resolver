/*
 * This file is generated by jOOQ.
 */
package stroom.proxy.repo.db.jooq.tables.records;


import stroom.proxy.repo.db.jooq.tables.Aggregate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AggregateRecord extends UpdatableRecordImpl<AggregateRecord> implements Record8<Long, Long, String, String, Long, Integer, Boolean, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>aggregate.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>aggregate.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>aggregate.create_time_ms</code>.
     */
    public void setCreateTimeMs(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>aggregate.create_time_ms</code>.
     */
    public Long getCreateTimeMs() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>aggregate.feed_name</code>.
     */
    public void setFeedName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>aggregate.feed_name</code>.
     */
    public String getFeedName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>aggregate.type_name</code>.
     */
    public void setTypeName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>aggregate.type_name</code>.
     */
    public String getTypeName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>aggregate.byte_size</code>.
     */
    public void setByteSize(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>aggregate.byte_size</code>.
     */
    public Long getByteSize() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>aggregate.items</code>.
     */
    public void setItems(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>aggregate.items</code>.
     */
    public Integer getItems() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>aggregate.complete</code>.
     */
    public void setComplete(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>aggregate.complete</code>.
     */
    public Boolean getComplete() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>aggregate.new_position</code>.
     */
    public void setNewPosition(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>aggregate.new_position</code>.
     */
    public Long getNewPosition() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, String, Long, Integer, Boolean, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, String, Long, Integer, Boolean, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Aggregate.AGGREGATE.ID;
    }

    @Override
    public Field<Long> field2() {
        return Aggregate.AGGREGATE.CREATE_TIME_MS;
    }

    @Override
    public Field<String> field3() {
        return Aggregate.AGGREGATE.FEED_NAME;
    }

    @Override
    public Field<String> field4() {
        return Aggregate.AGGREGATE.TYPE_NAME;
    }

    @Override
    public Field<Long> field5() {
        return Aggregate.AGGREGATE.BYTE_SIZE;
    }

    @Override
    public Field<Integer> field6() {
        return Aggregate.AGGREGATE.ITEMS;
    }

    @Override
    public Field<Boolean> field7() {
        return Aggregate.AGGREGATE.COMPLETE;
    }

    @Override
    public Field<Long> field8() {
        return Aggregate.AGGREGATE.NEW_POSITION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCreateTimeMs();
    }

    @Override
    public String component3() {
        return getFeedName();
    }

    @Override
    public String component4() {
        return getTypeName();
    }

    @Override
    public Long component5() {
        return getByteSize();
    }

    @Override
    public Integer component6() {
        return getItems();
    }

    @Override
    public Boolean component7() {
        return getComplete();
    }

    @Override
    public Long component8() {
        return getNewPosition();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCreateTimeMs();
    }

    @Override
    public String value3() {
        return getFeedName();
    }

    @Override
    public String value4() {
        return getTypeName();
    }

    @Override
    public Long value5() {
        return getByteSize();
    }

    @Override
    public Integer value6() {
        return getItems();
    }

    @Override
    public Boolean value7() {
        return getComplete();
    }

    @Override
    public Long value8() {
        return getNewPosition();
    }

    @Override
    public AggregateRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AggregateRecord value2(Long value) {
        setCreateTimeMs(value);
        return this;
    }

    @Override
    public AggregateRecord value3(String value) {
        setFeedName(value);
        return this;
    }

    @Override
    public AggregateRecord value4(String value) {
        setTypeName(value);
        return this;
    }

    @Override
    public AggregateRecord value5(Long value) {
        setByteSize(value);
        return this;
    }

    @Override
    public AggregateRecord value6(Integer value) {
        setItems(value);
        return this;
    }

    @Override
    public AggregateRecord value7(Boolean value) {
        setComplete(value);
        return this;
    }

    @Override
    public AggregateRecord value8(Long value) {
        setNewPosition(value);
        return this;
    }

    @Override
    public AggregateRecord values(Long value1, Long value2, String value3, String value4, Long value5, Integer value6, Boolean value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AggregateRecord
     */
    public AggregateRecord() {
        super(Aggregate.AGGREGATE);
    }

    /**
     * Create a detached, initialised AggregateRecord
     */
    public AggregateRecord(Long id, Long createTimeMs, String feedName, String typeName, Long byteSize, Integer items, Boolean complete, Long newPosition) {
        super(Aggregate.AGGREGATE);

        setId(id);
        setCreateTimeMs(createTimeMs);
        setFeedName(feedName);
        setTypeName(typeName);
        setByteSize(byteSize);
        setItems(items);
        setComplete(complete);
        setNewPosition(newPosition);
    }
}
