/*
 * This file is generated by jOOQ.
 */
package stroom.meta.impl.db.jooq;


import stroom.meta.impl.db.jooq.tables.Meta;
import stroom.meta.impl.db.jooq.tables.MetaFeed;
import stroom.meta.impl.db.jooq.tables.MetaKey;
import stroom.meta.impl.db.jooq.tables.MetaProcessor;
import stroom.meta.impl.db.jooq.tables.MetaRetentionTracker;
import stroom.meta.impl.db.jooq.tables.MetaType;
import stroom.meta.impl.db.jooq.tables.MetaVal;
import stroom.meta.impl.db.jooq.tables.records.MetaFeedRecord;
import stroom.meta.impl.db.jooq.tables.records.MetaKeyRecord;
import stroom.meta.impl.db.jooq.tables.records.MetaProcessorRecord;
import stroom.meta.impl.db.jooq.tables.records.MetaRecord;
import stroom.meta.impl.db.jooq.tables.records.MetaRetentionTrackerRecord;
import stroom.meta.impl.db.jooq.tables.records.MetaTypeRecord;
import stroom.meta.impl.db.jooq.tables.records.MetaValRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * stroom.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<MetaRecord> KEY_META_PRIMARY = Internal.createUniqueKey(Meta.META, DSL.name("KEY_meta_PRIMARY"), new TableField[] { Meta.META.ID }, true);
    public static final UniqueKey<MetaFeedRecord> KEY_META_FEED_NAME = Internal.createUniqueKey(MetaFeed.META_FEED, DSL.name("KEY_meta_feed_name"), new TableField[] { MetaFeed.META_FEED.NAME }, true);
    public static final UniqueKey<MetaFeedRecord> KEY_META_FEED_PRIMARY = Internal.createUniqueKey(MetaFeed.META_FEED, DSL.name("KEY_meta_feed_PRIMARY"), new TableField[] { MetaFeed.META_FEED.ID }, true);
    public static final UniqueKey<MetaKeyRecord> KEY_META_KEY_META_KEY_NAME = Internal.createUniqueKey(MetaKey.META_KEY, DSL.name("KEY_meta_key_meta_key_name"), new TableField[] { MetaKey.META_KEY.NAME }, true);
    public static final UniqueKey<MetaKeyRecord> KEY_META_KEY_PRIMARY = Internal.createUniqueKey(MetaKey.META_KEY, DSL.name("KEY_meta_key_PRIMARY"), new TableField[] { MetaKey.META_KEY.ID }, true);
    public static final UniqueKey<MetaProcessorRecord> KEY_META_PROCESSOR_PIPELINE_UUID_IDX = Internal.createUniqueKey(MetaProcessor.META_PROCESSOR, DSL.name("KEY_meta_processor_pipeline_uuid_idx"), new TableField[] { MetaProcessor.META_PROCESSOR.PIPELINE_UUID }, true);
    public static final UniqueKey<MetaProcessorRecord> KEY_META_PROCESSOR_PRIMARY = Internal.createUniqueKey(MetaProcessor.META_PROCESSOR, DSL.name("KEY_meta_processor_PRIMARY"), new TableField[] { MetaProcessor.META_PROCESSOR.ID }, true);
    public static final UniqueKey<MetaProcessorRecord> KEY_META_PROCESSOR_PROCESSOR_UUID = Internal.createUniqueKey(MetaProcessor.META_PROCESSOR, DSL.name("KEY_meta_processor_processor_uuid"), new TableField[] { MetaProcessor.META_PROCESSOR.PROCESSOR_UUID }, true);
    public static final UniqueKey<MetaRetentionTrackerRecord> KEY_META_RETENTION_TRACKER_PRIMARY = Internal.createUniqueKey(MetaRetentionTracker.META_RETENTION_TRACKER, DSL.name("KEY_meta_retention_tracker_PRIMARY"), new TableField[] { MetaRetentionTracker.META_RETENTION_TRACKER.RETENTION_RULES_VERSION, MetaRetentionTracker.META_RETENTION_TRACKER.RULE_AGE }, true);
    public static final UniqueKey<MetaTypeRecord> KEY_META_TYPE_NAME = Internal.createUniqueKey(MetaType.META_TYPE, DSL.name("KEY_meta_type_name"), new TableField[] { MetaType.META_TYPE.NAME }, true);
    public static final UniqueKey<MetaTypeRecord> KEY_META_TYPE_PRIMARY = Internal.createUniqueKey(MetaType.META_TYPE, DSL.name("KEY_meta_type_PRIMARY"), new TableField[] { MetaType.META_TYPE.ID }, true);
    public static final UniqueKey<MetaValRecord> KEY_META_VAL_PRIMARY = Internal.createUniqueKey(MetaVal.META_VAL, DSL.name("KEY_meta_val_PRIMARY"), new TableField[] { MetaVal.META_VAL.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MetaRecord, MetaFeedRecord> META_FEED_ID = Internal.createForeignKey(Meta.META, DSL.name("meta_feed_id"), new TableField[] { Meta.META.FEED_ID }, Keys.KEY_META_FEED_PRIMARY, new TableField[] { MetaFeed.META_FEED.ID }, true);
    public static final ForeignKey<MetaRecord, MetaProcessorRecord> META_PROCESSOR_ID = Internal.createForeignKey(Meta.META, DSL.name("meta_processor_id"), new TableField[] { Meta.META.PROCESSOR_ID }, Keys.KEY_META_PROCESSOR_PRIMARY, new TableField[] { MetaProcessor.META_PROCESSOR.ID }, true);
    public static final ForeignKey<MetaRecord, MetaTypeRecord> META_TYPE_ID = Internal.createForeignKey(Meta.META, DSL.name("meta_type_id"), new TableField[] { Meta.META.TYPE_ID }, Keys.KEY_META_TYPE_PRIMARY, new TableField[] { MetaType.META_TYPE.ID }, true);
}
