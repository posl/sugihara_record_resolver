/*
 * Copyright 2016 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package stroom.node.impl;


import stroom.node.impl.NodeStatusServiceUtil.CPUStats;

import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

class TestNodeStatusServiceUtil {

    // example output from 'cat /proc/stat'
    @SuppressWarnings("checkstyle:LineLength")
    private final String output = "" +
            "cpu  4723476392 160361 77496194 8438714515 57132415 3363 1832867 0 0\n" +
            "cpu0 213427959 8748 3829293 188887931 9302819 0 86473 0 0\n" +
            "cpu2 158921680 6551 3345043 251521227 1857261 0 848 0 0\n" +
            "cpu3 144709783 7816 3281287 266391876 1262997 0 704 0 0\n" +
            "cpu4 135513747 7529 3119805 276065364 921184 0 709 0 0\n" +
            "cpu5 130548076 7227 2988259 281376739 705453 0 698 0 0\n" +
            "cpu6 127437941 7258 2836494 284756715 576077 0 718 0 0\n" +
            "cpu7 127753565 6787 2705990 284666286 492673 0 610 0 0\n" +
            "cpu8 165220970 2063 3317867 243266347 3669032 202 116491 0 0\n" +
            "cpu9 153739918 2526 2637981 255786778 3214653 198 111112 0 0\n" +
            "cpu10 149402181 2542 2370975 261184529 2461861 231 100570 0 0\n" +
            "cpu11 146966279 2276 2168281 264055255 2251041 206 96462 0 0\n" +
            "cpu12 143439963 2393 2055946 268010297 1930004 214 95166 0 0\n" +
            "cpu13 143412206 2414 1952166 268189387 1932537 208 83536 0 0\n" +
            "cpu14 142896065 1949 1861129 269155067 1540155 216 99103 0 0\n" +
            "cpu15 140199502 2090 1827352 271662713 1744181 207 107056 0 0\n" +
            "cpu16 133538390 7962 2958568 274837116 4256641 0 823 0 0\n" +
            "cpu17 126740369 7366 2797785 285376662 688691 0 769 0 0\n" +
            "cpu18 125368982 8224 2685820 286918856 632444 0 696 0 0\n" +
            "cpu19 123376382 8023 2573370 289138837 522325 0 618 0 0\n" +
            "cpu20 122169958 7949 2461363 290520203 464464 0 528 0 0\n" +
            "cpu21 121958202 8573 2317091 290949008 384600 0 479 0 0\n" +
            "cpu22 123062000 8173 2158247 290059537 339741 0 451 0 0\n" +
            "cpu23 124046437 8206 2083003 289165530 326332 0 429 0 0\n" +
            "cpu24 164528870 2052 2224929 246558332 2100193 203 124899 0 0\n" +
            "cpu25 159539064 2455 2070167 251745158 2073852 205 113411 0 0\n" +
            "cpu26 159684042 3420 1848702 252300015 1630710 187 111277 0 0\n" +
            "cpu27 161570764 2349 1681120 250634917 1593269 189 108261 0 0\n" +
            "cpu28 166101276 2327 1577342 246297881 1510099 199 98192 0 0\n" +
            "cpu29 162108002 2453 1477252 250539504 1389398 195 93500 0 0\n" +
            "cpu30 167858704 2085 1413800 244984926 1228583 192 112181 0 0\n" +
            "cpu31 172612139 2296 1508812 239475577 1790889 303 164949 0 0\n" +
            "intr 64883330534 197 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 88 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 13866 0 0 0 0 0 0 0 0 0 0 0 77810406 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 47956974 43319053 46358123 106671264 40908495 42880919 509317890 39413902 44631075 744750011 44360774 45499583 103569499 46597658 44948623 105105724 52288500 46373768 45713952 41161442 186836371 44502728 51265226 47072209 44849506 42246272 43630096 135195595 47632032 42437434 43495270 43216089 861 2594339 2079854 2079854 2101738 2224469 2079854 2079854 2079854 2114884 2079854 2079854 2079854 2101736 2079854 2079854 2233292 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 2079854 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n" +
            "ctxt 29632391275\n" + "btime 1459232756\n" + "processes 45705664\n" + "procs_running 8\n" +
            "procs_blocked 1\n" +
            "softirq 106809686366 0 2504890812 833689 3046572383 77525372 0 77493370 3224493680 9272453 3379324095\n";

    @Test
    void testCreateLinuxStats() {
        final CPUStats cpuStats = NodeStatusServiceUtil.createLinuxStats(output);

        assertThat(cpuStats.user.longValue()).isEqualTo(4723476392L);
        assertThat(cpuStats.nice.longValue()).isEqualTo(160361L);
        assertThat(cpuStats.system.longValue()).isEqualTo(77496194L);
        assertThat(cpuStats.idle.longValue()).isEqualTo(8438714515L);
        assertThat(cpuStats.ioWait.longValue()).isEqualTo(57132415L);
        assertThat(cpuStats.irq.longValue()).isEqualTo(3363L);
        assertThat(cpuStats.softirq.longValue()).isEqualTo(1832867L);
    }
}
