/*
 * This file is generated by jOOQ.
 */
package stroom.security.identity.db.jooq;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import stroom.security.identity.db.jooq.tables.JsonWebKey;
import stroom.security.identity.db.jooq.tables.OauthClient;
import stroom.security.identity.db.jooq.tables.Token;
import stroom.security.identity.db.jooq.tables.records.AccountRecord;
import stroom.security.identity.db.jooq.tables.records.JsonWebKeyRecord;
import stroom.security.identity.db.jooq.tables.records.OauthClientRecord;
import stroom.security.identity.db.jooq.tables.records.TokenRecord;
import stroom.security.identity.db.jooq.tables.records.TokenTypeRecord;
import stroom.security.identity.db.jooq.tables.Account;
import stroom.security.identity.db.jooq.tables.TokenType;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>stroom</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, Integer> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
    public static final Identity<JsonWebKeyRecord, Integer> IDENTITY_JSON_WEB_KEY = Identities0.IDENTITY_JSON_WEB_KEY;
    public static final Identity<OauthClientRecord, Integer> IDENTITY_OAUTH_CLIENT = Identities0.IDENTITY_OAUTH_CLIENT;
    public static final Identity<TokenRecord, Integer> IDENTITY_TOKEN = Identities0.IDENTITY_TOKEN;
    public static final Identity<TokenTypeRecord, Integer> IDENTITY_TOKEN_TYPE = Identities0.IDENTITY_TOKEN_TYPE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_USER_ID = UniqueKeys0.KEY_ACCOUNT_USER_ID;
    public static final UniqueKey<JsonWebKeyRecord> KEY_JSON_WEB_KEY_PRIMARY = UniqueKeys0.KEY_JSON_WEB_KEY_PRIMARY;
    public static final UniqueKey<OauthClientRecord> KEY_OAUTH_CLIENT_PRIMARY = UniqueKeys0.KEY_OAUTH_CLIENT_PRIMARY;
    public static final UniqueKey<OauthClientRecord> KEY_OAUTH_CLIENT_NAME = UniqueKeys0.KEY_OAUTH_CLIENT_NAME;
    public static final UniqueKey<OauthClientRecord> KEY_OAUTH_CLIENT_CLIENT_ID = UniqueKeys0.KEY_OAUTH_CLIENT_CLIENT_ID;
    public static final UniqueKey<TokenRecord> KEY_TOKEN_PRIMARY = UniqueKeys0.KEY_TOKEN_PRIMARY;
    public static final UniqueKey<TokenTypeRecord> KEY_TOKEN_TYPE_PRIMARY = UniqueKeys0.KEY_TOKEN_TYPE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<JsonWebKeyRecord, TokenTypeRecord> JSON_WEB_KEY_FK_TOKEN_TYPE_ID = ForeignKeys0.JSON_WEB_KEY_FK_TOKEN_TYPE_ID;
    public static final ForeignKey<TokenRecord, AccountRecord> TOKEN_FK_ACCOUNT_ID = ForeignKeys0.TOKEN_FK_ACCOUNT_ID;
    public static final ForeignKey<TokenRecord, TokenTypeRecord> TOKEN_FK_TOKEN_TYPE_ID = ForeignKeys0.TOKEN_FK_TOKEN_TYPE_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountRecord, Integer> IDENTITY_ACCOUNT = Internal.createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
        public static Identity<JsonWebKeyRecord, Integer> IDENTITY_JSON_WEB_KEY = Internal.createIdentity(JsonWebKey.JSON_WEB_KEY, JsonWebKey.JSON_WEB_KEY.ID);
        public static Identity<OauthClientRecord, Integer> IDENTITY_OAUTH_CLIENT = Internal.createIdentity(OauthClient.OAUTH_CLIENT, OauthClient.OAUTH_CLIENT.ID);
        public static Identity<TokenRecord, Integer> IDENTITY_TOKEN = Internal.createIdentity(Token.TOKEN, Token.TOKEN.ID);
        public static Identity<TokenTypeRecord, Integer> IDENTITY_TOKEN_TYPE = Internal.createIdentity(TokenType.TOKEN_TYPE, TokenType.TOKEN_TYPE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = Internal.createUniqueKey(Account.ACCOUNT, "KEY_account_PRIMARY", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_USER_ID = Internal.createUniqueKey(Account.ACCOUNT, "KEY_account_user_id", Account.ACCOUNT.USER_ID);
        public static final UniqueKey<JsonWebKeyRecord> KEY_JSON_WEB_KEY_PRIMARY = Internal.createUniqueKey(JsonWebKey.JSON_WEB_KEY, "KEY_json_web_key_PRIMARY", JsonWebKey.JSON_WEB_KEY.ID);
        public static final UniqueKey<OauthClientRecord> KEY_OAUTH_CLIENT_PRIMARY = Internal.createUniqueKey(OauthClient.OAUTH_CLIENT, "KEY_oauth_client_PRIMARY", OauthClient.OAUTH_CLIENT.ID);
        public static final UniqueKey<OauthClientRecord> KEY_OAUTH_CLIENT_NAME = Internal.createUniqueKey(OauthClient.OAUTH_CLIENT, "KEY_oauth_client_name", OauthClient.OAUTH_CLIENT.NAME);
        public static final UniqueKey<OauthClientRecord> KEY_OAUTH_CLIENT_CLIENT_ID = Internal.createUniqueKey(OauthClient.OAUTH_CLIENT, "KEY_oauth_client_client_id", OauthClient.OAUTH_CLIENT.CLIENT_ID);
        public static final UniqueKey<TokenRecord> KEY_TOKEN_PRIMARY = Internal.createUniqueKey(Token.TOKEN, "KEY_token_PRIMARY", Token.TOKEN.ID);
        public static final UniqueKey<TokenTypeRecord> KEY_TOKEN_TYPE_PRIMARY = Internal.createUniqueKey(TokenType.TOKEN_TYPE, "KEY_token_type_PRIMARY", TokenType.TOKEN_TYPE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<JsonWebKeyRecord, TokenTypeRecord> JSON_WEB_KEY_FK_TOKEN_TYPE_ID = Internal.createForeignKey(Keys.KEY_TOKEN_TYPE_PRIMARY, JsonWebKey.JSON_WEB_KEY, "json_web_key_fk_token_type_id", JsonWebKey.JSON_WEB_KEY.FK_TOKEN_TYPE_ID);
        public static final ForeignKey<TokenRecord, AccountRecord> TOKEN_FK_ACCOUNT_ID = Internal.createForeignKey(Keys.KEY_ACCOUNT_PRIMARY, Token.TOKEN, "token_fk_account_id", Token.TOKEN.FK_ACCOUNT_ID);
        public static final ForeignKey<TokenRecord, TokenTypeRecord> TOKEN_FK_TOKEN_TYPE_ID = Internal.createForeignKey(Keys.KEY_TOKEN_TYPE_PRIMARY, Token.TOKEN, "token_fk_token_type_id", Token.TOKEN.FK_TOKEN_TYPE_ID);
    }
}
