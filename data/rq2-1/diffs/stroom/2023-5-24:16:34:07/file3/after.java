/*
 * This file is generated by jOOQ.
 */
package stroom.analytics.impl.db.jooq;


import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import stroom.analytics.impl.db.jooq.tables.AnalyticNotification;
import stroom.analytics.impl.db.jooq.tables.AnalyticNotificationState;
import stroom.analytics.impl.db.jooq.tables.AnalyticProcessorFilter;
import stroom.analytics.impl.db.jooq.tables.AnalyticProcessorFilterTracker;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Stroom extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>stroom</code>
     */
    public static final Stroom STROOM = new Stroom();

    /**
     * The table <code>stroom.analytic_notification</code>.
     */
    public final AnalyticNotification ANALYTIC_NOTIFICATION = AnalyticNotification.ANALYTIC_NOTIFICATION;

    /**
     * The table <code>stroom.analytic_notification_state</code>.
     */
    public final AnalyticNotificationState ANALYTIC_NOTIFICATION_STATE = AnalyticNotificationState.ANALYTIC_NOTIFICATION_STATE;

    /**
     * The table <code>stroom.analytic_processor_filter</code>.
     */
    public final AnalyticProcessorFilter ANALYTIC_PROCESSOR_FILTER = AnalyticProcessorFilter.ANALYTIC_PROCESSOR_FILTER;

    /**
     * The table <code>stroom.analytic_processor_filter_tracker</code>.
     */
    public final AnalyticProcessorFilterTracker ANALYTIC_PROCESSOR_FILTER_TRACKER = AnalyticProcessorFilterTracker.ANALYTIC_PROCESSOR_FILTER_TRACKER;

    /**
     * No further instances allowed
     */
    private Stroom() {
        super("stroom", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            AnalyticNotification.ANALYTIC_NOTIFICATION,
            AnalyticNotificationState.ANALYTIC_NOTIFICATION_STATE,
            AnalyticProcessorFilter.ANALYTIC_PROCESSOR_FILTER,
            AnalyticProcessorFilterTracker.ANALYTIC_PROCESSOR_FILTER_TRACKER
        );
    }
}
