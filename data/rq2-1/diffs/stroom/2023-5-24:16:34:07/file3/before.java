/*
 * This file is generated by jOOQ.
 */
package stroom.analytics.impl.db.jooq;


import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import stroom.analytics.impl.db.jooq.tables.AnalyticRule;
import stroom.analytics.impl.db.jooq.tables.AnalyticRuleState;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Stroom extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>stroom</code>
     */
    public static final Stroom STROOM = new Stroom();

    /**
     * The table <code>stroom.analytic_rule</code>.
     */
    public final AnalyticRule ANALYTIC_RULE = AnalyticRule.ANALYTIC_RULE;

    /**
     * The table <code>stroom.analytic_rule_state</code>.
     */
    public final AnalyticRuleState ANALYTIC_RULE_STATE = AnalyticRuleState.ANALYTIC_RULE_STATE;

    /**
     * No further instances allowed
     */
    private Stroom() {
        super("stroom", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            AnalyticRule.ANALYTIC_RULE,
            AnalyticRuleState.ANALYTIC_RULE_STATE
        );
    }
}
