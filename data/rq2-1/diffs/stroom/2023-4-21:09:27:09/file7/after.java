/*
 * This file is generated by jOOQ.
 */
package stroom.analytics.impl.db.jooq;


import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import stroom.analytics.impl.db.jooq.tables.AnalyticRule;
import stroom.analytics.impl.db.jooq.tables.AnalyticRuleState;
import stroom.analytics.impl.db.jooq.tables.records.AnalyticRuleRecord;
import stroom.analytics.impl.db.jooq.tables.records.AnalyticRuleStateRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * stroom.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnalyticRuleRecord> KEY_ANALYTIC_RULE_ANALYTIC_RULE_ANALYTIC_UUID = Internal.createUniqueKey(AnalyticRule.ANALYTIC_RULE, DSL.name("KEY_analytic_rule_analytic_rule_analytic_uuid"), new TableField[] { AnalyticRule.ANALYTIC_RULE.ANALYTIC_UUID }, true);
    public static final UniqueKey<AnalyticRuleRecord> KEY_ANALYTIC_RULE_PRIMARY = Internal.createUniqueKey(AnalyticRule.ANALYTIC_RULE, DSL.name("KEY_analytic_rule_PRIMARY"), new TableField[] { AnalyticRule.ANALYTIC_RULE.ID }, true);
    public static final UniqueKey<AnalyticRuleStateRecord> KEY_ANALYTIC_RULE_STATE_ANALYTIC_RULE_STATE_ANALYTIC_UUID = Internal.createUniqueKey(AnalyticRuleState.ANALYTIC_RULE_STATE, DSL.name("KEY_analytic_rule_state_analytic_rule_state_analytic_uuid"), new TableField[] { AnalyticRuleState.ANALYTIC_RULE_STATE.ANALYTIC_UUID }, true);
    public static final UniqueKey<AnalyticRuleStateRecord> KEY_ANALYTIC_RULE_STATE_PRIMARY = Internal.createUniqueKey(AnalyticRuleState.ANALYTIC_RULE_STATE, DSL.name("KEY_analytic_rule_state_PRIMARY"), new TableField[] { AnalyticRuleState.ANALYTIC_RULE_STATE.ID }, true);
}
