// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calcite/java_type.proto

package io.activej.dataflow.proto.calcite;

public final class JavaTypeProto {
  private JavaTypeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface JavaTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dataflow.calcite.JavaType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.dataflow.JavaClass java_class = 1;</code>
     * @return Whether the javaClass field is set.
     */
    boolean hasJavaClass();
    /**
     * <code>.dataflow.JavaClass java_class = 1;</code>
     * @return The javaClass.
     */
    io.activej.dataflow.proto.JavaClassProto.JavaClass getJavaClass();
    /**
     * <code>.dataflow.JavaClass java_class = 1;</code>
     */
    io.activej.dataflow.proto.JavaClassProto.JavaClassOrBuilder getJavaClassOrBuilder();

    /**
     * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
     * @return Whether the javaParameterizedType field is set.
     */
    boolean hasJavaParameterizedType();
    /**
     * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
     * @return The javaParameterizedType.
     */
    io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType getJavaParameterizedType();
    /**
     * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
     */
    io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedTypeOrBuilder getJavaParameterizedTypeOrBuilder();

    /**
     * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
     * @return Whether the javaGenericArrayType field is set.
     */
    boolean hasJavaGenericArrayType();
    /**
     * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
     * @return The javaGenericArrayType.
     */
    io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType getJavaGenericArrayType();
    /**
     * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
     */
    io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayTypeOrBuilder getJavaGenericArrayTypeOrBuilder();

    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaTypeCase getJavaTypeCase();
  }
  /**
   * Protobuf type {@code dataflow.calcite.JavaType}
   */
  public static final class JavaType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dataflow.calcite.JavaType)
      JavaTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JavaType.newBuilder() to construct.
    private JavaType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JavaType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JavaType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JavaType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.activej.dataflow.proto.JavaClassProto.JavaClass.Builder subBuilder = null;
              if (javaTypeCase_ == 1) {
                subBuilder = ((io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_).toBuilder();
              }
              javaType_ =
                  input.readMessage(io.activej.dataflow.proto.JavaClassProto.JavaClass.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_);
                javaType_ = subBuilder.buildPartial();
              }
              javaTypeCase_ = 1;
              break;
            }
            case 18: {
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.Builder subBuilder = null;
              if (javaTypeCase_ == 2) {
                subBuilder = ((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_).toBuilder();
              }
              javaType_ =
                  input.readMessage(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_);
                javaType_ = subBuilder.buildPartial();
              }
              javaTypeCase_ = 2;
              break;
            }
            case 26: {
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.Builder subBuilder = null;
              if (javaTypeCase_ == 3) {
                subBuilder = ((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_).toBuilder();
              }
              javaType_ =
                  input.readMessage(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_);
                javaType_ = subBuilder.buildPartial();
              }
              javaTypeCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.class, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder.class);
    }

    public interface JavaParameterizedTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dataflow.calcite.JavaType.JavaParameterizedType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
       * @return Whether the ownerType field is set.
       */
      boolean hasOwnerType();
      /**
       * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
       * @return The ownerType.
       */
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable getOwnerType();
      /**
       * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
       */
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullableOrBuilder getOwnerTypeOrBuilder();

      /**
       * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
       * @return Whether the rawType field is set.
       */
      boolean hasRawType();
      /**
       * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
       * @return The rawType.
       */
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getRawType();
      /**
       * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
       */
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getRawTypeOrBuilder();

      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      java.util.List<io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType> 
          getParametersList();
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getParameters(int index);
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      int getParametersCount();
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      java.util.List<? extends io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> 
          getParametersOrBuilderList();
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getParametersOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code dataflow.calcite.JavaType.JavaParameterizedType}
     */
    public static final class JavaParameterizedType extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dataflow.calcite.JavaType.JavaParameterizedType)
        JavaParameterizedTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use JavaParameterizedType.newBuilder() to construct.
      private JavaParameterizedType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private JavaParameterizedType() {
        parameters_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new JavaParameterizedType();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private JavaParameterizedType(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.Builder subBuilder = null;
                if (ownerType_ != null) {
                  subBuilder = ownerType_.toBuilder();
                }
                ownerType_ = input.readMessage(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(ownerType_);
                  ownerType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder subBuilder = null;
                if (rawType_ != null) {
                  subBuilder = rawType_.toBuilder();
                }
                rawType_ = input.readMessage(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rawType_);
                  rawType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  parameters_ = new java.util.ArrayList<io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType>();
                  mutable_bitField0_ |= 0x00000001;
                }
                parameters_.add(
                    input.readMessage(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaParameterizedType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaParameterizedType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.class, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.Builder.class);
      }

      public static final int OWNER_TYPE_FIELD_NUMBER = 1;
      private io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable ownerType_;
      /**
       * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
       * @return Whether the ownerType field is set.
       */
      @java.lang.Override
      public boolean hasOwnerType() {
        return ownerType_ != null;
      }
      /**
       * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
       * @return The ownerType.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable getOwnerType() {
        return ownerType_ == null ? io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.getDefaultInstance() : ownerType_;
      }
      /**
       * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullableOrBuilder getOwnerTypeOrBuilder() {
        return getOwnerType();
      }

      public static final int RAW_TYPE_FIELD_NUMBER = 2;
      private io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType rawType_;
      /**
       * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
       * @return Whether the rawType field is set.
       */
      @java.lang.Override
      public boolean hasRawType() {
        return rawType_ != null;
      }
      /**
       * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
       * @return The rawType.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getRawType() {
        return rawType_ == null ? io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance() : rawType_;
      }
      /**
       * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getRawTypeOrBuilder() {
        return getRawType();
      }

      public static final int PARAMETERS_FIELD_NUMBER = 3;
      private java.util.List<io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType> parameters_;
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      @java.lang.Override
      public java.util.List<io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType> getParametersList() {
        return parameters_;
      }
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      @java.lang.Override
      public java.util.List<? extends io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> 
          getParametersOrBuilderList() {
        return parameters_;
      }
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      @java.lang.Override
      public int getParametersCount() {
        return parameters_.size();
      }
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getParameters(int index) {
        return parameters_.get(index);
      }
      /**
       * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getParametersOrBuilder(
          int index) {
        return parameters_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (ownerType_ != null) {
          output.writeMessage(1, getOwnerType());
        }
        if (rawType_ != null) {
          output.writeMessage(2, getRawType());
        }
        for (int i = 0; i < parameters_.size(); i++) {
          output.writeMessage(3, parameters_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (ownerType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getOwnerType());
        }
        if (rawType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getRawType());
        }
        for (int i = 0; i < parameters_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, parameters_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType)) {
          return super.equals(obj);
        }
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType other = (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) obj;

        if (hasOwnerType() != other.hasOwnerType()) return false;
        if (hasOwnerType()) {
          if (!getOwnerType()
              .equals(other.getOwnerType())) return false;
        }
        if (hasRawType() != other.hasRawType()) return false;
        if (hasRawType()) {
          if (!getRawType()
              .equals(other.getRawType())) return false;
        }
        if (!getParametersList()
            .equals(other.getParametersList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasOwnerType()) {
          hash = (37 * hash) + OWNER_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getOwnerType().hashCode();
        }
        if (hasRawType()) {
          hash = (37 * hash) + RAW_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getRawType().hashCode();
        }
        if (getParametersCount() > 0) {
          hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
          hash = (53 * hash) + getParametersList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dataflow.calcite.JavaType.JavaParameterizedType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dataflow.calcite.JavaType.JavaParameterizedType)
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaParameterizedType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaParameterizedType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.class, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.Builder.class);
        }

        // Construct using io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getParametersFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (ownerTypeBuilder_ == null) {
            ownerType_ = null;
          } else {
            ownerType_ = null;
            ownerTypeBuilder_ = null;
          }
          if (rawTypeBuilder_ == null) {
            rawType_ = null;
          } else {
            rawType_ = null;
            rawTypeBuilder_ = null;
          }
          if (parametersBuilder_ == null) {
            parameters_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            parametersBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaParameterizedType_descriptor;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType getDefaultInstanceForType() {
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance();
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType build() {
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType buildPartial() {
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType result = new io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType(this);
          int from_bitField0_ = bitField0_;
          if (ownerTypeBuilder_ == null) {
            result.ownerType_ = ownerType_;
          } else {
            result.ownerType_ = ownerTypeBuilder_.build();
          }
          if (rawTypeBuilder_ == null) {
            result.rawType_ = rawType_;
          } else {
            result.rawType_ = rawTypeBuilder_.build();
          }
          if (parametersBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              parameters_ = java.util.Collections.unmodifiableList(parameters_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.parameters_ = parameters_;
          } else {
            result.parameters_ = parametersBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) {
            return mergeFrom((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType other) {
          if (other == io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance()) return this;
          if (other.hasOwnerType()) {
            mergeOwnerType(other.getOwnerType());
          }
          if (other.hasRawType()) {
            mergeRawType(other.getRawType());
          }
          if (parametersBuilder_ == null) {
            if (!other.parameters_.isEmpty()) {
              if (parameters_.isEmpty()) {
                parameters_ = other.parameters_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureParametersIsMutable();
                parameters_.addAll(other.parameters_);
              }
              onChanged();
            }
          } else {
            if (!other.parameters_.isEmpty()) {
              if (parametersBuilder_.isEmpty()) {
                parametersBuilder_.dispose();
                parametersBuilder_ = null;
                parameters_ = other.parameters_;
                bitField0_ = (bitField0_ & ~0x00000001);
                parametersBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getParametersFieldBuilder() : null;
              } else {
                parametersBuilder_.addAllMessages(other.parameters_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable ownerType_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullableOrBuilder> ownerTypeBuilder_;
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         * @return Whether the ownerType field is set.
         */
        public boolean hasOwnerType() {
          return ownerTypeBuilder_ != null || ownerType_ != null;
        }
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         * @return The ownerType.
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable getOwnerType() {
          if (ownerTypeBuilder_ == null) {
            return ownerType_ == null ? io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.getDefaultInstance() : ownerType_;
          } else {
            return ownerTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         */
        public Builder setOwnerType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable value) {
          if (ownerTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ownerType_ = value;
            onChanged();
          } else {
            ownerTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         */
        public Builder setOwnerType(
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.Builder builderForValue) {
          if (ownerTypeBuilder_ == null) {
            ownerType_ = builderForValue.build();
            onChanged();
          } else {
            ownerTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         */
        public Builder mergeOwnerType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable value) {
          if (ownerTypeBuilder_ == null) {
            if (ownerType_ != null) {
              ownerType_ =
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.newBuilder(ownerType_).mergeFrom(value).buildPartial();
            } else {
              ownerType_ = value;
            }
            onChanged();
          } else {
            ownerTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         */
        public Builder clearOwnerType() {
          if (ownerTypeBuilder_ == null) {
            ownerType_ = null;
            onChanged();
          } else {
            ownerType_ = null;
            ownerTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.Builder getOwnerTypeBuilder() {
          
          onChanged();
          return getOwnerTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullableOrBuilder getOwnerTypeOrBuilder() {
          if (ownerTypeBuilder_ != null) {
            return ownerTypeBuilder_.getMessageOrBuilder();
          } else {
            return ownerType_ == null ?
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.getDefaultInstance() : ownerType_;
          }
        }
        /**
         * <code>.dataflow.calcite.JavaTypeNullable owner_type = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullableOrBuilder> 
            getOwnerTypeFieldBuilder() {
          if (ownerTypeBuilder_ == null) {
            ownerTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullableOrBuilder>(
                    getOwnerType(),
                    getParentForChildren(),
                    isClean());
            ownerType_ = null;
          }
          return ownerTypeBuilder_;
        }

        private io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType rawType_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> rawTypeBuilder_;
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         * @return Whether the rawType field is set.
         */
        public boolean hasRawType() {
          return rawTypeBuilder_ != null || rawType_ != null;
        }
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         * @return The rawType.
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getRawType() {
          if (rawTypeBuilder_ == null) {
            return rawType_ == null ? io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance() : rawType_;
          } else {
            return rawTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         */
        public Builder setRawType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
          if (rawTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rawType_ = value;
            onChanged();
          } else {
            rawTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         */
        public Builder setRawType(
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder builderForValue) {
          if (rawTypeBuilder_ == null) {
            rawType_ = builderForValue.build();
            onChanged();
          } else {
            rawTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         */
        public Builder mergeRawType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
          if (rawTypeBuilder_ == null) {
            if (rawType_ != null) {
              rawType_ =
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.newBuilder(rawType_).mergeFrom(value).buildPartial();
            } else {
              rawType_ = value;
            }
            onChanged();
          } else {
            rawTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         */
        public Builder clearRawType() {
          if (rawTypeBuilder_ == null) {
            rawType_ = null;
            onChanged();
          } else {
            rawType_ = null;
            rawTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder getRawTypeBuilder() {
          
          onChanged();
          return getRawTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getRawTypeOrBuilder() {
          if (rawTypeBuilder_ != null) {
            return rawTypeBuilder_.getMessageOrBuilder();
          } else {
            return rawType_ == null ?
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance() : rawType_;
          }
        }
        /**
         * <code>.dataflow.calcite.JavaType raw_type = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> 
            getRawTypeFieldBuilder() {
          if (rawTypeBuilder_ == null) {
            rawTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder>(
                    getRawType(),
                    getParentForChildren(),
                    isClean());
            rawType_ = null;
          }
          return rawTypeBuilder_;
        }

        private java.util.List<io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType> parameters_ =
          java.util.Collections.emptyList();
        private void ensureParametersIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            parameters_ = new java.util.ArrayList<io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType>(parameters_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> parametersBuilder_;

        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public java.util.List<io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType> getParametersList() {
          if (parametersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(parameters_);
          } else {
            return parametersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public int getParametersCount() {
          if (parametersBuilder_ == null) {
            return parameters_.size();
          } else {
            return parametersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getParameters(int index) {
          if (parametersBuilder_ == null) {
            return parameters_.get(index);
          } else {
            return parametersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder setParameters(
            int index, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
          if (parametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureParametersIsMutable();
            parameters_.set(index, value);
            onChanged();
          } else {
            parametersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder setParameters(
            int index, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder builderForValue) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            parameters_.set(index, builderForValue.build());
            onChanged();
          } else {
            parametersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder addParameters(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
          if (parametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureParametersIsMutable();
            parameters_.add(value);
            onChanged();
          } else {
            parametersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder addParameters(
            int index, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
          if (parametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureParametersIsMutable();
            parameters_.add(index, value);
            onChanged();
          } else {
            parametersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder addParameters(
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder builderForValue) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            parameters_.add(builderForValue.build());
            onChanged();
          } else {
            parametersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder addParameters(
            int index, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder builderForValue) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            parameters_.add(index, builderForValue.build());
            onChanged();
          } else {
            parametersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder addAllParameters(
            java.lang.Iterable<? extends io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType> values) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, parameters_);
            onChanged();
          } else {
            parametersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder clearParameters() {
          if (parametersBuilder_ == null) {
            parameters_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            parametersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public Builder removeParameters(int index) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            parameters_.remove(index);
            onChanged();
          } else {
            parametersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder getParametersBuilder(
            int index) {
          return getParametersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getParametersOrBuilder(
            int index) {
          if (parametersBuilder_ == null) {
            return parameters_.get(index);  } else {
            return parametersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public java.util.List<? extends io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> 
             getParametersOrBuilderList() {
          if (parametersBuilder_ != null) {
            return parametersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(parameters_);
          }
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder addParametersBuilder() {
          return getParametersFieldBuilder().addBuilder(
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance());
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder addParametersBuilder(
            int index) {
          return getParametersFieldBuilder().addBuilder(
              index, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance());
        }
        /**
         * <code>repeated .dataflow.calcite.JavaType parameters = 3;</code>
         */
        public java.util.List<io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder> 
             getParametersBuilderList() {
          return getParametersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> 
            getParametersFieldBuilder() {
          if (parametersBuilder_ == null) {
            parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder>(
                    parameters_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            parameters_ = null;
          }
          return parametersBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dataflow.calcite.JavaType.JavaParameterizedType)
      }

      // @@protoc_insertion_point(class_scope:dataflow.calcite.JavaType.JavaParameterizedType)
      private static final io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType();
      }

      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<JavaParameterizedType>
          PARSER = new com.google.protobuf.AbstractParser<JavaParameterizedType>() {
        @java.lang.Override
        public JavaParameterizedType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new JavaParameterizedType(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<JavaParameterizedType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<JavaParameterizedType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface JavaGenericArrayTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dataflow.calcite.JavaType.JavaGenericArrayType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.dataflow.calcite.JavaType component_type = 1;</code>
       * @return Whether the componentType field is set.
       */
      boolean hasComponentType();
      /**
       * <code>.dataflow.calcite.JavaType component_type = 1;</code>
       * @return The componentType.
       */
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getComponentType();
      /**
       * <code>.dataflow.calcite.JavaType component_type = 1;</code>
       */
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getComponentTypeOrBuilder();
    }
    /**
     * Protobuf type {@code dataflow.calcite.JavaType.JavaGenericArrayType}
     */
    public static final class JavaGenericArrayType extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dataflow.calcite.JavaType.JavaGenericArrayType)
        JavaGenericArrayTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use JavaGenericArrayType.newBuilder() to construct.
      private JavaGenericArrayType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private JavaGenericArrayType() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new JavaGenericArrayType();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private JavaGenericArrayType(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder subBuilder = null;
                if (componentType_ != null) {
                  subBuilder = componentType_.toBuilder();
                }
                componentType_ = input.readMessage(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(componentType_);
                  componentType_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.class, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.Builder.class);
      }

      public static final int COMPONENT_TYPE_FIELD_NUMBER = 1;
      private io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType componentType_;
      /**
       * <code>.dataflow.calcite.JavaType component_type = 1;</code>
       * @return Whether the componentType field is set.
       */
      @java.lang.Override
      public boolean hasComponentType() {
        return componentType_ != null;
      }
      /**
       * <code>.dataflow.calcite.JavaType component_type = 1;</code>
       * @return The componentType.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getComponentType() {
        return componentType_ == null ? io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance() : componentType_;
      }
      /**
       * <code>.dataflow.calcite.JavaType component_type = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getComponentTypeOrBuilder() {
        return getComponentType();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (componentType_ != null) {
          output.writeMessage(1, getComponentType());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (componentType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getComponentType());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType)) {
          return super.equals(obj);
        }
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType other = (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) obj;

        if (hasComponentType() != other.hasComponentType()) return false;
        if (hasComponentType()) {
          if (!getComponentType()
              .equals(other.getComponentType())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasComponentType()) {
          hash = (37 * hash) + COMPONENT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getComponentType().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dataflow.calcite.JavaType.JavaGenericArrayType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dataflow.calcite.JavaType.JavaGenericArrayType)
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.class, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.Builder.class);
        }

        // Construct using io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (componentTypeBuilder_ == null) {
            componentType_ = null;
          } else {
            componentType_ = null;
            componentTypeBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_descriptor;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType getDefaultInstanceForType() {
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance();
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType build() {
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType buildPartial() {
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType result = new io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType(this);
          if (componentTypeBuilder_ == null) {
            result.componentType_ = componentType_;
          } else {
            result.componentType_ = componentTypeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) {
            return mergeFrom((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType other) {
          if (other == io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance()) return this;
          if (other.hasComponentType()) {
            mergeComponentType(other.getComponentType());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType componentType_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> componentTypeBuilder_;
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         * @return Whether the componentType field is set.
         */
        public boolean hasComponentType() {
          return componentTypeBuilder_ != null || componentType_ != null;
        }
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         * @return The componentType.
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getComponentType() {
          if (componentTypeBuilder_ == null) {
            return componentType_ == null ? io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance() : componentType_;
          } else {
            return componentTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         */
        public Builder setComponentType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
          if (componentTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            componentType_ = value;
            onChanged();
          } else {
            componentTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         */
        public Builder setComponentType(
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder builderForValue) {
          if (componentTypeBuilder_ == null) {
            componentType_ = builderForValue.build();
            onChanged();
          } else {
            componentTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         */
        public Builder mergeComponentType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
          if (componentTypeBuilder_ == null) {
            if (componentType_ != null) {
              componentType_ =
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.newBuilder(componentType_).mergeFrom(value).buildPartial();
            } else {
              componentType_ = value;
            }
            onChanged();
          } else {
            componentTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         */
        public Builder clearComponentType() {
          if (componentTypeBuilder_ == null) {
            componentType_ = null;
            onChanged();
          } else {
            componentType_ = null;
            componentTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder getComponentTypeBuilder() {
          
          onChanged();
          return getComponentTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getComponentTypeOrBuilder() {
          if (componentTypeBuilder_ != null) {
            return componentTypeBuilder_.getMessageOrBuilder();
          } else {
            return componentType_ == null ?
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance() : componentType_;
          }
        }
        /**
         * <code>.dataflow.calcite.JavaType component_type = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> 
            getComponentTypeFieldBuilder() {
          if (componentTypeBuilder_ == null) {
            componentTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder>(
                    getComponentType(),
                    getParentForChildren(),
                    isClean());
            componentType_ = null;
          }
          return componentTypeBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dataflow.calcite.JavaType.JavaGenericArrayType)
      }

      // @@protoc_insertion_point(class_scope:dataflow.calcite.JavaType.JavaGenericArrayType)
      private static final io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType();
      }

      public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<JavaGenericArrayType>
          PARSER = new com.google.protobuf.AbstractParser<JavaGenericArrayType>() {
        @java.lang.Override
        public JavaGenericArrayType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new JavaGenericArrayType(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<JavaGenericArrayType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<JavaGenericArrayType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int javaTypeCase_ = 0;
    private java.lang.Object javaType_;
    public enum JavaTypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      JAVA_CLASS(1),
      JAVA_PARAMETERIZED_TYPE(2),
      JAVA_GENERIC_ARRAY_TYPE(3),
      JAVATYPE_NOT_SET(0);
      private final int value;
      private JavaTypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static JavaTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static JavaTypeCase forNumber(int value) {
        switch (value) {
          case 1: return JAVA_CLASS;
          case 2: return JAVA_PARAMETERIZED_TYPE;
          case 3: return JAVA_GENERIC_ARRAY_TYPE;
          case 0: return JAVATYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public JavaTypeCase
    getJavaTypeCase() {
      return JavaTypeCase.forNumber(
          javaTypeCase_);
    }

    public static final int JAVA_CLASS_FIELD_NUMBER = 1;
    /**
     * <code>.dataflow.JavaClass java_class = 1;</code>
     * @return Whether the javaClass field is set.
     */
    @java.lang.Override
    public boolean hasJavaClass() {
      return javaTypeCase_ == 1;
    }
    /**
     * <code>.dataflow.JavaClass java_class = 1;</code>
     * @return The javaClass.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.JavaClassProto.JavaClass getJavaClass() {
      if (javaTypeCase_ == 1) {
         return (io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_;
      }
      return io.activej.dataflow.proto.JavaClassProto.JavaClass.getDefaultInstance();
    }
    /**
     * <code>.dataflow.JavaClass java_class = 1;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.JavaClassProto.JavaClassOrBuilder getJavaClassOrBuilder() {
      if (javaTypeCase_ == 1) {
         return (io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_;
      }
      return io.activej.dataflow.proto.JavaClassProto.JavaClass.getDefaultInstance();
    }

    public static final int JAVA_PARAMETERIZED_TYPE_FIELD_NUMBER = 2;
    /**
     * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
     * @return Whether the javaParameterizedType field is set.
     */
    @java.lang.Override
    public boolean hasJavaParameterizedType() {
      return javaTypeCase_ == 2;
    }
    /**
     * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
     * @return The javaParameterizedType.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType getJavaParameterizedType() {
      if (javaTypeCase_ == 2) {
         return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_;
      }
      return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance();
    }
    /**
     * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedTypeOrBuilder getJavaParameterizedTypeOrBuilder() {
      if (javaTypeCase_ == 2) {
         return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_;
      }
      return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance();
    }

    public static final int JAVA_GENERIC_ARRAY_TYPE_FIELD_NUMBER = 3;
    /**
     * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
     * @return Whether the javaGenericArrayType field is set.
     */
    @java.lang.Override
    public boolean hasJavaGenericArrayType() {
      return javaTypeCase_ == 3;
    }
    /**
     * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
     * @return The javaGenericArrayType.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType getJavaGenericArrayType() {
      if (javaTypeCase_ == 3) {
         return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_;
      }
      return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance();
    }
    /**
     * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayTypeOrBuilder getJavaGenericArrayTypeOrBuilder() {
      if (javaTypeCase_ == 3) {
         return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_;
      }
      return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (javaTypeCase_ == 1) {
        output.writeMessage(1, (io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_);
      }
      if (javaTypeCase_ == 2) {
        output.writeMessage(2, (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_);
      }
      if (javaTypeCase_ == 3) {
        output.writeMessage(3, (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (javaTypeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_);
      }
      if (javaTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_);
      }
      if (javaTypeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType)) {
        return super.equals(obj);
      }
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType other = (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) obj;

      if (!getJavaTypeCase().equals(other.getJavaTypeCase())) return false;
      switch (javaTypeCase_) {
        case 1:
          if (!getJavaClass()
              .equals(other.getJavaClass())) return false;
          break;
        case 2:
          if (!getJavaParameterizedType()
              .equals(other.getJavaParameterizedType())) return false;
          break;
        case 3:
          if (!getJavaGenericArrayType()
              .equals(other.getJavaGenericArrayType())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (javaTypeCase_) {
        case 1:
          hash = (37 * hash) + JAVA_CLASS_FIELD_NUMBER;
          hash = (53 * hash) + getJavaClass().hashCode();
          break;
        case 2:
          hash = (37 * hash) + JAVA_PARAMETERIZED_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getJavaParameterizedType().hashCode();
          break;
        case 3:
          hash = (37 * hash) + JAVA_GENERIC_ARRAY_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getJavaGenericArrayType().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dataflow.calcite.JavaType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dataflow.calcite.JavaType)
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.class, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder.class);
      }

      // Construct using io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        javaTypeCase_ = 0;
        javaType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaType_descriptor;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getDefaultInstanceForType() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance();
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType build() {
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType buildPartial() {
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType result = new io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType(this);
        if (javaTypeCase_ == 1) {
          if (javaClassBuilder_ == null) {
            result.javaType_ = javaType_;
          } else {
            result.javaType_ = javaClassBuilder_.build();
          }
        }
        if (javaTypeCase_ == 2) {
          if (javaParameterizedTypeBuilder_ == null) {
            result.javaType_ = javaType_;
          } else {
            result.javaType_ = javaParameterizedTypeBuilder_.build();
          }
        }
        if (javaTypeCase_ == 3) {
          if (javaGenericArrayTypeBuilder_ == null) {
            result.javaType_ = javaType_;
          } else {
            result.javaType_ = javaGenericArrayTypeBuilder_.build();
          }
        }
        result.javaTypeCase_ = javaTypeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) {
          return mergeFrom((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType other) {
        if (other == io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance()) return this;
        switch (other.getJavaTypeCase()) {
          case JAVA_CLASS: {
            mergeJavaClass(other.getJavaClass());
            break;
          }
          case JAVA_PARAMETERIZED_TYPE: {
            mergeJavaParameterizedType(other.getJavaParameterizedType());
            break;
          }
          case JAVA_GENERIC_ARRAY_TYPE: {
            mergeJavaGenericArrayType(other.getJavaGenericArrayType());
            break;
          }
          case JAVATYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int javaTypeCase_ = 0;
      private java.lang.Object javaType_;
      public JavaTypeCase
          getJavaTypeCase() {
        return JavaTypeCase.forNumber(
            javaTypeCase_);
      }

      public Builder clearJavaType() {
        javaTypeCase_ = 0;
        javaType_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.JavaClassProto.JavaClass, io.activej.dataflow.proto.JavaClassProto.JavaClass.Builder, io.activej.dataflow.proto.JavaClassProto.JavaClassOrBuilder> javaClassBuilder_;
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       * @return Whether the javaClass field is set.
       */
      @java.lang.Override
      public boolean hasJavaClass() {
        return javaTypeCase_ == 1;
      }
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       * @return The javaClass.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.JavaClassProto.JavaClass getJavaClass() {
        if (javaClassBuilder_ == null) {
          if (javaTypeCase_ == 1) {
            return (io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_;
          }
          return io.activej.dataflow.proto.JavaClassProto.JavaClass.getDefaultInstance();
        } else {
          if (javaTypeCase_ == 1) {
            return javaClassBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.JavaClassProto.JavaClass.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       */
      public Builder setJavaClass(io.activej.dataflow.proto.JavaClassProto.JavaClass value) {
        if (javaClassBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          javaType_ = value;
          onChanged();
        } else {
          javaClassBuilder_.setMessage(value);
        }
        javaTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       */
      public Builder setJavaClass(
          io.activej.dataflow.proto.JavaClassProto.JavaClass.Builder builderForValue) {
        if (javaClassBuilder_ == null) {
          javaType_ = builderForValue.build();
          onChanged();
        } else {
          javaClassBuilder_.setMessage(builderForValue.build());
        }
        javaTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       */
      public Builder mergeJavaClass(io.activej.dataflow.proto.JavaClassProto.JavaClass value) {
        if (javaClassBuilder_ == null) {
          if (javaTypeCase_ == 1 &&
              javaType_ != io.activej.dataflow.proto.JavaClassProto.JavaClass.getDefaultInstance()) {
            javaType_ = io.activej.dataflow.proto.JavaClassProto.JavaClass.newBuilder((io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_)
                .mergeFrom(value).buildPartial();
          } else {
            javaType_ = value;
          }
          onChanged();
        } else {
          if (javaTypeCase_ == 1) {
            javaClassBuilder_.mergeFrom(value);
          }
          javaClassBuilder_.setMessage(value);
        }
        javaTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       */
      public Builder clearJavaClass() {
        if (javaClassBuilder_ == null) {
          if (javaTypeCase_ == 1) {
            javaTypeCase_ = 0;
            javaType_ = null;
            onChanged();
          }
        } else {
          if (javaTypeCase_ == 1) {
            javaTypeCase_ = 0;
            javaType_ = null;
          }
          javaClassBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       */
      public io.activej.dataflow.proto.JavaClassProto.JavaClass.Builder getJavaClassBuilder() {
        return getJavaClassFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.JavaClassProto.JavaClassOrBuilder getJavaClassOrBuilder() {
        if ((javaTypeCase_ == 1) && (javaClassBuilder_ != null)) {
          return javaClassBuilder_.getMessageOrBuilder();
        } else {
          if (javaTypeCase_ == 1) {
            return (io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_;
          }
          return io.activej.dataflow.proto.JavaClassProto.JavaClass.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.JavaClass java_class = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.JavaClassProto.JavaClass, io.activej.dataflow.proto.JavaClassProto.JavaClass.Builder, io.activej.dataflow.proto.JavaClassProto.JavaClassOrBuilder> 
          getJavaClassFieldBuilder() {
        if (javaClassBuilder_ == null) {
          if (!(javaTypeCase_ == 1)) {
            javaType_ = io.activej.dataflow.proto.JavaClassProto.JavaClass.getDefaultInstance();
          }
          javaClassBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.JavaClassProto.JavaClass, io.activej.dataflow.proto.JavaClassProto.JavaClass.Builder, io.activej.dataflow.proto.JavaClassProto.JavaClassOrBuilder>(
                  (io.activej.dataflow.proto.JavaClassProto.JavaClass) javaType_,
                  getParentForChildren(),
                  isClean());
          javaType_ = null;
        }
        javaTypeCase_ = 1;
        onChanged();;
        return javaClassBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedTypeOrBuilder> javaParameterizedTypeBuilder_;
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       * @return Whether the javaParameterizedType field is set.
       */
      @java.lang.Override
      public boolean hasJavaParameterizedType() {
        return javaTypeCase_ == 2;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       * @return The javaParameterizedType.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType getJavaParameterizedType() {
        if (javaParameterizedTypeBuilder_ == null) {
          if (javaTypeCase_ == 2) {
            return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_;
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance();
        } else {
          if (javaTypeCase_ == 2) {
            return javaParameterizedTypeBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       */
      public Builder setJavaParameterizedType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType value) {
        if (javaParameterizedTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          javaType_ = value;
          onChanged();
        } else {
          javaParameterizedTypeBuilder_.setMessage(value);
        }
        javaTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       */
      public Builder setJavaParameterizedType(
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.Builder builderForValue) {
        if (javaParameterizedTypeBuilder_ == null) {
          javaType_ = builderForValue.build();
          onChanged();
        } else {
          javaParameterizedTypeBuilder_.setMessage(builderForValue.build());
        }
        javaTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       */
      public Builder mergeJavaParameterizedType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType value) {
        if (javaParameterizedTypeBuilder_ == null) {
          if (javaTypeCase_ == 2 &&
              javaType_ != io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance()) {
            javaType_ = io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.newBuilder((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_)
                .mergeFrom(value).buildPartial();
          } else {
            javaType_ = value;
          }
          onChanged();
        } else {
          if (javaTypeCase_ == 2) {
            javaParameterizedTypeBuilder_.mergeFrom(value);
          }
          javaParameterizedTypeBuilder_.setMessage(value);
        }
        javaTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       */
      public Builder clearJavaParameterizedType() {
        if (javaParameterizedTypeBuilder_ == null) {
          if (javaTypeCase_ == 2) {
            javaTypeCase_ = 0;
            javaType_ = null;
            onChanged();
          }
        } else {
          if (javaTypeCase_ == 2) {
            javaTypeCase_ = 0;
            javaType_ = null;
          }
          javaParameterizedTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       */
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.Builder getJavaParameterizedTypeBuilder() {
        return getJavaParameterizedTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedTypeOrBuilder getJavaParameterizedTypeOrBuilder() {
        if ((javaTypeCase_ == 2) && (javaParameterizedTypeBuilder_ != null)) {
          return javaParameterizedTypeBuilder_.getMessageOrBuilder();
        } else {
          if (javaTypeCase_ == 2) {
            return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_;
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaParameterizedType java_parameterized_type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedTypeOrBuilder> 
          getJavaParameterizedTypeFieldBuilder() {
        if (javaParameterizedTypeBuilder_ == null) {
          if (!(javaTypeCase_ == 2)) {
            javaType_ = io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.getDefaultInstance();
          }
          javaParameterizedTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedTypeOrBuilder>(
                  (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaParameterizedType) javaType_,
                  getParentForChildren(),
                  isClean());
          javaType_ = null;
        }
        javaTypeCase_ = 2;
        onChanged();;
        return javaParameterizedTypeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayTypeOrBuilder> javaGenericArrayTypeBuilder_;
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       * @return Whether the javaGenericArrayType field is set.
       */
      @java.lang.Override
      public boolean hasJavaGenericArrayType() {
        return javaTypeCase_ == 3;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       * @return The javaGenericArrayType.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType getJavaGenericArrayType() {
        if (javaGenericArrayTypeBuilder_ == null) {
          if (javaTypeCase_ == 3) {
            return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_;
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance();
        } else {
          if (javaTypeCase_ == 3) {
            return javaGenericArrayTypeBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       */
      public Builder setJavaGenericArrayType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType value) {
        if (javaGenericArrayTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          javaType_ = value;
          onChanged();
        } else {
          javaGenericArrayTypeBuilder_.setMessage(value);
        }
        javaTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       */
      public Builder setJavaGenericArrayType(
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.Builder builderForValue) {
        if (javaGenericArrayTypeBuilder_ == null) {
          javaType_ = builderForValue.build();
          onChanged();
        } else {
          javaGenericArrayTypeBuilder_.setMessage(builderForValue.build());
        }
        javaTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       */
      public Builder mergeJavaGenericArrayType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType value) {
        if (javaGenericArrayTypeBuilder_ == null) {
          if (javaTypeCase_ == 3 &&
              javaType_ != io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance()) {
            javaType_ = io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.newBuilder((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_)
                .mergeFrom(value).buildPartial();
          } else {
            javaType_ = value;
          }
          onChanged();
        } else {
          if (javaTypeCase_ == 3) {
            javaGenericArrayTypeBuilder_.mergeFrom(value);
          }
          javaGenericArrayTypeBuilder_.setMessage(value);
        }
        javaTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       */
      public Builder clearJavaGenericArrayType() {
        if (javaGenericArrayTypeBuilder_ == null) {
          if (javaTypeCase_ == 3) {
            javaTypeCase_ = 0;
            javaType_ = null;
            onChanged();
          }
        } else {
          if (javaTypeCase_ == 3) {
            javaTypeCase_ = 0;
            javaType_ = null;
          }
          javaGenericArrayTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       */
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.Builder getJavaGenericArrayTypeBuilder() {
        return getJavaGenericArrayTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayTypeOrBuilder getJavaGenericArrayTypeOrBuilder() {
        if ((javaTypeCase_ == 3) && (javaGenericArrayTypeBuilder_ != null)) {
          return javaGenericArrayTypeBuilder_.getMessageOrBuilder();
        } else {
          if (javaTypeCase_ == 3) {
            return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_;
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.JavaType.JavaGenericArrayType java_generic_array_type = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayTypeOrBuilder> 
          getJavaGenericArrayTypeFieldBuilder() {
        if (javaGenericArrayTypeBuilder_ == null) {
          if (!(javaTypeCase_ == 3)) {
            javaType_ = io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.getDefaultInstance();
          }
          javaGenericArrayTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayTypeOrBuilder>(
                  (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.JavaGenericArrayType) javaType_,
                  getParentForChildren(),
                  isClean());
          javaType_ = null;
        }
        javaTypeCase_ = 3;
        onChanged();;
        return javaGenericArrayTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dataflow.calcite.JavaType)
    }

    // @@protoc_insertion_point(class_scope:dataflow.calcite.JavaType)
    private static final io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType();
    }

    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JavaType>
        PARSER = new com.google.protobuf.AbstractParser<JavaType>() {
      @java.lang.Override
      public JavaType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JavaType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JavaType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JavaType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JavaTypeNullableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dataflow.calcite.JavaTypeNullable)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.dataflow.calcite.JavaType type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>.dataflow.calcite.JavaType type = 1;</code>
     * @return The type.
     */
    io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getType();
    /**
     * <code>.dataflow.calcite.JavaType type = 1;</code>
     */
    io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getTypeOrBuilder();

    /**
     * <code>bool is_null = 2;</code>
     * @return Whether the isNull field is set.
     */
    boolean hasIsNull();
    /**
     * <code>bool is_null = 2;</code>
     * @return The isNull.
     */
    boolean getIsNull();

    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.JavaTypeNullableCase getJavaTypeNullableCase();
  }
  /**
   * Protobuf type {@code dataflow.calcite.JavaTypeNullable}
   */
  public static final class JavaTypeNullable extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dataflow.calcite.JavaTypeNullable)
      JavaTypeNullableOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JavaTypeNullable.newBuilder() to construct.
    private JavaTypeNullable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JavaTypeNullable() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JavaTypeNullable();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JavaTypeNullable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder subBuilder = null;
              if (javaTypeNullableCase_ == 1) {
                subBuilder = ((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_).toBuilder();
              }
              javaTypeNullable_ =
                  input.readMessage(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_);
                javaTypeNullable_ = subBuilder.buildPartial();
              }
              javaTypeNullableCase_ = 1;
              break;
            }
            case 16: {
              javaTypeNullable_ = input.readBool();
              javaTypeNullableCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaTypeNullable_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaTypeNullable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.class, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.Builder.class);
    }

    private int javaTypeNullableCase_ = 0;
    private java.lang.Object javaTypeNullable_;
    public enum JavaTypeNullableCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      TYPE(1),
      IS_NULL(2),
      JAVATYPENULLABLE_NOT_SET(0);
      private final int value;
      private JavaTypeNullableCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static JavaTypeNullableCase valueOf(int value) {
        return forNumber(value);
      }

      public static JavaTypeNullableCase forNumber(int value) {
        switch (value) {
          case 1: return TYPE;
          case 2: return IS_NULL;
          case 0: return JAVATYPENULLABLE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public JavaTypeNullableCase
    getJavaTypeNullableCase() {
      return JavaTypeNullableCase.forNumber(
          javaTypeNullableCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    /**
     * <code>.dataflow.calcite.JavaType type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return javaTypeNullableCase_ == 1;
    }
    /**
     * <code>.dataflow.calcite.JavaType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getType() {
      if (javaTypeNullableCase_ == 1) {
         return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_;
      }
      return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance();
    }
    /**
     * <code>.dataflow.calcite.JavaType type = 1;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getTypeOrBuilder() {
      if (javaTypeNullableCase_ == 1) {
         return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_;
      }
      return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance();
    }

    public static final int IS_NULL_FIELD_NUMBER = 2;
    /**
     * <code>bool is_null = 2;</code>
     * @return Whether the isNull field is set.
     */
    @java.lang.Override
    public boolean hasIsNull() {
      return javaTypeNullableCase_ == 2;
    }
    /**
     * <code>bool is_null = 2;</code>
     * @return The isNull.
     */
    @java.lang.Override
    public boolean getIsNull() {
      if (javaTypeNullableCase_ == 2) {
        return (java.lang.Boolean) javaTypeNullable_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (javaTypeNullableCase_ == 1) {
        output.writeMessage(1, (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_);
      }
      if (javaTypeNullableCase_ == 2) {
        output.writeBool(
            2, (boolean)((java.lang.Boolean) javaTypeNullable_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (javaTypeNullableCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_);
      }
      if (javaTypeNullableCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              2, (boolean)((java.lang.Boolean) javaTypeNullable_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable)) {
        return super.equals(obj);
      }
      io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable other = (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable) obj;

      if (!getJavaTypeNullableCase().equals(other.getJavaTypeNullableCase())) return false;
      switch (javaTypeNullableCase_) {
        case 1:
          if (!getType()
              .equals(other.getType())) return false;
          break;
        case 2:
          if (getIsNull()
              != other.getIsNull()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (javaTypeNullableCase_) {
        case 1:
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getType().hashCode();
          break;
        case 2:
          hash = (37 * hash) + IS_NULL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsNull());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dataflow.calcite.JavaTypeNullable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dataflow.calcite.JavaTypeNullable)
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaTypeNullable_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaTypeNullable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.class, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.Builder.class);
      }

      // Construct using io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        javaTypeNullableCase_ = 0;
        javaTypeNullable_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.internal_static_dataflow_calcite_JavaTypeNullable_descriptor;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable getDefaultInstanceForType() {
        return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.getDefaultInstance();
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable build() {
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable buildPartial() {
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable result = new io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable(this);
        if (javaTypeNullableCase_ == 1) {
          if (typeBuilder_ == null) {
            result.javaTypeNullable_ = javaTypeNullable_;
          } else {
            result.javaTypeNullable_ = typeBuilder_.build();
          }
        }
        if (javaTypeNullableCase_ == 2) {
          result.javaTypeNullable_ = javaTypeNullable_;
        }
        result.javaTypeNullableCase_ = javaTypeNullableCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable) {
          return mergeFrom((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable other) {
        if (other == io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable.getDefaultInstance()) return this;
        switch (other.getJavaTypeNullableCase()) {
          case TYPE: {
            mergeType(other.getType());
            break;
          }
          case IS_NULL: {
            setIsNull(other.getIsNull());
            break;
          }
          case JAVATYPENULLABLE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int javaTypeNullableCase_ = 0;
      private java.lang.Object javaTypeNullable_;
      public JavaTypeNullableCase
          getJavaTypeNullableCase() {
        return JavaTypeNullableCase.forNumber(
            javaTypeNullableCase_);
      }

      public Builder clearJavaTypeNullable() {
        javaTypeNullableCase_ = 0;
        javaTypeNullable_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> typeBuilder_;
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return javaTypeNullableCase_ == 1;
      }
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType getType() {
        if (typeBuilder_ == null) {
          if (javaTypeNullableCase_ == 1) {
            return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_;
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance();
        } else {
          if (javaTypeNullableCase_ == 1) {
            return typeBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       */
      public Builder setType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          javaTypeNullable_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        javaTypeNullableCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       */
      public Builder setType(
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          javaTypeNullable_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        javaTypeNullableCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       */
      public Builder mergeType(io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType value) {
        if (typeBuilder_ == null) {
          if (javaTypeNullableCase_ == 1 &&
              javaTypeNullable_ != io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance()) {
            javaTypeNullable_ = io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.newBuilder((io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_)
                .mergeFrom(value).buildPartial();
          } else {
            javaTypeNullable_ = value;
          }
          onChanged();
        } else {
          if (javaTypeNullableCase_ == 1) {
            typeBuilder_.mergeFrom(value);
          }
          typeBuilder_.setMessage(value);
        }
        javaTypeNullableCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          if (javaTypeNullableCase_ == 1) {
            javaTypeNullableCase_ = 0;
            javaTypeNullable_ = null;
            onChanged();
          }
        } else {
          if (javaTypeNullableCase_ == 1) {
            javaTypeNullableCase_ = 0;
            javaTypeNullable_ = null;
          }
          typeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       */
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder getTypeBuilder() {
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder getTypeOrBuilder() {
        if ((javaTypeNullableCase_ == 1) && (typeBuilder_ != null)) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          if (javaTypeNullableCase_ == 1) {
            return (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_;
          }
          return io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.JavaType type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          if (!(javaTypeNullableCase_ == 1)) {
            javaTypeNullable_ = io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.getDefaultInstance();
          }
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType.Builder, io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeOrBuilder>(
                  (io.activej.dataflow.proto.calcite.JavaTypeProto.JavaType) javaTypeNullable_,
                  getParentForChildren(),
                  isClean());
          javaTypeNullable_ = null;
        }
        javaTypeNullableCase_ = 1;
        onChanged();;
        return typeBuilder_;
      }

      /**
       * <code>bool is_null = 2;</code>
       * @return Whether the isNull field is set.
       */
      public boolean hasIsNull() {
        return javaTypeNullableCase_ == 2;
      }
      /**
       * <code>bool is_null = 2;</code>
       * @return The isNull.
       */
      public boolean getIsNull() {
        if (javaTypeNullableCase_ == 2) {
          return (java.lang.Boolean) javaTypeNullable_;
        }
        return false;
      }
      /**
       * <code>bool is_null = 2;</code>
       * @param value The isNull to set.
       * @return This builder for chaining.
       */
      public Builder setIsNull(boolean value) {
        javaTypeNullableCase_ = 2;
        javaTypeNullable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_null = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsNull() {
        if (javaTypeNullableCase_ == 2) {
          javaTypeNullableCase_ = 0;
          javaTypeNullable_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dataflow.calcite.JavaTypeNullable)
    }

    // @@protoc_insertion_point(class_scope:dataflow.calcite.JavaTypeNullable)
    private static final io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable();
    }

    public static io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JavaTypeNullable>
        PARSER = new com.google.protobuf.AbstractParser<JavaTypeNullable>() {
      @java.lang.Override
      public JavaTypeNullable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JavaTypeNullable(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JavaTypeNullable> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JavaTypeNullable> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.activej.dataflow.proto.calcite.JavaTypeProto.JavaTypeNullable getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_JavaType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_JavaType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_JavaType_JavaParameterizedType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_JavaType_JavaParameterizedType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_JavaTypeNullable_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_JavaTypeNullable_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027calcite/java_type.proto\022\020dataflow.calc" +
      "ite\032\020java_class.proto\"\347\003\n\010JavaType\022)\n\nja" +
      "va_class\030\001 \001(\0132\023.dataflow.JavaClassH\000\022S\n" +
      "\027java_parameterized_type\030\002 \001(\01320.dataflo" +
      "w.calcite.JavaType.JavaParameterizedType" +
      "H\000\022R\n\027java_generic_array_type\030\003 \001(\0132/.da" +
      "taflow.calcite.JavaType.JavaGenericArray" +
      "TypeH\000\032\255\001\n\025JavaParameterizedType\0226\n\nowne" +
      "r_type\030\001 \001(\0132\".dataflow.calcite.JavaType" +
      "Nullable\022,\n\010raw_type\030\002 \001(\0132\032.dataflow.ca" +
      "lcite.JavaType\022.\n\nparameters\030\003 \003(\0132\032.dat" +
      "aflow.calcite.JavaType\032J\n\024JavaGenericArr" +
      "ayType\0222\n\016component_type\030\001 \001(\0132\032.dataflo" +
      "w.calcite.JavaTypeB\013\n\tjava_type\"g\n\020JavaT" +
      "ypeNullable\022*\n\004type\030\001 \001(\0132\032.dataflow.cal" +
      "cite.JavaTypeH\000\022\021\n\007is_null\030\002 \001(\010H\000B\024\n\022ja" +
      "va_type_nullableB4\n!io.activej.dataflow." +
      "proto.calciteB\rJavaTypeProtoP\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.activej.dataflow.proto.JavaClassProto.getDescriptor(),
        });
    internal_static_dataflow_calcite_JavaType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dataflow_calcite_JavaType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_JavaType_descriptor,
        new java.lang.String[] { "JavaClass", "JavaParameterizedType", "JavaGenericArrayType", "JavaType", });
    internal_static_dataflow_calcite_JavaType_JavaParameterizedType_descriptor =
      internal_static_dataflow_calcite_JavaType_descriptor.getNestedTypes().get(0);
    internal_static_dataflow_calcite_JavaType_JavaParameterizedType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_JavaType_JavaParameterizedType_descriptor,
        new java.lang.String[] { "OwnerType", "RawType", "Parameters", });
    internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_descriptor =
      internal_static_dataflow_calcite_JavaType_descriptor.getNestedTypes().get(1);
    internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_JavaType_JavaGenericArrayType_descriptor,
        new java.lang.String[] { "ComponentType", });
    internal_static_dataflow_calcite_JavaTypeNullable_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dataflow_calcite_JavaTypeNullable_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_JavaTypeNullable_descriptor,
        new java.lang.String[] { "Type", "IsNull", "JavaTypeNullable", });
    io.activej.dataflow.proto.JavaClassProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
