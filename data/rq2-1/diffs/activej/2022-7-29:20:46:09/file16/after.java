// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RecordProjectionFn.proto

package io.activej.dataflow.proto.calcite;

public final class RecordProjectionFnProto {
  private RecordProjectionFnProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RecordProjectionFnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dataflow.calcite.RecordProjectionFn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    java.util.List<io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection> 
        getFieldProjectionsList();
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection getFieldProjections(int index);
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    int getFieldProjectionsCount();
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    java.util.List<? extends io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder> 
        getFieldProjectionsOrBuilderList();
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder getFieldProjectionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dataflow.calcite.RecordProjectionFn}
   */
  public static final class RecordProjectionFn extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dataflow.calcite.RecordProjectionFn)
      RecordProjectionFnOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RecordProjectionFn.newBuilder() to construct.
    private RecordProjectionFn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecordProjectionFn() {
      fieldProjections_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RecordProjectionFn();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RecordProjectionFn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fieldProjections_ = new java.util.ArrayList<io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection>();
                mutable_bitField0_ |= 0x00000001;
              }
              fieldProjections_.add(
                  input.readMessage(io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fieldProjections_ = java.util.Collections.unmodifiableList(fieldProjections_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.class, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.Builder.class);
    }

    public interface FieldProjectionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dataflow.calcite.RecordProjectionFn.FieldProjection)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.dataflow.calcite.Operand operand = 1;</code>
       * @return Whether the operand field is set.
       */
      boolean hasOperand();
      /**
       * <code>.dataflow.calcite.Operand operand = 1;</code>
       * @return The operand.
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand getOperand();
      /**
       * <code>.dataflow.calcite.Operand operand = 1;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getOperandOrBuilder();

      /**
       * <code>string value = 2;</code>
       * @return Whether the value field is set.
       */
      boolean hasValue();
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      java.lang.String getValue();
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      com.google.protobuf.ByteString
          getValueBytes();

      /**
       * <code>bool is_null = 3;</code>
       * @return Whether the isNull field is set.
       */
      boolean hasIsNull();
      /**
       * <code>bool is_null = 3;</code>
       * @return The isNull.
       */
      boolean getIsNull();

      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.FieldNameCase getFieldNameCase();
    }
    /**
     * Protobuf type {@code dataflow.calcite.RecordProjectionFn.FieldProjection}
     */
    public static final class FieldProjection extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dataflow.calcite.RecordProjectionFn.FieldProjection)
        FieldProjectionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use FieldProjection.newBuilder() to construct.
      private FieldProjection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FieldProjection() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new FieldProjection();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private FieldProjection(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder subBuilder = null;
                if (operand_ != null) {
                  subBuilder = operand_.toBuilder();
                }
                operand_ = input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operand_);
                  operand_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                fieldNameCase_ = 2;
                fieldName_ = s;
                break;
              }
              case 24: {
                fieldName_ = input.readBool();
                fieldNameCase_ = 3;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.class, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder.class);
      }

      private int fieldNameCase_ = 0;
      private java.lang.Object fieldName_;
      public enum FieldNameCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        VALUE(2),
        IS_NULL(3),
        FIELDNAME_NOT_SET(0);
        private final int value;
        private FieldNameCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static FieldNameCase valueOf(int value) {
          return forNumber(value);
        }

        public static FieldNameCase forNumber(int value) {
          switch (value) {
            case 2: return VALUE;
            case 3: return IS_NULL;
            case 0: return FIELDNAME_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public FieldNameCase
      getFieldNameCase() {
        return FieldNameCase.forNumber(
            fieldNameCase_);
      }

      public static final int OPERAND_FIELD_NUMBER = 1;
      private io.activej.dataflow.proto.calcite.OperandProto.Operand operand_;
      /**
       * <code>.dataflow.calcite.Operand operand = 1;</code>
       * @return Whether the operand field is set.
       */
      @java.lang.Override
      public boolean hasOperand() {
        return operand_ != null;
      }
      /**
       * <code>.dataflow.calcite.Operand operand = 1;</code>
       * @return The operand.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand getOperand() {
        return operand_ == null ? io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : operand_;
      }
      /**
       * <code>.dataflow.calcite.Operand operand = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getOperandOrBuilder() {
        return getOperand();
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      /**
       * <code>string value = 2;</code>
       * @return Whether the value field is set.
       */
      public boolean hasValue() {
        return fieldNameCase_ == 2;
      }
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = "";
        if (fieldNameCase_ == 2) {
          ref = fieldName_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (fieldNameCase_ == 2) {
            fieldName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = "";
        if (fieldNameCase_ == 2) {
          ref = fieldName_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (fieldNameCase_ == 2) {
            fieldName_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IS_NULL_FIELD_NUMBER = 3;
      /**
       * <code>bool is_null = 3;</code>
       * @return Whether the isNull field is set.
       */
      @java.lang.Override
      public boolean hasIsNull() {
        return fieldNameCase_ == 3;
      }
      /**
       * <code>bool is_null = 3;</code>
       * @return The isNull.
       */
      @java.lang.Override
      public boolean getIsNull() {
        if (fieldNameCase_ == 3) {
          return (java.lang.Boolean) fieldName_;
        }
        return false;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (operand_ != null) {
          output.writeMessage(1, getOperand());
        }
        if (fieldNameCase_ == 2) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fieldName_);
        }
        if (fieldNameCase_ == 3) {
          output.writeBool(
              3, (boolean)((java.lang.Boolean) fieldName_));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (operand_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getOperand());
        }
        if (fieldNameCase_ == 2) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fieldName_);
        }
        if (fieldNameCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(
                3, (boolean)((java.lang.Boolean) fieldName_));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection)) {
          return super.equals(obj);
        }
        io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection other = (io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection) obj;

        if (hasOperand() != other.hasOperand()) return false;
        if (hasOperand()) {
          if (!getOperand()
              .equals(other.getOperand())) return false;
        }
        if (!getFieldNameCase().equals(other.getFieldNameCase())) return false;
        switch (fieldNameCase_) {
          case 2:
            if (!getValue()
                .equals(other.getValue())) return false;
            break;
          case 3:
            if (getIsNull()
                != other.getIsNull()) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasOperand()) {
          hash = (37 * hash) + OPERAND_FIELD_NUMBER;
          hash = (53 * hash) + getOperand().hashCode();
        }
        switch (fieldNameCase_) {
          case 2:
            hash = (37 * hash) + VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getValue().hashCode();
            break;
          case 3:
            hash = (37 * hash) + IS_NULL_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIsNull());
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dataflow.calcite.RecordProjectionFn.FieldProjection}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dataflow.calcite.RecordProjectionFn.FieldProjection)
          io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.class, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder.class);
        }

        // Construct using io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (operandBuilder_ == null) {
            operand_ = null;
          } else {
            operand_ = null;
            operandBuilder_ = null;
          }
          fieldNameCase_ = 0;
          fieldName_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_descriptor;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection getDefaultInstanceForType() {
          return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.getDefaultInstance();
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection build() {
          io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection buildPartial() {
          io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection result = new io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection(this);
          if (operandBuilder_ == null) {
            result.operand_ = operand_;
          } else {
            result.operand_ = operandBuilder_.build();
          }
          if (fieldNameCase_ == 2) {
            result.fieldName_ = fieldName_;
          }
          if (fieldNameCase_ == 3) {
            result.fieldName_ = fieldName_;
          }
          result.fieldNameCase_ = fieldNameCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection) {
            return mergeFrom((io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection other) {
          if (other == io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.getDefaultInstance()) return this;
          if (other.hasOperand()) {
            mergeOperand(other.getOperand());
          }
          switch (other.getFieldNameCase()) {
            case VALUE: {
              fieldNameCase_ = 2;
              fieldName_ = other.fieldName_;
              onChanged();
              break;
            }
            case IS_NULL: {
              setIsNull(other.getIsNull());
              break;
            }
            case FIELDNAME_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int fieldNameCase_ = 0;
        private java.lang.Object fieldName_;
        public FieldNameCase
            getFieldNameCase() {
          return FieldNameCase.forNumber(
              fieldNameCase_);
        }

        public Builder clearFieldName() {
          fieldNameCase_ = 0;
          fieldName_ = null;
          onChanged();
          return this;
        }


        private io.activej.dataflow.proto.calcite.OperandProto.Operand operand_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> operandBuilder_;
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         * @return Whether the operand field is set.
         */
        public boolean hasOperand() {
          return operandBuilder_ != null || operand_ != null;
        }
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         * @return The operand.
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand getOperand() {
          if (operandBuilder_ == null) {
            return operand_ == null ? io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : operand_;
          } else {
            return operandBuilder_.getMessage();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         */
        public Builder setOperand(io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (operandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operand_ = value;
            onChanged();
          } else {
            operandBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         */
        public Builder setOperand(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder builderForValue) {
          if (operandBuilder_ == null) {
            operand_ = builderForValue.build();
            onChanged();
          } else {
            operandBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         */
        public Builder mergeOperand(io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (operandBuilder_ == null) {
            if (operand_ != null) {
              operand_ =
                io.activej.dataflow.proto.calcite.OperandProto.Operand.newBuilder(operand_).mergeFrom(value).buildPartial();
            } else {
              operand_ = value;
            }
            onChanged();
          } else {
            operandBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         */
        public Builder clearOperand() {
          if (operandBuilder_ == null) {
            operand_ = null;
            onChanged();
          } else {
            operand_ = null;
            operandBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder getOperandBuilder() {
          
          onChanged();
          return getOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getOperandOrBuilder() {
          if (operandBuilder_ != null) {
            return operandBuilder_.getMessageOrBuilder();
          } else {
            return operand_ == null ?
                io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : operand_;
          }
        }
        /**
         * <code>.dataflow.calcite.Operand operand = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> 
            getOperandFieldBuilder() {
          if (operandBuilder_ == null) {
            operandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder>(
                    getOperand(),
                    getParentForChildren(),
                    isClean());
            operand_ = null;
          }
          return operandBuilder_;
        }

        /**
         * <code>string value = 2;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return fieldNameCase_ == 2;
        }
        /**
         * <code>string value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public java.lang.String getValue() {
          java.lang.Object ref = "";
          if (fieldNameCase_ == 2) {
            ref = fieldName_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (fieldNameCase_ == 2) {
              fieldName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string value = 2;</code>
         * @return The bytes for value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = "";
          if (fieldNameCase_ == 2) {
            ref = fieldName_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (fieldNameCase_ == 2) {
              fieldName_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string value = 2;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  fieldNameCase_ = 2;
          fieldName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          if (fieldNameCase_ == 2) {
            fieldNameCase_ = 0;
            fieldName_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>string value = 2;</code>
         * @param value The bytes for value to set.
         * @return This builder for chaining.
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          fieldNameCase_ = 2;
          fieldName_ = value;
          onChanged();
          return this;
        }

        /**
         * <code>bool is_null = 3;</code>
         * @return Whether the isNull field is set.
         */
        public boolean hasIsNull() {
          return fieldNameCase_ == 3;
        }
        /**
         * <code>bool is_null = 3;</code>
         * @return The isNull.
         */
        public boolean getIsNull() {
          if (fieldNameCase_ == 3) {
            return (java.lang.Boolean) fieldName_;
          }
          return false;
        }
        /**
         * <code>bool is_null = 3;</code>
         * @param value The isNull to set.
         * @return This builder for chaining.
         */
        public Builder setIsNull(boolean value) {
          fieldNameCase_ = 3;
          fieldName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool is_null = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsNull() {
          if (fieldNameCase_ == 3) {
            fieldNameCase_ = 0;
            fieldName_ = null;
            onChanged();
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dataflow.calcite.RecordProjectionFn.FieldProjection)
      }

      // @@protoc_insertion_point(class_scope:dataflow.calcite.RecordProjectionFn.FieldProjection)
      private static final io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection();
      }

      public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<FieldProjection>
          PARSER = new com.google.protobuf.AbstractParser<FieldProjection>() {
        @java.lang.Override
        public FieldProjection parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FieldProjection(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FieldProjection> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FieldProjection> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int FIELD_PROJECTIONS_FIELD_NUMBER = 1;
    private java.util.List<io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection> fieldProjections_;
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection> getFieldProjectionsList() {
      return fieldProjections_;
    }
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder> 
        getFieldProjectionsOrBuilderList() {
      return fieldProjections_;
    }
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    @java.lang.Override
    public int getFieldProjectionsCount() {
      return fieldProjections_.size();
    }
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection getFieldProjections(int index) {
      return fieldProjections_.get(index);
    }
    /**
     * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder getFieldProjectionsOrBuilder(
        int index) {
      return fieldProjections_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fieldProjections_.size(); i++) {
        output.writeMessage(1, fieldProjections_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fieldProjections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fieldProjections_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn)) {
        return super.equals(obj);
      }
      io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn other = (io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn) obj;

      if (!getFieldProjectionsList()
          .equals(other.getFieldProjectionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFieldProjectionsCount() > 0) {
        hash = (37 * hash) + FIELD_PROJECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldProjectionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dataflow.calcite.RecordProjectionFn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dataflow.calcite.RecordProjectionFn)
        io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.class, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.Builder.class);
      }

      // Construct using io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldProjectionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fieldProjectionsBuilder_ == null) {
          fieldProjections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldProjectionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.internal_static_dataflow_calcite_RecordProjectionFn_descriptor;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn getDefaultInstanceForType() {
        return io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.getDefaultInstance();
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn build() {
        io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn buildPartial() {
        io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn result = new io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn(this);
        int from_bitField0_ = bitField0_;
        if (fieldProjectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fieldProjections_ = java.util.Collections.unmodifiableList(fieldProjections_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fieldProjections_ = fieldProjections_;
        } else {
          result.fieldProjections_ = fieldProjectionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn) {
          return mergeFrom((io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn other) {
        if (other == io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.getDefaultInstance()) return this;
        if (fieldProjectionsBuilder_ == null) {
          if (!other.fieldProjections_.isEmpty()) {
            if (fieldProjections_.isEmpty()) {
              fieldProjections_ = other.fieldProjections_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldProjectionsIsMutable();
              fieldProjections_.addAll(other.fieldProjections_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldProjections_.isEmpty()) {
            if (fieldProjectionsBuilder_.isEmpty()) {
              fieldProjectionsBuilder_.dispose();
              fieldProjectionsBuilder_ = null;
              fieldProjections_ = other.fieldProjections_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldProjectionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldProjectionsFieldBuilder() : null;
            } else {
              fieldProjectionsBuilder_.addAllMessages(other.fieldProjections_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection> fieldProjections_ =
        java.util.Collections.emptyList();
      private void ensureFieldProjectionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fieldProjections_ = new java.util.ArrayList<io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection>(fieldProjections_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder> fieldProjectionsBuilder_;

      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public java.util.List<io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection> getFieldProjectionsList() {
        if (fieldProjectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldProjections_);
        } else {
          return fieldProjectionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public int getFieldProjectionsCount() {
        if (fieldProjectionsBuilder_ == null) {
          return fieldProjections_.size();
        } else {
          return fieldProjectionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection getFieldProjections(int index) {
        if (fieldProjectionsBuilder_ == null) {
          return fieldProjections_.get(index);
        } else {
          return fieldProjectionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder setFieldProjections(
          int index, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection value) {
        if (fieldProjectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldProjectionsIsMutable();
          fieldProjections_.set(index, value);
          onChanged();
        } else {
          fieldProjectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder setFieldProjections(
          int index, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder builderForValue) {
        if (fieldProjectionsBuilder_ == null) {
          ensureFieldProjectionsIsMutable();
          fieldProjections_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldProjectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder addFieldProjections(io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection value) {
        if (fieldProjectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldProjectionsIsMutable();
          fieldProjections_.add(value);
          onChanged();
        } else {
          fieldProjectionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder addFieldProjections(
          int index, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection value) {
        if (fieldProjectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldProjectionsIsMutable();
          fieldProjections_.add(index, value);
          onChanged();
        } else {
          fieldProjectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder addFieldProjections(
          io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder builderForValue) {
        if (fieldProjectionsBuilder_ == null) {
          ensureFieldProjectionsIsMutable();
          fieldProjections_.add(builderForValue.build());
          onChanged();
        } else {
          fieldProjectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder addFieldProjections(
          int index, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder builderForValue) {
        if (fieldProjectionsBuilder_ == null) {
          ensureFieldProjectionsIsMutable();
          fieldProjections_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldProjectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder addAllFieldProjections(
          java.lang.Iterable<? extends io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection> values) {
        if (fieldProjectionsBuilder_ == null) {
          ensureFieldProjectionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldProjections_);
          onChanged();
        } else {
          fieldProjectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder clearFieldProjections() {
        if (fieldProjectionsBuilder_ == null) {
          fieldProjections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldProjectionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public Builder removeFieldProjections(int index) {
        if (fieldProjectionsBuilder_ == null) {
          ensureFieldProjectionsIsMutable();
          fieldProjections_.remove(index);
          onChanged();
        } else {
          fieldProjectionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder getFieldProjectionsBuilder(
          int index) {
        return getFieldProjectionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder getFieldProjectionsOrBuilder(
          int index) {
        if (fieldProjectionsBuilder_ == null) {
          return fieldProjections_.get(index);  } else {
          return fieldProjectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public java.util.List<? extends io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder> 
           getFieldProjectionsOrBuilderList() {
        if (fieldProjectionsBuilder_ != null) {
          return fieldProjectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldProjections_);
        }
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder addFieldProjectionsBuilder() {
        return getFieldProjectionsFieldBuilder().addBuilder(
            io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.getDefaultInstance());
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder addFieldProjectionsBuilder(
          int index) {
        return getFieldProjectionsFieldBuilder().addBuilder(
            index, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.getDefaultInstance());
      }
      /**
       * <code>repeated .dataflow.calcite.RecordProjectionFn.FieldProjection field_projections = 1;</code>
       */
      public java.util.List<io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder> 
           getFieldProjectionsBuilderList() {
        return getFieldProjectionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder> 
          getFieldProjectionsFieldBuilder() {
        if (fieldProjectionsBuilder_ == null) {
          fieldProjectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjection.Builder, io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn.FieldProjectionOrBuilder>(
                  fieldProjections_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fieldProjections_ = null;
        }
        return fieldProjectionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dataflow.calcite.RecordProjectionFn)
    }

    // @@protoc_insertion_point(class_scope:dataflow.calcite.RecordProjectionFn)
    private static final io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn();
    }

    public static io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecordProjectionFn>
        PARSER = new com.google.protobuf.AbstractParser<RecordProjectionFn>() {
      @java.lang.Override
      public RecordProjectionFn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecordProjectionFn(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecordProjectionFn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecordProjectionFn> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.activej.dataflow.proto.calcite.RecordProjectionFnProto.RecordProjectionFn getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_RecordProjectionFn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_RecordProjectionFn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030RecordProjectionFn.proto\022\020dataflow.cal" +
      "cite\032\roperand.proto\"\326\001\n\022RecordProjection" +
      "Fn\022O\n\021field_projections\030\001 \003(\01324.dataflow" +
      ".calcite.RecordProjectionFn.FieldProject" +
      "ion\032o\n\017FieldProjection\022*\n\007operand\030\001 \001(\0132" +
      "\031.dataflow.calcite.Operand\022\017\n\005value\030\002 \001(" +
      "\tH\000\022\021\n\007is_null\030\003 \001(\010H\000B\014\n\nfield_nameB>\n!" +
      "io.activej.dataflow.proto.calciteB\027Recor" +
      "dProjectionFnProtoP\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.activej.dataflow.proto.calcite.OperandProto.getDescriptor(),
        });
    internal_static_dataflow_calcite_RecordProjectionFn_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dataflow_calcite_RecordProjectionFn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_RecordProjectionFn_descriptor,
        new java.lang.String[] { "FieldProjections", });
    internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_descriptor =
      internal_static_dataflow_calcite_RecordProjectionFn_descriptor.getNestedTypes().get(0);
    internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_RecordProjectionFn_FieldProjection_descriptor,
        new java.lang.String[] { "Operand", "Value", "IsNull", "FieldName", });
    io.activej.dataflow.proto.calcite.OperandProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
