// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calcite/operand.proto

package io.activej.dataflow.proto.calcite;

public final class OperandProto {
  private OperandProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OperandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
     * @return Whether the recordField field is set.
     */
    boolean hasRecordField();
    /**
     * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
     * @return The recordField.
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField getRecordField();
    /**
     * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordFieldOrBuilder getRecordFieldOrBuilder();

    /**
     * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
     * @return Whether the scalar field is set.
     */
    boolean hasScalar();
    /**
     * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
     * @return The scalar.
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar getScalar();
    /**
     * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.ScalarOrBuilder getScalarOrBuilder();

    /**
     * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
     * @return Whether the fieldGet field is set.
     */
    boolean hasFieldGet();
    /**
     * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
     * @return The fieldGet.
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet getFieldGet();
    /**
     * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGetOrBuilder getFieldGetOrBuilder();

    /**
     * <code>.dataflow.calcite.Operand.Function function = 4;</code>
     * @return Whether the function field is set.
     */
    boolean hasFunction();
    /**
     * <code>.dataflow.calcite.Operand.Function function = 4;</code>
     * @return The function.
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.Function getFunction();
    /**
     * <code>.dataflow.calcite.Operand.Function function = 4;</code>
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.FunctionOrBuilder getFunctionOrBuilder();

    /**
     * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
     * @return Whether the cast field is set.
     */
    boolean hasCast();
    /**
     * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
     * @return The cast.
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast getCast();
    /**
     * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
     */
    io.activej.dataflow.proto.calcite.OperandProto.Operand.CastOrBuilder getCastOrBuilder();

    public io.activej.dataflow.proto.calcite.OperandProto.Operand.OperandCase getOperandCase();
  }
  /**
   * Protobuf type {@code dataflow.calcite.Operand}
   */
  public static final class Operand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand)
      OperandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Operand.newBuilder() to construct.
    private Operand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Operand() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Operand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Operand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.Builder subBuilder = null;
              if (operandCase_ == 1) {
                subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_).toBuilder();
              }
              operand_ =
                  input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_);
                operand_ = subBuilder.buildPartial();
              }
              operandCase_ = 1;
              break;
            }
            case 18: {
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Builder subBuilder = null;
              if (operandCase_ == 2) {
                subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_).toBuilder();
              }
              operand_ =
                  input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_);
                operand_ = subBuilder.buildPartial();
              }
              operandCase_ = 2;
              break;
            }
            case 26: {
              io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.Builder subBuilder = null;
              if (operandCase_ == 3) {
                subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_).toBuilder();
              }
              operand_ =
                  input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_);
                operand_ = subBuilder.buildPartial();
              }
              operandCase_ = 3;
              break;
            }
            case 34: {
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.Builder subBuilder = null;
              if (operandCase_ == 4) {
                subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_).toBuilder();
              }
              operand_ =
                  input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_);
                operand_ = subBuilder.buildPartial();
              }
              operandCase_ = 4;
              break;
            }
            case 42: {
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.Builder subBuilder = null;
              if (operandCase_ == 5) {
                subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_).toBuilder();
              }
              operand_ =
                  input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_);
                operand_ = subBuilder.buildPartial();
              }
              operandCase_ = 5;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.activej.dataflow.proto.calcite.OperandProto.Operand.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder.class);
    }

    public interface RecordFieldOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.RecordField)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * string
       * </pre>
       *
       * <code>int32 index = 1;</code>
       * @return The index.
       */
      int getIndex();
    }
    /**
     * Protobuf type {@code dataflow.calcite.Operand.RecordField}
     */
    public static final class RecordField extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.RecordField)
        RecordFieldOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RecordField.newBuilder() to construct.
      private RecordField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RecordField() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RecordField();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RecordField(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                index_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_RecordField_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_RecordField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.Builder.class);
      }

      public static final int INDEX_FIELD_NUMBER = 1;
      private int index_;
      /**
       * <pre>
       * string
       * </pre>
       *
       * <code>int32 index = 1;</code>
       * @return The index.
       */
      @java.lang.Override
      public int getIndex() {
        return index_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (index_ != 0) {
          output.writeInt32(1, index_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (index_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, index_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField)) {
          return super.equals(obj);
        }
        io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) obj;

        if (getIndex()
            != other.getIndex()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getIndex();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.RecordField}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.RecordField)
          io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordFieldOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_RecordField_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_RecordField_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.Builder.class);
        }

        // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          index_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_RecordField_descriptor;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField getDefaultInstanceForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance();
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField build() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField buildPartial() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField(this);
          result.index_ = index_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) {
            return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField other) {
          if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance()) return this;
          if (other.getIndex() != 0) {
            setIndex(other.getIndex());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int index_ ;
        /**
         * <pre>
         * string
         * </pre>
         *
         * <code>int32 index = 1;</code>
         * @return The index.
         */
        @java.lang.Override
        public int getIndex() {
          return index_;
        }
        /**
         * <pre>
         * string
         * </pre>
         *
         * <code>int32 index = 1;</code>
         * @param value The index to set.
         * @return This builder for chaining.
         */
        public Builder setIndex(int value) {
          
          index_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * string
         * </pre>
         *
         * <code>int32 index = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearIndex() {
          
          index_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.RecordField)
      }

      // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.RecordField)
      private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField();
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RecordField>
          PARSER = new com.google.protobuf.AbstractParser<RecordField>() {
        @java.lang.Override
        public RecordField parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RecordField(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RecordField> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RecordField> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ScalarOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Scalar)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
       * @return Whether the null field is set.
       */
      boolean hasNull();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
       * @return The null.
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None getNull();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.NoneOrBuilder getNullOrBuilder();

      /**
       * <code>int32 integer = 2;</code>
       * @return Whether the integer field is set.
       */
      boolean hasInteger();
      /**
       * <code>int32 integer = 2;</code>
       * @return The integer.
       */
      int getInteger();

      /**
       * <code>int64 long = 3;</code>
       * @return Whether the long field is set.
       */
      boolean hasLong();
      /**
       * <code>int64 long = 3;</code>
       * @return The long.
       */
      long getLong();

      /**
       * <code>float float = 4;</code>
       * @return Whether the float field is set.
       */
      boolean hasFloat();
      /**
       * <code>float float = 4;</code>
       * @return The float.
       */
      float getFloat();

      /**
       * <code>double double = 5;</code>
       * @return Whether the double field is set.
       */
      boolean hasDouble();
      /**
       * <code>double double = 5;</code>
       * @return The double.
       */
      double getDouble();

      /**
       * <code>bool boolean = 6;</code>
       * @return Whether the boolean field is set.
       */
      boolean hasBoolean();
      /**
       * <code>bool boolean = 6;</code>
       * @return The boolean.
       */
      boolean getBoolean();

      /**
       * <code>string string = 7;</code>
       * @return Whether the string field is set.
       */
      boolean hasString();
      /**
       * <code>string string = 7;</code>
       * @return The string.
       */
      java.lang.String getString();
      /**
       * <code>string string = 7;</code>
       * @return The bytes for string.
       */
      com.google.protobuf.ByteString
          getStringBytes();

      /**
       * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
       * @return Whether the bigDecimal field is set.
       */
      boolean hasBigDecimal();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
       * @return The bigDecimal.
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal getBigDecimal();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimalOrBuilder getBigDecimalOrBuilder();

      /**
       * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
       * @return Whether the date field is set.
       */
      boolean hasDate();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
       * @return The date.
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date getDate();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.DateOrBuilder getDateOrBuilder();

      /**
       * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
       * @return Whether the time field is set.
       */
      boolean hasTime();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
       * @return The time.
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time getTime();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimeOrBuilder getTimeOrBuilder();

      /**
       * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
       * @return Whether the timestamp field is set.
       */
      boolean hasTimestamp();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
       * @return The timestamp.
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp getTimestamp();
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimestampOrBuilder getTimestampOrBuilder();

      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.ValueCase getValueCase();
    }
    /**
     * Protobuf type {@code dataflow.calcite.Operand.Scalar}
     */
    public static final class Scalar extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Scalar)
        ScalarOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Scalar.newBuilder() to construct.
      private Scalar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Scalar() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Scalar();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Scalar(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.Builder subBuilder = null;
                if (valueCase_ == 1) {
                  subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_).toBuilder();
                }
                value_ =
                    input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 1;
                break;
              }
              case 16: {
                value_ = input.readInt32();
                valueCase_ = 2;
                break;
              }
              case 24: {
                value_ = input.readInt64();
                valueCase_ = 3;
                break;
              }
              case 37: {
                value_ = input.readFloat();
                valueCase_ = 4;
                break;
              }
              case 41: {
                value_ = input.readDouble();
                valueCase_ = 5;
                break;
              }
              case 48: {
                value_ = input.readBool();
                valueCase_ = 6;
                break;
              }
              case 58: {
                java.lang.String s = input.readStringRequireUtf8();
                valueCase_ = 7;
                value_ = s;
                break;
              }
              case 66: {
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.Builder subBuilder = null;
                if (valueCase_ == 8) {
                  subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_).toBuilder();
                }
                value_ =
                    input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 8;
                break;
              }
              case 74: {
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.Builder subBuilder = null;
                if (valueCase_ == 9) {
                  subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_).toBuilder();
                }
                value_ =
                    input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 9;
                break;
              }
              case 82: {
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.Builder subBuilder = null;
                if (valueCase_ == 10) {
                  subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_).toBuilder();
                }
                value_ =
                    input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 10;
                break;
              }
              case 90: {
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.Builder subBuilder = null;
                if (valueCase_ == 11) {
                  subBuilder = ((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_).toBuilder();
                }
                value_ =
                    input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 11;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Builder.class);
      }

      public interface NoneOrBuilder extends
          // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Scalar.None)
          com.google.protobuf.MessageOrBuilder {
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Scalar.None}
       */
      public static final class None extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Scalar.None)
          NoneOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use None.newBuilder() to construct.
        private None(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private None() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new None();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private None(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_None_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_None_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.Builder.class);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None)) {
            return super.equals(obj);
          }
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) obj;

          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code dataflow.calcite.Operand.Scalar.None}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Scalar.None)
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.NoneOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_None_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_None_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.Builder.class);
          }

          // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_None_descriptor;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None getDefaultInstanceForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance();
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None build() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None buildPartial() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None(this);
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) {
              return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None other) {
            if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance()) return this;
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Scalar.None)
        }

        // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Scalar.None)
        private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None();
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<None>
            PARSER = new com.google.protobuf.AbstractParser<None>() {
          @java.lang.Override
          public None parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new None(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<None> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<None> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface BDecimalOrBuilder extends
          // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Scalar.BDecimal)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int32 scale = 1;</code>
         * @return The scale.
         */
        int getScale();

        /**
         * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
         * @return Whether the intVal field is set.
         */
        boolean hasIntVal();
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
         * @return The intVal.
         */
        io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger getIntVal();
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
         */
        io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BIntegerOrBuilder getIntValOrBuilder();
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Scalar.BDecimal}
       */
      public static final class BDecimal extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Scalar.BDecimal)
          BDecimalOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use BDecimal.newBuilder() to construct.
        private BDecimal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private BDecimal() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new BDecimal();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private BDecimal(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  scale_ = input.readInt32();
                  break;
                }
                case 18: {
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.Builder subBuilder = null;
                  if (intVal_ != null) {
                    subBuilder = intVal_.toBuilder();
                  }
                  intVal_ = input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(intVal_);
                    intVal_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BDecimal_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BDecimal_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.Builder.class);
        }

        public static final int SCALE_FIELD_NUMBER = 1;
        private int scale_;
        /**
         * <code>int32 scale = 1;</code>
         * @return The scale.
         */
        @java.lang.Override
        public int getScale() {
          return scale_;
        }

        public static final int INT_VAL_FIELD_NUMBER = 2;
        private io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger intVal_;
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
         * @return Whether the intVal field is set.
         */
        @java.lang.Override
        public boolean hasIntVal() {
          return intVal_ != null;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
         * @return The intVal.
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger getIntVal() {
          return intVal_ == null ? io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.getDefaultInstance() : intVal_;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BIntegerOrBuilder getIntValOrBuilder() {
          return getIntVal();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (scale_ != 0) {
            output.writeInt32(1, scale_);
          }
          if (intVal_ != null) {
            output.writeMessage(2, getIntVal());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (scale_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, scale_);
          }
          if (intVal_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getIntVal());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal)) {
            return super.equals(obj);
          }
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) obj;

          if (getScale()
              != other.getScale()) return false;
          if (hasIntVal() != other.hasIntVal()) return false;
          if (hasIntVal()) {
            if (!getIntVal()
                .equals(other.getIntVal())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SCALE_FIELD_NUMBER;
          hash = (53 * hash) + getScale();
          if (hasIntVal()) {
            hash = (37 * hash) + INT_VAL_FIELD_NUMBER;
            hash = (53 * hash) + getIntVal().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code dataflow.calcite.Operand.Scalar.BDecimal}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Scalar.BDecimal)
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimalOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BDecimal_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BDecimal_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.Builder.class);
          }

          // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            scale_ = 0;

            if (intValBuilder_ == null) {
              intVal_ = null;
            } else {
              intVal_ = null;
              intValBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BDecimal_descriptor;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal getDefaultInstanceForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance();
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal build() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal buildPartial() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal(this);
            result.scale_ = scale_;
            if (intValBuilder_ == null) {
              result.intVal_ = intVal_;
            } else {
              result.intVal_ = intValBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) {
              return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal other) {
            if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance()) return this;
            if (other.getScale() != 0) {
              setScale(other.getScale());
            }
            if (other.hasIntVal()) {
              mergeIntVal(other.getIntVal());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private int scale_ ;
          /**
           * <code>int32 scale = 1;</code>
           * @return The scale.
           */
          @java.lang.Override
          public int getScale() {
            return scale_;
          }
          /**
           * <code>int32 scale = 1;</code>
           * @param value The scale to set.
           * @return This builder for chaining.
           */
          public Builder setScale(int value) {
            
            scale_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 scale = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearScale() {
            
            scale_ = 0;
            onChanged();
            return this;
          }

          private io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger intVal_;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BIntegerOrBuilder> intValBuilder_;
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           * @return Whether the intVal field is set.
           */
          public boolean hasIntVal() {
            return intValBuilder_ != null || intVal_ != null;
          }
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           * @return The intVal.
           */
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger getIntVal() {
            if (intValBuilder_ == null) {
              return intVal_ == null ? io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.getDefaultInstance() : intVal_;
            } else {
              return intValBuilder_.getMessage();
            }
          }
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           */
          public Builder setIntVal(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger value) {
            if (intValBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              intVal_ = value;
              onChanged();
            } else {
              intValBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           */
          public Builder setIntVal(
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.Builder builderForValue) {
            if (intValBuilder_ == null) {
              intVal_ = builderForValue.build();
              onChanged();
            } else {
              intValBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           */
          public Builder mergeIntVal(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger value) {
            if (intValBuilder_ == null) {
              if (intVal_ != null) {
                intVal_ =
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.newBuilder(intVal_).mergeFrom(value).buildPartial();
              } else {
                intVal_ = value;
              }
              onChanged();
            } else {
              intValBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           */
          public Builder clearIntVal() {
            if (intValBuilder_ == null) {
              intVal_ = null;
              onChanged();
            } else {
              intVal_ = null;
              intValBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           */
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.Builder getIntValBuilder() {
            
            onChanged();
            return getIntValFieldBuilder().getBuilder();
          }
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           */
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BIntegerOrBuilder getIntValOrBuilder() {
            if (intValBuilder_ != null) {
              return intValBuilder_.getMessageOrBuilder();
            } else {
              return intVal_ == null ?
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.getDefaultInstance() : intVal_;
            }
          }
          /**
           * <code>.dataflow.calcite.Operand.Scalar.BInteger int_val = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BIntegerOrBuilder> 
              getIntValFieldBuilder() {
            if (intValBuilder_ == null) {
              intValBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BIntegerOrBuilder>(
                      getIntVal(),
                      getParentForChildren(),
                      isClean());
              intVal_ = null;
            }
            return intValBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Scalar.BDecimal)
        }

        // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Scalar.BDecimal)
        private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal();
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BDecimal>
            PARSER = new com.google.protobuf.AbstractParser<BDecimal>() {
          @java.lang.Override
          public BDecimal parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new BDecimal(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<BDecimal> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<BDecimal> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface BIntegerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Scalar.BInteger)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bytes value = 1;</code>
         * @return The value.
         */
        com.google.protobuf.ByteString getValue();
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Scalar.BInteger}
       */
      public static final class BInteger extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Scalar.BInteger)
          BIntegerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use BInteger.newBuilder() to construct.
        private BInteger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private BInteger() {
          value_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new BInteger();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private BInteger(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {

                  value_ = input.readBytes();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BInteger_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BInteger_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.Builder.class);
        }

        public static final int VALUE_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString value_;
        /**
         * <code>bytes value = 1;</code>
         * @return The value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getValue() {
          return value_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!value_.isEmpty()) {
            output.writeBytes(1, value_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!value_.isEmpty()) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, value_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger)) {
            return super.equals(obj);
          }
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger) obj;

          if (!getValue()
              .equals(other.getValue())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValue().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code dataflow.calcite.Operand.Scalar.BInteger}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Scalar.BInteger)
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BIntegerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BInteger_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BInteger_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.Builder.class);
          }

          // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            value_ = com.google.protobuf.ByteString.EMPTY;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_BInteger_descriptor;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger getDefaultInstanceForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.getDefaultInstance();
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger build() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger buildPartial() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger(this);
            result.value_ = value_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger) {
              return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger other) {
            if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger.getDefaultInstance()) return this;
            if (other.getValue() != com.google.protobuf.ByteString.EMPTY) {
              setValue(other.getValue());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>bytes value = 1;</code>
           * @return The value.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getValue() {
            return value_;
          }
          /**
           * <code>bytes value = 1;</code>
           * @param value The value to set.
           * @return This builder for chaining.
           */
          public Builder setValue(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            value_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bytes value = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearValue() {
            
            value_ = getDefaultInstance().getValue();
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Scalar.BInteger)
        }

        // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Scalar.BInteger)
        private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger();
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BInteger>
            PARSER = new com.google.protobuf.AbstractParser<BInteger>() {
          @java.lang.Override
          public BInteger parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new BInteger(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<BInteger> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<BInteger> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BInteger getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface DateOrBuilder extends
          // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Scalar.Date)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int32 year = 1;</code>
         * @return The year.
         */
        int getYear();

        /**
         * <code>int32 month = 2;</code>
         * @return The month.
         */
        int getMonth();

        /**
         * <code>int32 day = 3;</code>
         * @return The day.
         */
        int getDay();
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Scalar.Date}
       */
      public static final class Date extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Scalar.Date)
          DateOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Date.newBuilder() to construct.
        private Date(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Date() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Date();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Date(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  year_ = input.readInt32();
                  break;
                }
                case 16: {

                  month_ = input.readInt32();
                  break;
                }
                case 24: {

                  day_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Date_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Date_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.Builder.class);
        }

        public static final int YEAR_FIELD_NUMBER = 1;
        private int year_;
        /**
         * <code>int32 year = 1;</code>
         * @return The year.
         */
        @java.lang.Override
        public int getYear() {
          return year_;
        }

        public static final int MONTH_FIELD_NUMBER = 2;
        private int month_;
        /**
         * <code>int32 month = 2;</code>
         * @return The month.
         */
        @java.lang.Override
        public int getMonth() {
          return month_;
        }

        public static final int DAY_FIELD_NUMBER = 3;
        private int day_;
        /**
         * <code>int32 day = 3;</code>
         * @return The day.
         */
        @java.lang.Override
        public int getDay() {
          return day_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (year_ != 0) {
            output.writeInt32(1, year_);
          }
          if (month_ != 0) {
            output.writeInt32(2, month_);
          }
          if (day_ != 0) {
            output.writeInt32(3, day_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (year_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, year_);
          }
          if (month_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, month_);
          }
          if (day_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, day_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date)) {
            return super.equals(obj);
          }
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) obj;

          if (getYear()
              != other.getYear()) return false;
          if (getMonth()
              != other.getMonth()) return false;
          if (getDay()
              != other.getDay()) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + YEAR_FIELD_NUMBER;
          hash = (53 * hash) + getYear();
          hash = (37 * hash) + MONTH_FIELD_NUMBER;
          hash = (53 * hash) + getMonth();
          hash = (37 * hash) + DAY_FIELD_NUMBER;
          hash = (53 * hash) + getDay();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code dataflow.calcite.Operand.Scalar.Date}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Scalar.Date)
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.DateOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Date_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Date_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.Builder.class);
          }

          // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            year_ = 0;

            month_ = 0;

            day_ = 0;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Date_descriptor;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date getDefaultInstanceForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance();
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date build() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date buildPartial() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date(this);
            result.year_ = year_;
            result.month_ = month_;
            result.day_ = day_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) {
              return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date other) {
            if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance()) return this;
            if (other.getYear() != 0) {
              setYear(other.getYear());
            }
            if (other.getMonth() != 0) {
              setMonth(other.getMonth());
            }
            if (other.getDay() != 0) {
              setDay(other.getDay());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private int year_ ;
          /**
           * <code>int32 year = 1;</code>
           * @return The year.
           */
          @java.lang.Override
          public int getYear() {
            return year_;
          }
          /**
           * <code>int32 year = 1;</code>
           * @param value The year to set.
           * @return This builder for chaining.
           */
          public Builder setYear(int value) {
            
            year_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 year = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearYear() {
            
            year_ = 0;
            onChanged();
            return this;
          }

          private int month_ ;
          /**
           * <code>int32 month = 2;</code>
           * @return The month.
           */
          @java.lang.Override
          public int getMonth() {
            return month_;
          }
          /**
           * <code>int32 month = 2;</code>
           * @param value The month to set.
           * @return This builder for chaining.
           */
          public Builder setMonth(int value) {
            
            month_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 month = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearMonth() {
            
            month_ = 0;
            onChanged();
            return this;
          }

          private int day_ ;
          /**
           * <code>int32 day = 3;</code>
           * @return The day.
           */
          @java.lang.Override
          public int getDay() {
            return day_;
          }
          /**
           * <code>int32 day = 3;</code>
           * @param value The day to set.
           * @return This builder for chaining.
           */
          public Builder setDay(int value) {
            
            day_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 day = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearDay() {
            
            day_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Scalar.Date)
        }

        // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Scalar.Date)
        private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date();
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Date>
            PARSER = new com.google.protobuf.AbstractParser<Date>() {
          @java.lang.Override
          public Date parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Date(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Date> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Date> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface TimeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Scalar.Time)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int32 hour = 1;</code>
         * @return The hour.
         */
        int getHour();

        /**
         * <code>int32 minute = 2;</code>
         * @return The minute.
         */
        int getMinute();

        /**
         * <code>int32 second = 3;</code>
         * @return The second.
         */
        int getSecond();

        /**
         * <code>int32 nano = 4;</code>
         * @return The nano.
         */
        int getNano();
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Scalar.Time}
       */
      public static final class Time extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Scalar.Time)
          TimeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Time.newBuilder() to construct.
        private Time(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Time() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Time();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Time(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  hour_ = input.readInt32();
                  break;
                }
                case 16: {

                  minute_ = input.readInt32();
                  break;
                }
                case 24: {

                  second_ = input.readInt32();
                  break;
                }
                case 32: {

                  nano_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Time_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Time_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.Builder.class);
        }

        public static final int HOUR_FIELD_NUMBER = 1;
        private int hour_;
        /**
         * <code>int32 hour = 1;</code>
         * @return The hour.
         */
        @java.lang.Override
        public int getHour() {
          return hour_;
        }

        public static final int MINUTE_FIELD_NUMBER = 2;
        private int minute_;
        /**
         * <code>int32 minute = 2;</code>
         * @return The minute.
         */
        @java.lang.Override
        public int getMinute() {
          return minute_;
        }

        public static final int SECOND_FIELD_NUMBER = 3;
        private int second_;
        /**
         * <code>int32 second = 3;</code>
         * @return The second.
         */
        @java.lang.Override
        public int getSecond() {
          return second_;
        }

        public static final int NANO_FIELD_NUMBER = 4;
        private int nano_;
        /**
         * <code>int32 nano = 4;</code>
         * @return The nano.
         */
        @java.lang.Override
        public int getNano() {
          return nano_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (hour_ != 0) {
            output.writeInt32(1, hour_);
          }
          if (minute_ != 0) {
            output.writeInt32(2, minute_);
          }
          if (second_ != 0) {
            output.writeInt32(3, second_);
          }
          if (nano_ != 0) {
            output.writeInt32(4, nano_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (hour_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, hour_);
          }
          if (minute_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, minute_);
          }
          if (second_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, second_);
          }
          if (nano_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, nano_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time)) {
            return super.equals(obj);
          }
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) obj;

          if (getHour()
              != other.getHour()) return false;
          if (getMinute()
              != other.getMinute()) return false;
          if (getSecond()
              != other.getSecond()) return false;
          if (getNano()
              != other.getNano()) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + HOUR_FIELD_NUMBER;
          hash = (53 * hash) + getHour();
          hash = (37 * hash) + MINUTE_FIELD_NUMBER;
          hash = (53 * hash) + getMinute();
          hash = (37 * hash) + SECOND_FIELD_NUMBER;
          hash = (53 * hash) + getSecond();
          hash = (37 * hash) + NANO_FIELD_NUMBER;
          hash = (53 * hash) + getNano();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code dataflow.calcite.Operand.Scalar.Time}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Scalar.Time)
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Time_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Time_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.Builder.class);
          }

          // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            hour_ = 0;

            minute_ = 0;

            second_ = 0;

            nano_ = 0;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Time_descriptor;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time getDefaultInstanceForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance();
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time build() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time buildPartial() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time(this);
            result.hour_ = hour_;
            result.minute_ = minute_;
            result.second_ = second_;
            result.nano_ = nano_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) {
              return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time other) {
            if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance()) return this;
            if (other.getHour() != 0) {
              setHour(other.getHour());
            }
            if (other.getMinute() != 0) {
              setMinute(other.getMinute());
            }
            if (other.getSecond() != 0) {
              setSecond(other.getSecond());
            }
            if (other.getNano() != 0) {
              setNano(other.getNano());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private int hour_ ;
          /**
           * <code>int32 hour = 1;</code>
           * @return The hour.
           */
          @java.lang.Override
          public int getHour() {
            return hour_;
          }
          /**
           * <code>int32 hour = 1;</code>
           * @param value The hour to set.
           * @return This builder for chaining.
           */
          public Builder setHour(int value) {
            
            hour_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 hour = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearHour() {
            
            hour_ = 0;
            onChanged();
            return this;
          }

          private int minute_ ;
          /**
           * <code>int32 minute = 2;</code>
           * @return The minute.
           */
          @java.lang.Override
          public int getMinute() {
            return minute_;
          }
          /**
           * <code>int32 minute = 2;</code>
           * @param value The minute to set.
           * @return This builder for chaining.
           */
          public Builder setMinute(int value) {
            
            minute_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 minute = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearMinute() {
            
            minute_ = 0;
            onChanged();
            return this;
          }

          private int second_ ;
          /**
           * <code>int32 second = 3;</code>
           * @return The second.
           */
          @java.lang.Override
          public int getSecond() {
            return second_;
          }
          /**
           * <code>int32 second = 3;</code>
           * @param value The second to set.
           * @return This builder for chaining.
           */
          public Builder setSecond(int value) {
            
            second_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 second = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearSecond() {
            
            second_ = 0;
            onChanged();
            return this;
          }

          private int nano_ ;
          /**
           * <code>int32 nano = 4;</code>
           * @return The nano.
           */
          @java.lang.Override
          public int getNano() {
            return nano_;
          }
          /**
           * <code>int32 nano = 4;</code>
           * @param value The nano to set.
           * @return This builder for chaining.
           */
          public Builder setNano(int value) {
            
            nano_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 nano = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearNano() {
            
            nano_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Scalar.Time)
        }

        // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Scalar.Time)
        private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time();
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Time>
            PARSER = new com.google.protobuf.AbstractParser<Time>() {
          @java.lang.Override
          public Time parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Time(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Time> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Time> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface TimestampOrBuilder extends
          // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Scalar.Timestamp)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int64 seconds = 1;</code>
         * @return The seconds.
         */
        long getSeconds();

        /**
         * <code>int32 nanos = 2;</code>
         * @return The nanos.
         */
        int getNanos();
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Scalar.Timestamp}
       */
      public static final class Timestamp extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Scalar.Timestamp)
          TimestampOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Timestamp.newBuilder() to construct.
        private Timestamp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Timestamp() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Timestamp();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Timestamp(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  seconds_ = input.readInt64();
                  break;
                }
                case 16: {

                  nanos_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Timestamp_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Timestamp_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.Builder.class);
        }

        public static final int SECONDS_FIELD_NUMBER = 1;
        private long seconds_;
        /**
         * <code>int64 seconds = 1;</code>
         * @return The seconds.
         */
        @java.lang.Override
        public long getSeconds() {
          return seconds_;
        }

        public static final int NANOS_FIELD_NUMBER = 2;
        private int nanos_;
        /**
         * <code>int32 nanos = 2;</code>
         * @return The nanos.
         */
        @java.lang.Override
        public int getNanos() {
          return nanos_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (seconds_ != 0L) {
            output.writeInt64(1, seconds_);
          }
          if (nanos_ != 0) {
            output.writeInt32(2, nanos_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (seconds_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(1, seconds_);
          }
          if (nanos_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, nanos_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp)) {
            return super.equals(obj);
          }
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) obj;

          if (getSeconds()
              != other.getSeconds()) return false;
          if (getNanos()
              != other.getNanos()) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SECONDS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSeconds());
          hash = (37 * hash) + NANOS_FIELD_NUMBER;
          hash = (53 * hash) + getNanos();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code dataflow.calcite.Operand.Scalar.Timestamp}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Scalar.Timestamp)
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimestampOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Timestamp_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Timestamp_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.Builder.class);
          }

          // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            seconds_ = 0L;

            nanos_ = 0;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_Timestamp_descriptor;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp getDefaultInstanceForType() {
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance();
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp build() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp buildPartial() {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp(this);
            result.seconds_ = seconds_;
            result.nanos_ = nanos_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) {
              return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp other) {
            if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance()) return this;
            if (other.getSeconds() != 0L) {
              setSeconds(other.getSeconds());
            }
            if (other.getNanos() != 0) {
              setNanos(other.getNanos());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private long seconds_ ;
          /**
           * <code>int64 seconds = 1;</code>
           * @return The seconds.
           */
          @java.lang.Override
          public long getSeconds() {
            return seconds_;
          }
          /**
           * <code>int64 seconds = 1;</code>
           * @param value The seconds to set.
           * @return This builder for chaining.
           */
          public Builder setSeconds(long value) {
            
            seconds_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int64 seconds = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearSeconds() {
            
            seconds_ = 0L;
            onChanged();
            return this;
          }

          private int nanos_ ;
          /**
           * <code>int32 nanos = 2;</code>
           * @return The nanos.
           */
          @java.lang.Override
          public int getNanos() {
            return nanos_;
          }
          /**
           * <code>int32 nanos = 2;</code>
           * @param value The nanos to set.
           * @return This builder for chaining.
           */
          public Builder setNanos(int value) {
            
            nanos_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int32 nanos = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearNanos() {
            
            nanos_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Scalar.Timestamp)
        }

        // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Scalar.Timestamp)
        private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp();
        }

        public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Timestamp>
            PARSER = new com.google.protobuf.AbstractParser<Timestamp>() {
          @java.lang.Override
          public Timestamp parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Timestamp(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Timestamp> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Timestamp> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int valueCase_ = 0;
      private java.lang.Object value_;
      public enum ValueCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        NULL(1),
        INTEGER(2),
        LONG(3),
        FLOAT(4),
        DOUBLE(5),
        BOOLEAN(6),
        STRING(7),
        BIG_DECIMAL(8),
        DATE(9),
        TIME(10),
        TIMESTAMP(11),
        VALUE_NOT_SET(0);
        private final int value;
        private ValueCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ValueCase valueOf(int value) {
          return forNumber(value);
        }

        public static ValueCase forNumber(int value) {
          switch (value) {
            case 1: return NULL;
            case 2: return INTEGER;
            case 3: return LONG;
            case 4: return FLOAT;
            case 5: return DOUBLE;
            case 6: return BOOLEAN;
            case 7: return STRING;
            case 8: return BIG_DECIMAL;
            case 9: return DATE;
            case 10: return TIME;
            case 11: return TIMESTAMP;
            case 0: return VALUE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ValueCase
      getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public static final int NULL_FIELD_NUMBER = 1;
      /**
       * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
       * @return Whether the null field is set.
       */
      @java.lang.Override
      public boolean hasNull() {
        return valueCase_ == 1;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
       * @return The null.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None getNull() {
        if (valueCase_ == 1) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance();
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.NoneOrBuilder getNullOrBuilder() {
        if (valueCase_ == 1) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance();
      }

      public static final int INTEGER_FIELD_NUMBER = 2;
      /**
       * <code>int32 integer = 2;</code>
       * @return Whether the integer field is set.
       */
      @java.lang.Override
      public boolean hasInteger() {
        return valueCase_ == 2;
      }
      /**
       * <code>int32 integer = 2;</code>
       * @return The integer.
       */
      @java.lang.Override
      public int getInteger() {
        if (valueCase_ == 2) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }

      public static final int LONG_FIELD_NUMBER = 3;
      /**
       * <code>int64 long = 3;</code>
       * @return Whether the long field is set.
       */
      @java.lang.Override
      public boolean hasLong() {
        return valueCase_ == 3;
      }
      /**
       * <code>int64 long = 3;</code>
       * @return The long.
       */
      @java.lang.Override
      public long getLong() {
        if (valueCase_ == 3) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }

      public static final int FLOAT_FIELD_NUMBER = 4;
      /**
       * <code>float float = 4;</code>
       * @return Whether the float field is set.
       */
      @java.lang.Override
      public boolean hasFloat() {
        return valueCase_ == 4;
      }
      /**
       * <code>float float = 4;</code>
       * @return The float.
       */
      @java.lang.Override
      public float getFloat() {
        if (valueCase_ == 4) {
          return (java.lang.Float) value_;
        }
        return 0F;
      }

      public static final int DOUBLE_FIELD_NUMBER = 5;
      /**
       * <code>double double = 5;</code>
       * @return Whether the double field is set.
       */
      @java.lang.Override
      public boolean hasDouble() {
        return valueCase_ == 5;
      }
      /**
       * <code>double double = 5;</code>
       * @return The double.
       */
      @java.lang.Override
      public double getDouble() {
        if (valueCase_ == 5) {
          return (java.lang.Double) value_;
        }
        return 0D;
      }

      public static final int BOOLEAN_FIELD_NUMBER = 6;
      /**
       * <code>bool boolean = 6;</code>
       * @return Whether the boolean field is set.
       */
      @java.lang.Override
      public boolean hasBoolean() {
        return valueCase_ == 6;
      }
      /**
       * <code>bool boolean = 6;</code>
       * @return The boolean.
       */
      @java.lang.Override
      public boolean getBoolean() {
        if (valueCase_ == 6) {
          return (java.lang.Boolean) value_;
        }
        return false;
      }

      public static final int STRING_FIELD_NUMBER = 7;
      /**
       * <code>string string = 7;</code>
       * @return Whether the string field is set.
       */
      public boolean hasString() {
        return valueCase_ == 7;
      }
      /**
       * <code>string string = 7;</code>
       * @return The string.
       */
      public java.lang.String getString() {
        java.lang.Object ref = "";
        if (valueCase_ == 7) {
          ref = value_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valueCase_ == 7) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <code>string string = 7;</code>
       * @return The bytes for string.
       */
      public com.google.protobuf.ByteString
          getStringBytes() {
        java.lang.Object ref = "";
        if (valueCase_ == 7) {
          ref = value_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueCase_ == 7) {
            value_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BIG_DECIMAL_FIELD_NUMBER = 8;
      /**
       * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
       * @return Whether the bigDecimal field is set.
       */
      @java.lang.Override
      public boolean hasBigDecimal() {
        return valueCase_ == 8;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
       * @return The bigDecimal.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal getBigDecimal() {
        if (valueCase_ == 8) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance();
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimalOrBuilder getBigDecimalOrBuilder() {
        if (valueCase_ == 8) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance();
      }

      public static final int DATE_FIELD_NUMBER = 9;
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
       * @return Whether the date field is set.
       */
      @java.lang.Override
      public boolean hasDate() {
        return valueCase_ == 9;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
       * @return The date.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date getDate() {
        if (valueCase_ == 9) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance();
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.DateOrBuilder getDateOrBuilder() {
        if (valueCase_ == 9) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance();
      }

      public static final int TIME_FIELD_NUMBER = 10;
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
       * @return Whether the time field is set.
       */
      @java.lang.Override
      public boolean hasTime() {
        return valueCase_ == 10;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
       * @return The time.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time getTime() {
        if (valueCase_ == 10) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance();
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimeOrBuilder getTimeOrBuilder() {
        if (valueCase_ == 10) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance();
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 11;
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return valueCase_ == 11;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp getTimestamp() {
        if (valueCase_ == 11) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance();
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimestampOrBuilder getTimestampOrBuilder() {
        if (valueCase_ == 11) {
           return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_;
        }
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (valueCase_ == 1) {
          output.writeMessage(1, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_);
        }
        if (valueCase_ == 2) {
          output.writeInt32(
              2, (int)((java.lang.Integer) value_));
        }
        if (valueCase_ == 3) {
          output.writeInt64(
              3, (long)((java.lang.Long) value_));
        }
        if (valueCase_ == 4) {
          output.writeFloat(
              4, (float)((java.lang.Float) value_));
        }
        if (valueCase_ == 5) {
          output.writeDouble(
              5, (double)((java.lang.Double) value_));
        }
        if (valueCase_ == 6) {
          output.writeBool(
              6, (boolean)((java.lang.Boolean) value_));
        }
        if (valueCase_ == 7) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, value_);
        }
        if (valueCase_ == 8) {
          output.writeMessage(8, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_);
        }
        if (valueCase_ == 9) {
          output.writeMessage(9, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_);
        }
        if (valueCase_ == 10) {
          output.writeMessage(10, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_);
        }
        if (valueCase_ == 11) {
          output.writeMessage(11, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (valueCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_);
        }
        if (valueCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(
                2, (int)((java.lang.Integer) value_));
        }
        if (valueCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(
                3, (long)((java.lang.Long) value_));
        }
        if (valueCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(
                4, (float)((java.lang.Float) value_));
        }
        if (valueCase_ == 5) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(
                5, (double)((java.lang.Double) value_));
        }
        if (valueCase_ == 6) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(
                6, (boolean)((java.lang.Boolean) value_));
        }
        if (valueCase_ == 7) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, value_);
        }
        if (valueCase_ == 8) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_);
        }
        if (valueCase_ == 9) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_);
        }
        if (valueCase_ == 10) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_);
        }
        if (valueCase_ == 11) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar)) {
          return super.equals(obj);
        }
        io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) obj;

        if (!getValueCase().equals(other.getValueCase())) return false;
        switch (valueCase_) {
          case 1:
            if (!getNull()
                .equals(other.getNull())) return false;
            break;
          case 2:
            if (getInteger()
                != other.getInteger()) return false;
            break;
          case 3:
            if (getLong()
                != other.getLong()) return false;
            break;
          case 4:
            if (java.lang.Float.floatToIntBits(getFloat())
                != java.lang.Float.floatToIntBits(
                    other.getFloat())) return false;
            break;
          case 5:
            if (java.lang.Double.doubleToLongBits(getDouble())
                != java.lang.Double.doubleToLongBits(
                    other.getDouble())) return false;
            break;
          case 6:
            if (getBoolean()
                != other.getBoolean()) return false;
            break;
          case 7:
            if (!getString()
                .equals(other.getString())) return false;
            break;
          case 8:
            if (!getBigDecimal()
                .equals(other.getBigDecimal())) return false;
            break;
          case 9:
            if (!getDate()
                .equals(other.getDate())) return false;
            break;
          case 10:
            if (!getTime()
                .equals(other.getTime())) return false;
            break;
          case 11:
            if (!getTimestamp()
                .equals(other.getTimestamp())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (valueCase_) {
          case 1:
            hash = (37 * hash) + NULL_FIELD_NUMBER;
            hash = (53 * hash) + getNull().hashCode();
            break;
          case 2:
            hash = (37 * hash) + INTEGER_FIELD_NUMBER;
            hash = (53 * hash) + getInteger();
            break;
          case 3:
            hash = (37 * hash) + LONG_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getLong());
            break;
          case 4:
            hash = (37 * hash) + FLOAT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFloat());
            break;
          case 5:
            hash = (37 * hash) + DOUBLE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getDouble()));
            break;
          case 6:
            hash = (37 * hash) + BOOLEAN_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getBoolean());
            break;
          case 7:
            hash = (37 * hash) + STRING_FIELD_NUMBER;
            hash = (53 * hash) + getString().hashCode();
            break;
          case 8:
            hash = (37 * hash) + BIG_DECIMAL_FIELD_NUMBER;
            hash = (53 * hash) + getBigDecimal().hashCode();
            break;
          case 9:
            hash = (37 * hash) + DATE_FIELD_NUMBER;
            hash = (53 * hash) + getDate().hashCode();
            break;
          case 10:
            hash = (37 * hash) + TIME_FIELD_NUMBER;
            hash = (53 * hash) + getTime().hashCode();
            break;
          case 11:
            hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
            hash = (53 * hash) + getTimestamp().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Scalar}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Scalar)
          io.activej.dataflow.proto.calcite.OperandProto.Operand.ScalarOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Builder.class);
        }

        // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          valueCase_ = 0;
          value_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Scalar_descriptor;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar getDefaultInstanceForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance();
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar build() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar buildPartial() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar(this);
          if (valueCase_ == 1) {
            if (nullBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = nullBuilder_.build();
            }
          }
          if (valueCase_ == 2) {
            result.value_ = value_;
          }
          if (valueCase_ == 3) {
            result.value_ = value_;
          }
          if (valueCase_ == 4) {
            result.value_ = value_;
          }
          if (valueCase_ == 5) {
            result.value_ = value_;
          }
          if (valueCase_ == 6) {
            result.value_ = value_;
          }
          if (valueCase_ == 7) {
            result.value_ = value_;
          }
          if (valueCase_ == 8) {
            if (bigDecimalBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = bigDecimalBuilder_.build();
            }
          }
          if (valueCase_ == 9) {
            if (dateBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = dateBuilder_.build();
            }
          }
          if (valueCase_ == 10) {
            if (timeBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = timeBuilder_.build();
            }
          }
          if (valueCase_ == 11) {
            if (timestampBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = timestampBuilder_.build();
            }
          }
          result.valueCase_ = valueCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) {
            return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar other) {
          if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance()) return this;
          switch (other.getValueCase()) {
            case NULL: {
              mergeNull(other.getNull());
              break;
            }
            case INTEGER: {
              setInteger(other.getInteger());
              break;
            }
            case LONG: {
              setLong(other.getLong());
              break;
            }
            case FLOAT: {
              setFloat(other.getFloat());
              break;
            }
            case DOUBLE: {
              setDouble(other.getDouble());
              break;
            }
            case BOOLEAN: {
              setBoolean(other.getBoolean());
              break;
            }
            case STRING: {
              valueCase_ = 7;
              value_ = other.value_;
              onChanged();
              break;
            }
            case BIG_DECIMAL: {
              mergeBigDecimal(other.getBigDecimal());
              break;
            }
            case DATE: {
              mergeDate(other.getDate());
              break;
            }
            case TIME: {
              mergeTime(other.getTime());
              break;
            }
            case TIMESTAMP: {
              mergeTimestamp(other.getTimestamp());
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int valueCase_ = 0;
        private java.lang.Object value_;
        public ValueCase
            getValueCase() {
          return ValueCase.forNumber(
              valueCase_);
        }

        public Builder clearValue() {
          valueCase_ = 0;
          value_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.NoneOrBuilder> nullBuilder_;
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         * @return Whether the null field is set.
         */
        @java.lang.Override
        public boolean hasNull() {
          return valueCase_ == 1;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         * @return The null.
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None getNull() {
          if (nullBuilder_ == null) {
            if (valueCase_ == 1) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance();
          } else {
            if (valueCase_ == 1) {
              return nullBuilder_.getMessage();
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         */
        public Builder setNull(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None value) {
          if (nullBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            nullBuilder_.setMessage(value);
          }
          valueCase_ = 1;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         */
        public Builder setNull(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.Builder builderForValue) {
          if (nullBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            nullBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 1;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         */
        public Builder mergeNull(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None value) {
          if (nullBuilder_ == null) {
            if (valueCase_ == 1 &&
                value_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance()) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 1) {
              nullBuilder_.mergeFrom(value);
            }
            nullBuilder_.setMessage(value);
          }
          valueCase_ = 1;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         */
        public Builder clearNull() {
          if (nullBuilder_ == null) {
            if (valueCase_ == 1) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 1) {
              valueCase_ = 0;
              value_ = null;
            }
            nullBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.Builder getNullBuilder() {
          return getNullFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.NoneOrBuilder getNullOrBuilder() {
          if ((valueCase_ == 1) && (nullBuilder_ != null)) {
            return nullBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 1) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.None null = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.NoneOrBuilder> 
            getNullFieldBuilder() {
          if (nullBuilder_ == null) {
            if (!(valueCase_ == 1)) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.getDefaultInstance();
            }
            nullBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.NoneOrBuilder>(
                    (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.None) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 1;
          onChanged();;
          return nullBuilder_;
        }

        /**
         * <code>int32 integer = 2;</code>
         * @return Whether the integer field is set.
         */
        public boolean hasInteger() {
          return valueCase_ == 2;
        }
        /**
         * <code>int32 integer = 2;</code>
         * @return The integer.
         */
        public int getInteger() {
          if (valueCase_ == 2) {
            return (java.lang.Integer) value_;
          }
          return 0;
        }
        /**
         * <code>int32 integer = 2;</code>
         * @param value The integer to set.
         * @return This builder for chaining.
         */
        public Builder setInteger(int value) {
          valueCase_ = 2;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 integer = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearInteger() {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>int64 long = 3;</code>
         * @return Whether the long field is set.
         */
        public boolean hasLong() {
          return valueCase_ == 3;
        }
        /**
         * <code>int64 long = 3;</code>
         * @return The long.
         */
        public long getLong() {
          if (valueCase_ == 3) {
            return (java.lang.Long) value_;
          }
          return 0L;
        }
        /**
         * <code>int64 long = 3;</code>
         * @param value The long to set.
         * @return This builder for chaining.
         */
        public Builder setLong(long value) {
          valueCase_ = 3;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 long = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearLong() {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>float float = 4;</code>
         * @return Whether the float field is set.
         */
        public boolean hasFloat() {
          return valueCase_ == 4;
        }
        /**
         * <code>float float = 4;</code>
         * @return The float.
         */
        public float getFloat() {
          if (valueCase_ == 4) {
            return (java.lang.Float) value_;
          }
          return 0F;
        }
        /**
         * <code>float float = 4;</code>
         * @param value The float to set.
         * @return This builder for chaining.
         */
        public Builder setFloat(float value) {
          valueCase_ = 4;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float float = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearFloat() {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>double double = 5;</code>
         * @return Whether the double field is set.
         */
        public boolean hasDouble() {
          return valueCase_ == 5;
        }
        /**
         * <code>double double = 5;</code>
         * @return The double.
         */
        public double getDouble() {
          if (valueCase_ == 5) {
            return (java.lang.Double) value_;
          }
          return 0D;
        }
        /**
         * <code>double double = 5;</code>
         * @param value The double to set.
         * @return This builder for chaining.
         */
        public Builder setDouble(double value) {
          valueCase_ = 5;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double double = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearDouble() {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>bool boolean = 6;</code>
         * @return Whether the boolean field is set.
         */
        public boolean hasBoolean() {
          return valueCase_ == 6;
        }
        /**
         * <code>bool boolean = 6;</code>
         * @return The boolean.
         */
        public boolean getBoolean() {
          if (valueCase_ == 6) {
            return (java.lang.Boolean) value_;
          }
          return false;
        }
        /**
         * <code>bool boolean = 6;</code>
         * @param value The boolean to set.
         * @return This builder for chaining.
         */
        public Builder setBoolean(boolean value) {
          valueCase_ = 6;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool boolean = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearBoolean() {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>string string = 7;</code>
         * @return Whether the string field is set.
         */
        @java.lang.Override
        public boolean hasString() {
          return valueCase_ == 7;
        }
        /**
         * <code>string string = 7;</code>
         * @return The string.
         */
        @java.lang.Override
        public java.lang.String getString() {
          java.lang.Object ref = "";
          if (valueCase_ == 7) {
            ref = value_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (valueCase_ == 7) {
              value_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string string = 7;</code>
         * @return The bytes for string.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getStringBytes() {
          java.lang.Object ref = "";
          if (valueCase_ == 7) {
            ref = value_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (valueCase_ == 7) {
              value_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string string = 7;</code>
         * @param value The string to set.
         * @return This builder for chaining.
         */
        public Builder setString(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 7;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string string = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearString() {
          if (valueCase_ == 7) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>string string = 7;</code>
         * @param value The bytes for string to set.
         * @return This builder for chaining.
         */
        public Builder setStringBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          valueCase_ = 7;
          value_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimalOrBuilder> bigDecimalBuilder_;
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         * @return Whether the bigDecimal field is set.
         */
        @java.lang.Override
        public boolean hasBigDecimal() {
          return valueCase_ == 8;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         * @return The bigDecimal.
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal getBigDecimal() {
          if (bigDecimalBuilder_ == null) {
            if (valueCase_ == 8) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance();
          } else {
            if (valueCase_ == 8) {
              return bigDecimalBuilder_.getMessage();
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         */
        public Builder setBigDecimal(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal value) {
          if (bigDecimalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            bigDecimalBuilder_.setMessage(value);
          }
          valueCase_ = 8;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         */
        public Builder setBigDecimal(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.Builder builderForValue) {
          if (bigDecimalBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            bigDecimalBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 8;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         */
        public Builder mergeBigDecimal(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal value) {
          if (bigDecimalBuilder_ == null) {
            if (valueCase_ == 8 &&
                value_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance()) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 8) {
              bigDecimalBuilder_.mergeFrom(value);
            }
            bigDecimalBuilder_.setMessage(value);
          }
          valueCase_ = 8;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         */
        public Builder clearBigDecimal() {
          if (bigDecimalBuilder_ == null) {
            if (valueCase_ == 8) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 8) {
              valueCase_ = 0;
              value_ = null;
            }
            bigDecimalBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.Builder getBigDecimalBuilder() {
          return getBigDecimalFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimalOrBuilder getBigDecimalOrBuilder() {
          if ((valueCase_ == 8) && (bigDecimalBuilder_ != null)) {
            return bigDecimalBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 8) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.BDecimal big_decimal = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimalOrBuilder> 
            getBigDecimalFieldBuilder() {
          if (bigDecimalBuilder_ == null) {
            if (!(valueCase_ == 8)) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.getDefaultInstance();
            }
            bigDecimalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimalOrBuilder>(
                    (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.BDecimal) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 8;
          onChanged();;
          return bigDecimalBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.DateOrBuilder> dateBuilder_;
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         * @return Whether the date field is set.
         */
        @java.lang.Override
        public boolean hasDate() {
          return valueCase_ == 9;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         * @return The date.
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date getDate() {
          if (dateBuilder_ == null) {
            if (valueCase_ == 9) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance();
          } else {
            if (valueCase_ == 9) {
              return dateBuilder_.getMessage();
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         */
        public Builder setDate(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date value) {
          if (dateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            dateBuilder_.setMessage(value);
          }
          valueCase_ = 9;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         */
        public Builder setDate(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.Builder builderForValue) {
          if (dateBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            dateBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 9;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         */
        public Builder mergeDate(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date value) {
          if (dateBuilder_ == null) {
            if (valueCase_ == 9 &&
                value_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance()) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 9) {
              dateBuilder_.mergeFrom(value);
            }
            dateBuilder_.setMessage(value);
          }
          valueCase_ = 9;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         */
        public Builder clearDate() {
          if (dateBuilder_ == null) {
            if (valueCase_ == 9) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 9) {
              valueCase_ = 0;
              value_ = null;
            }
            dateBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.Builder getDateBuilder() {
          return getDateFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.DateOrBuilder getDateOrBuilder() {
          if ((valueCase_ == 9) && (dateBuilder_ != null)) {
            return dateBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 9) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Date date = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.DateOrBuilder> 
            getDateFieldBuilder() {
          if (dateBuilder_ == null) {
            if (!(valueCase_ == 9)) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.getDefaultInstance();
            }
            dateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.DateOrBuilder>(
                    (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Date) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 9;
          onChanged();;
          return dateBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimeOrBuilder> timeBuilder_;
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         * @return Whether the time field is set.
         */
        @java.lang.Override
        public boolean hasTime() {
          return valueCase_ == 10;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         * @return The time.
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time getTime() {
          if (timeBuilder_ == null) {
            if (valueCase_ == 10) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance();
          } else {
            if (valueCase_ == 10) {
              return timeBuilder_.getMessage();
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         */
        public Builder setTime(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time value) {
          if (timeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            timeBuilder_.setMessage(value);
          }
          valueCase_ = 10;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         */
        public Builder setTime(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.Builder builderForValue) {
          if (timeBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            timeBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 10;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         */
        public Builder mergeTime(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time value) {
          if (timeBuilder_ == null) {
            if (valueCase_ == 10 &&
                value_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance()) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 10) {
              timeBuilder_.mergeFrom(value);
            }
            timeBuilder_.setMessage(value);
          }
          valueCase_ = 10;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         */
        public Builder clearTime() {
          if (timeBuilder_ == null) {
            if (valueCase_ == 10) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 10) {
              valueCase_ = 0;
              value_ = null;
            }
            timeBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.Builder getTimeBuilder() {
          return getTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimeOrBuilder getTimeOrBuilder() {
          if ((valueCase_ == 10) && (timeBuilder_ != null)) {
            return timeBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 10) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Time time = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimeOrBuilder> 
            getTimeFieldBuilder() {
          if (timeBuilder_ == null) {
            if (!(valueCase_ == 10)) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.getDefaultInstance();
            }
            timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimeOrBuilder>(
                    (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Time) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 10;
          onChanged();;
          return timeBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimestampOrBuilder> timestampBuilder_;
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         * @return Whether the timestamp field is set.
         */
        @java.lang.Override
        public boolean hasTimestamp() {
          return valueCase_ == 11;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         * @return The timestamp.
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp getTimestamp() {
          if (timestampBuilder_ == null) {
            if (valueCase_ == 11) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance();
          } else {
            if (valueCase_ == 11) {
              return timestampBuilder_.getMessage();
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         */
        public Builder setTimestamp(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp value) {
          if (timestampBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            timestampBuilder_.setMessage(value);
          }
          valueCase_ = 11;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         */
        public Builder setTimestamp(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.Builder builderForValue) {
          if (timestampBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            timestampBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 11;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         */
        public Builder mergeTimestamp(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp value) {
          if (timestampBuilder_ == null) {
            if (valueCase_ == 11 &&
                value_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance()) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 11) {
              timestampBuilder_.mergeFrom(value);
            }
            timestampBuilder_.setMessage(value);
          }
          valueCase_ = 11;
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         */
        public Builder clearTimestamp() {
          if (timestampBuilder_ == null) {
            if (valueCase_ == 11) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 11) {
              valueCase_ = 0;
              value_ = null;
            }
            timestampBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.Builder getTimestampBuilder() {
          return getTimestampFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         */
        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimestampOrBuilder getTimestampOrBuilder() {
          if ((valueCase_ == 11) && (timestampBuilder_ != null)) {
            return timestampBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 11) {
              return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_;
            }
            return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand.Scalar.Timestamp timestamp = 11;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimestampOrBuilder> 
            getTimestampFieldBuilder() {
          if (timestampBuilder_ == null) {
            if (!(valueCase_ == 11)) {
              value_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.getDefaultInstance();
            }
            timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.TimestampOrBuilder>(
                    (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Timestamp) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 11;
          onChanged();;
          return timestampBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Scalar)
      }

      // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Scalar)
      private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar();
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Scalar>
          PARSER = new com.google.protobuf.AbstractParser<Scalar>() {
        @java.lang.Override
        public Scalar parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Scalar(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Scalar> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Scalar> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FieldGetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.FieldGet)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.dataflow.calcite.Operand object_operand = 1;</code>
       * @return Whether the objectOperand field is set.
       */
      boolean hasObjectOperand();
      /**
       * <code>.dataflow.calcite.Operand object_operand = 1;</code>
       * @return The objectOperand.
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand getObjectOperand();
      /**
       * <code>.dataflow.calcite.Operand object_operand = 1;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getObjectOperandOrBuilder();

      /**
       * <code>string field_name = 2;</code>
       * @return The fieldName.
       */
      java.lang.String getFieldName();
      /**
       * <code>string field_name = 2;</code>
       * @return The bytes for fieldName.
       */
      com.google.protobuf.ByteString
          getFieldNameBytes();
    }
    /**
     * Protobuf type {@code dataflow.calcite.Operand.FieldGet}
     */
    public static final class FieldGet extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.FieldGet)
        FieldGetOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use FieldGet.newBuilder() to construct.
      private FieldGet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FieldGet() {
        fieldName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new FieldGet();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private FieldGet(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder subBuilder = null;
                if (objectOperand_ != null) {
                  subBuilder = objectOperand_.toBuilder();
                }
                objectOperand_ = input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(objectOperand_);
                  objectOperand_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                fieldName_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_FieldGet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_FieldGet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.Builder.class);
      }

      public static final int OBJECT_OPERAND_FIELD_NUMBER = 1;
      private io.activej.dataflow.proto.calcite.OperandProto.Operand objectOperand_;
      /**
       * <code>.dataflow.calcite.Operand object_operand = 1;</code>
       * @return Whether the objectOperand field is set.
       */
      @java.lang.Override
      public boolean hasObjectOperand() {
        return objectOperand_ != null;
      }
      /**
       * <code>.dataflow.calcite.Operand object_operand = 1;</code>
       * @return The objectOperand.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand getObjectOperand() {
        return objectOperand_ == null ? io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : objectOperand_;
      }
      /**
       * <code>.dataflow.calcite.Operand object_operand = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getObjectOperandOrBuilder() {
        return getObjectOperand();
      }

      public static final int FIELD_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object fieldName_;
      /**
       * <code>string field_name = 2;</code>
       * @return The fieldName.
       */
      @java.lang.Override
      public java.lang.String getFieldName() {
        java.lang.Object ref = fieldName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fieldName_ = s;
          return s;
        }
      }
      /**
       * <code>string field_name = 2;</code>
       * @return The bytes for fieldName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFieldNameBytes() {
        java.lang.Object ref = fieldName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fieldName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (objectOperand_ != null) {
          output.writeMessage(1, getObjectOperand());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fieldName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fieldName_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (objectOperand_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getObjectOperand());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fieldName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fieldName_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet)) {
          return super.equals(obj);
        }
        io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) obj;

        if (hasObjectOperand() != other.hasObjectOperand()) return false;
        if (hasObjectOperand()) {
          if (!getObjectOperand()
              .equals(other.getObjectOperand())) return false;
        }
        if (!getFieldName()
            .equals(other.getFieldName())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasObjectOperand()) {
          hash = (37 * hash) + OBJECT_OPERAND_FIELD_NUMBER;
          hash = (53 * hash) + getObjectOperand().hashCode();
        }
        hash = (37 * hash) + FIELD_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.FieldGet}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.FieldGet)
          io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_FieldGet_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_FieldGet_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.Builder.class);
        }

        // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (objectOperandBuilder_ == null) {
            objectOperand_ = null;
          } else {
            objectOperand_ = null;
            objectOperandBuilder_ = null;
          }
          fieldName_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_FieldGet_descriptor;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet getDefaultInstanceForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance();
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet build() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet buildPartial() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet(this);
          if (objectOperandBuilder_ == null) {
            result.objectOperand_ = objectOperand_;
          } else {
            result.objectOperand_ = objectOperandBuilder_.build();
          }
          result.fieldName_ = fieldName_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) {
            return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet other) {
          if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance()) return this;
          if (other.hasObjectOperand()) {
            mergeObjectOperand(other.getObjectOperand());
          }
          if (!other.getFieldName().isEmpty()) {
            fieldName_ = other.fieldName_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private io.activej.dataflow.proto.calcite.OperandProto.Operand objectOperand_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> objectOperandBuilder_;
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         * @return Whether the objectOperand field is set.
         */
        public boolean hasObjectOperand() {
          return objectOperandBuilder_ != null || objectOperand_ != null;
        }
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         * @return The objectOperand.
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand getObjectOperand() {
          if (objectOperandBuilder_ == null) {
            return objectOperand_ == null ? io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : objectOperand_;
          } else {
            return objectOperandBuilder_.getMessage();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         */
        public Builder setObjectOperand(io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (objectOperandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            objectOperand_ = value;
            onChanged();
          } else {
            objectOperandBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         */
        public Builder setObjectOperand(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder builderForValue) {
          if (objectOperandBuilder_ == null) {
            objectOperand_ = builderForValue.build();
            onChanged();
          } else {
            objectOperandBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         */
        public Builder mergeObjectOperand(io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (objectOperandBuilder_ == null) {
            if (objectOperand_ != null) {
              objectOperand_ =
                io.activej.dataflow.proto.calcite.OperandProto.Operand.newBuilder(objectOperand_).mergeFrom(value).buildPartial();
            } else {
              objectOperand_ = value;
            }
            onChanged();
          } else {
            objectOperandBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         */
        public Builder clearObjectOperand() {
          if (objectOperandBuilder_ == null) {
            objectOperand_ = null;
            onChanged();
          } else {
            objectOperand_ = null;
            objectOperandBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder getObjectOperandBuilder() {
          
          onChanged();
          return getObjectOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getObjectOperandOrBuilder() {
          if (objectOperandBuilder_ != null) {
            return objectOperandBuilder_.getMessageOrBuilder();
          } else {
            return objectOperand_ == null ?
                io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : objectOperand_;
          }
        }
        /**
         * <code>.dataflow.calcite.Operand object_operand = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> 
            getObjectOperandFieldBuilder() {
          if (objectOperandBuilder_ == null) {
            objectOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder>(
                    getObjectOperand(),
                    getParentForChildren(),
                    isClean());
            objectOperand_ = null;
          }
          return objectOperandBuilder_;
        }

        private java.lang.Object fieldName_ = "";
        /**
         * <code>string field_name = 2;</code>
         * @return The fieldName.
         */
        public java.lang.String getFieldName() {
          java.lang.Object ref = fieldName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            fieldName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string field_name = 2;</code>
         * @return The bytes for fieldName.
         */
        public com.google.protobuf.ByteString
            getFieldNameBytes() {
          java.lang.Object ref = fieldName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fieldName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string field_name = 2;</code>
         * @param value The fieldName to set.
         * @return This builder for chaining.
         */
        public Builder setFieldName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          fieldName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string field_name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldName() {
          
          fieldName_ = getDefaultInstance().getFieldName();
          onChanged();
          return this;
        }
        /**
         * <code>string field_name = 2;</code>
         * @param value The bytes for fieldName to set.
         * @return This builder for chaining.
         */
        public Builder setFieldNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          fieldName_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.FieldGet)
      }

      // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.FieldGet)
      private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet();
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<FieldGet>
          PARSER = new com.google.protobuf.AbstractParser<FieldGet>() {
        @java.lang.Override
        public FieldGet parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FieldGet(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FieldGet> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FieldGet> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FunctionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Function)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string function_name = 1;</code>
       * @return The functionName.
       */
      java.lang.String getFunctionName();
      /**
       * <code>string function_name = 1;</code>
       * @return The bytes for functionName.
       */
      com.google.protobuf.ByteString
          getFunctionNameBytes();

      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      java.util.List<io.activej.dataflow.proto.calcite.OperandProto.Operand> 
          getOperandsList();
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand getOperands(int index);
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      int getOperandsCount();
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      java.util.List<? extends io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> 
          getOperandsOrBuilderList();
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getOperandsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code dataflow.calcite.Operand.Function}
     */
    public static final class Function extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Function)
        FunctionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Function.newBuilder() to construct.
      private Function(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Function() {
        functionName_ = "";
        operands_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Function();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Function(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                functionName_ = s;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  operands_ = new java.util.ArrayList<io.activej.dataflow.proto.calcite.OperandProto.Operand>();
                  mutable_bitField0_ |= 0x00000001;
                }
                operands_.add(
                    input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            operands_ = java.util.Collections.unmodifiableList(operands_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Function_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Function_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.Builder.class);
      }

      public static final int FUNCTION_NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object functionName_;
      /**
       * <code>string function_name = 1;</code>
       * @return The functionName.
       */
      @java.lang.Override
      public java.lang.String getFunctionName() {
        java.lang.Object ref = functionName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          functionName_ = s;
          return s;
        }
      }
      /**
       * <code>string function_name = 1;</code>
       * @return The bytes for functionName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFunctionNameBytes() {
        java.lang.Object ref = functionName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          functionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int OPERANDS_FIELD_NUMBER = 2;
      private java.util.List<io.activej.dataflow.proto.calcite.OperandProto.Operand> operands_;
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      @java.lang.Override
      public java.util.List<io.activej.dataflow.proto.calcite.OperandProto.Operand> getOperandsList() {
        return operands_;
      }
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> 
          getOperandsOrBuilderList() {
        return operands_;
      }
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      @java.lang.Override
      public int getOperandsCount() {
        return operands_.size();
      }
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand getOperands(int index) {
        return operands_.get(index);
      }
      /**
       * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getOperandsOrBuilder(
          int index) {
        return operands_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(functionName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, functionName_);
        }
        for (int i = 0; i < operands_.size(); i++) {
          output.writeMessage(2, operands_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(functionName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, functionName_);
        }
        for (int i = 0; i < operands_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, operands_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Function)) {
          return super.equals(obj);
        }
        io.activej.dataflow.proto.calcite.OperandProto.Operand.Function other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) obj;

        if (!getFunctionName()
            .equals(other.getFunctionName())) return false;
        if (!getOperandsList()
            .equals(other.getOperandsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + FUNCTION_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFunctionName().hashCode();
        if (getOperandsCount() > 0) {
          hash = (37 * hash) + OPERANDS_FIELD_NUMBER;
          hash = (53 * hash) + getOperandsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Function prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Function}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Function)
          io.activej.dataflow.proto.calcite.OperandProto.Operand.FunctionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Function_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Function_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.Builder.class);
        }

        // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getOperandsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          functionName_ = "";

          if (operandsBuilder_ == null) {
            operands_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            operandsBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Function_descriptor;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Function getDefaultInstanceForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance();
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Function build() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Function result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Function buildPartial() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Function result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Function(this);
          int from_bitField0_ = bitField0_;
          result.functionName_ = functionName_;
          if (operandsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              operands_ = java.util.Collections.unmodifiableList(operands_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.operands_ = operands_;
          } else {
            result.operands_ = operandsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) {
            return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Function)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Function other) {
          if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance()) return this;
          if (!other.getFunctionName().isEmpty()) {
            functionName_ = other.functionName_;
            onChanged();
          }
          if (operandsBuilder_ == null) {
            if (!other.operands_.isEmpty()) {
              if (operands_.isEmpty()) {
                operands_ = other.operands_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureOperandsIsMutable();
                operands_.addAll(other.operands_);
              }
              onChanged();
            }
          } else {
            if (!other.operands_.isEmpty()) {
              if (operandsBuilder_.isEmpty()) {
                operandsBuilder_.dispose();
                operandsBuilder_ = null;
                operands_ = other.operands_;
                bitField0_ = (bitField0_ & ~0x00000001);
                operandsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getOperandsFieldBuilder() : null;
              } else {
                operandsBuilder_.addAllMessages(other.operands_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Function parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object functionName_ = "";
        /**
         * <code>string function_name = 1;</code>
         * @return The functionName.
         */
        public java.lang.String getFunctionName() {
          java.lang.Object ref = functionName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            functionName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string function_name = 1;</code>
         * @return The bytes for functionName.
         */
        public com.google.protobuf.ByteString
            getFunctionNameBytes() {
          java.lang.Object ref = functionName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            functionName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string function_name = 1;</code>
         * @param value The functionName to set.
         * @return This builder for chaining.
         */
        public Builder setFunctionName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          functionName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string function_name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFunctionName() {
          
          functionName_ = getDefaultInstance().getFunctionName();
          onChanged();
          return this;
        }
        /**
         * <code>string function_name = 1;</code>
         * @param value The bytes for functionName to set.
         * @return This builder for chaining.
         */
        public Builder setFunctionNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          functionName_ = value;
          onChanged();
          return this;
        }

        private java.util.List<io.activej.dataflow.proto.calcite.OperandProto.Operand> operands_ =
          java.util.Collections.emptyList();
        private void ensureOperandsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            operands_ = new java.util.ArrayList<io.activej.dataflow.proto.calcite.OperandProto.Operand>(operands_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> operandsBuilder_;

        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public java.util.List<io.activej.dataflow.proto.calcite.OperandProto.Operand> getOperandsList() {
          if (operandsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(operands_);
          } else {
            return operandsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public int getOperandsCount() {
          if (operandsBuilder_ == null) {
            return operands_.size();
          } else {
            return operandsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand getOperands(int index) {
          if (operandsBuilder_ == null) {
            return operands_.get(index);
          } else {
            return operandsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder setOperands(
            int index, io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (operandsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOperandsIsMutable();
            operands_.set(index, value);
            onChanged();
          } else {
            operandsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder setOperands(
            int index, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder builderForValue) {
          if (operandsBuilder_ == null) {
            ensureOperandsIsMutable();
            operands_.set(index, builderForValue.build());
            onChanged();
          } else {
            operandsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder addOperands(io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (operandsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOperandsIsMutable();
            operands_.add(value);
            onChanged();
          } else {
            operandsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder addOperands(
            int index, io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (operandsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOperandsIsMutable();
            operands_.add(index, value);
            onChanged();
          } else {
            operandsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder addOperands(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder builderForValue) {
          if (operandsBuilder_ == null) {
            ensureOperandsIsMutable();
            operands_.add(builderForValue.build());
            onChanged();
          } else {
            operandsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder addOperands(
            int index, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder builderForValue) {
          if (operandsBuilder_ == null) {
            ensureOperandsIsMutable();
            operands_.add(index, builderForValue.build());
            onChanged();
          } else {
            operandsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder addAllOperands(
            java.lang.Iterable<? extends io.activej.dataflow.proto.calcite.OperandProto.Operand> values) {
          if (operandsBuilder_ == null) {
            ensureOperandsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, operands_);
            onChanged();
          } else {
            operandsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder clearOperands() {
          if (operandsBuilder_ == null) {
            operands_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            operandsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public Builder removeOperands(int index) {
          if (operandsBuilder_ == null) {
            ensureOperandsIsMutable();
            operands_.remove(index);
            onChanged();
          } else {
            operandsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder getOperandsBuilder(
            int index) {
          return getOperandsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getOperandsOrBuilder(
            int index) {
          if (operandsBuilder_ == null) {
            return operands_.get(index);  } else {
            return operandsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public java.util.List<? extends io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> 
             getOperandsOrBuilderList() {
          if (operandsBuilder_ != null) {
            return operandsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(operands_);
          }
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder addOperandsBuilder() {
          return getOperandsFieldBuilder().addBuilder(
              io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance());
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder addOperandsBuilder(
            int index) {
          return getOperandsFieldBuilder().addBuilder(
              index, io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance());
        }
        /**
         * <code>repeated .dataflow.calcite.Operand operands = 2;</code>
         */
        public java.util.List<io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder> 
             getOperandsBuilderList() {
          return getOperandsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> 
            getOperandsFieldBuilder() {
          if (operandsBuilder_ == null) {
            operandsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder>(
                    operands_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            operands_ = null;
          }
          return operandsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Function)
      }

      // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Function)
      private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Function DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Function();
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Function getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Function>
          PARSER = new com.google.protobuf.AbstractParser<Function>() {
        @java.lang.Override
        public Function parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Function(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Function> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Function> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Function getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CastOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dataflow.calcite.Operand.Cast)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.dataflow.calcite.Operand value_operand = 1;</code>
       * @return Whether the valueOperand field is set.
       */
      boolean hasValueOperand();
      /**
       * <code>.dataflow.calcite.Operand value_operand = 1;</code>
       * @return The valueOperand.
       */
      io.activej.dataflow.proto.calcite.OperandProto.Operand getValueOperand();
      /**
       * <code>.dataflow.calcite.Operand value_operand = 1;</code>
       */
      io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getValueOperandOrBuilder();

      /**
       * <code>int32 type = 2;</code>
       * @return The type.
       */
      int getType();
    }
    /**
     * Protobuf type {@code dataflow.calcite.Operand.Cast}
     */
    public static final class Cast extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dataflow.calcite.Operand.Cast)
        CastOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Cast.newBuilder() to construct.
      private Cast(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Cast() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Cast();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Cast(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder subBuilder = null;
                if (valueOperand_ != null) {
                  subBuilder = valueOperand_.toBuilder();
                }
                valueOperand_ = input.readMessage(io.activej.dataflow.proto.calcite.OperandProto.Operand.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(valueOperand_);
                  valueOperand_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {

                type_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Cast_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Cast_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.Builder.class);
      }

      public static final int VALUE_OPERAND_FIELD_NUMBER = 1;
      private io.activej.dataflow.proto.calcite.OperandProto.Operand valueOperand_;
      /**
       * <code>.dataflow.calcite.Operand value_operand = 1;</code>
       * @return Whether the valueOperand field is set.
       */
      @java.lang.Override
      public boolean hasValueOperand() {
        return valueOperand_ != null;
      }
      /**
       * <code>.dataflow.calcite.Operand value_operand = 1;</code>
       * @return The valueOperand.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand getValueOperand() {
        return valueOperand_ == null ? io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : valueOperand_;
      }
      /**
       * <code>.dataflow.calcite.Operand value_operand = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getValueOperandOrBuilder() {
        return getValueOperand();
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>int32 type = 2;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (valueOperand_ != null) {
          output.writeMessage(1, getValueOperand());
        }
        if (type_ != 0) {
          output.writeInt32(2, type_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (valueOperand_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getValueOperand());
        }
        if (type_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, type_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast)) {
          return super.equals(obj);
        }
        io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast other = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) obj;

        if (hasValueOperand() != other.hasValueOperand()) return false;
        if (hasValueOperand()) {
          if (!getValueOperand()
              .equals(other.getValueOperand())) return false;
        }
        if (getType()
            != other.getType()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasValueOperand()) {
          hash = (37 * hash) + VALUE_OPERAND_FIELD_NUMBER;
          hash = (53 * hash) + getValueOperand().hashCode();
        }
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dataflow.calcite.Operand.Cast}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand.Cast)
          io.activej.dataflow.proto.calcite.OperandProto.Operand.CastOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Cast_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Cast_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.Builder.class);
        }

        // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (valueOperandBuilder_ == null) {
            valueOperand_ = null;
          } else {
            valueOperand_ = null;
            valueOperandBuilder_ = null;
          }
          type_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_Cast_descriptor;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast getDefaultInstanceForType() {
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance();
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast build() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast buildPartial() {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast result = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast(this);
          if (valueOperandBuilder_ == null) {
            result.valueOperand_ = valueOperand_;
          } else {
            result.valueOperand_ = valueOperandBuilder_.build();
          }
          result.type_ = type_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) {
            return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast other) {
          if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance()) return this;
          if (other.hasValueOperand()) {
            mergeValueOperand(other.getValueOperand());
          }
          if (other.getType() != 0) {
            setType(other.getType());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private io.activej.dataflow.proto.calcite.OperandProto.Operand valueOperand_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> valueOperandBuilder_;
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         * @return Whether the valueOperand field is set.
         */
        public boolean hasValueOperand() {
          return valueOperandBuilder_ != null || valueOperand_ != null;
        }
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         * @return The valueOperand.
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand getValueOperand() {
          if (valueOperandBuilder_ == null) {
            return valueOperand_ == null ? io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : valueOperand_;
          } else {
            return valueOperandBuilder_.getMessage();
          }
        }
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         */
        public Builder setValueOperand(io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (valueOperandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            valueOperand_ = value;
            onChanged();
          } else {
            valueOperandBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         */
        public Builder setValueOperand(
            io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder builderForValue) {
          if (valueOperandBuilder_ == null) {
            valueOperand_ = builderForValue.build();
            onChanged();
          } else {
            valueOperandBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         */
        public Builder mergeValueOperand(io.activej.dataflow.proto.calcite.OperandProto.Operand value) {
          if (valueOperandBuilder_ == null) {
            if (valueOperand_ != null) {
              valueOperand_ =
                io.activej.dataflow.proto.calcite.OperandProto.Operand.newBuilder(valueOperand_).mergeFrom(value).buildPartial();
            } else {
              valueOperand_ = value;
            }
            onChanged();
          } else {
            valueOperandBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         */
        public Builder clearValueOperand() {
          if (valueOperandBuilder_ == null) {
            valueOperand_ = null;
            onChanged();
          } else {
            valueOperand_ = null;
            valueOperandBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder getValueOperandBuilder() {
          
          onChanged();
          return getValueOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         */
        public io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder getValueOperandOrBuilder() {
          if (valueOperandBuilder_ != null) {
            return valueOperandBuilder_.getMessageOrBuilder();
          } else {
            return valueOperand_ == null ?
                io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance() : valueOperand_;
          }
        }
        /**
         * <code>.dataflow.calcite.Operand value_operand = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder> 
            getValueOperandFieldBuilder() {
          if (valueOperandBuilder_ == null) {
            valueOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.activej.dataflow.proto.calcite.OperandProto.Operand, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder, io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder>(
                    getValueOperand(),
                    getParentForChildren(),
                    isClean());
            valueOperand_ = null;
          }
          return valueOperandBuilder_;
        }

        private int type_ ;
        /**
         * <code>int32 type = 2;</code>
         * @return The type.
         */
        @java.lang.Override
        public int getType() {
          return type_;
        }
        /**
         * <code>int32 type = 2;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 type = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand.Cast)
      }

      // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand.Cast)
      private static final io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast();
      }

      public static io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Cast>
          PARSER = new com.google.protobuf.AbstractParser<Cast>() {
        @java.lang.Override
        public Cast parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Cast(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Cast> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Cast> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int operandCase_ = 0;
    private java.lang.Object operand_;
    public enum OperandCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RECORD_FIELD(1),
      SCALAR(2),
      FIELD_GET(3),
      FUNCTION(4),
      CAST(5),
      OPERAND_NOT_SET(0);
      private final int value;
      private OperandCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OperandCase valueOf(int value) {
        return forNumber(value);
      }

      public static OperandCase forNumber(int value) {
        switch (value) {
          case 1: return RECORD_FIELD;
          case 2: return SCALAR;
          case 3: return FIELD_GET;
          case 4: return FUNCTION;
          case 5: return CAST;
          case 0: return OPERAND_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OperandCase
    getOperandCase() {
      return OperandCase.forNumber(
          operandCase_);
    }

    public static final int RECORD_FIELD_FIELD_NUMBER = 1;
    /**
     * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
     * @return Whether the recordField field is set.
     */
    @java.lang.Override
    public boolean hasRecordField() {
      return operandCase_ == 1;
    }
    /**
     * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
     * @return The recordField.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField getRecordField() {
      if (operandCase_ == 1) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance();
    }
    /**
     * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordFieldOrBuilder getRecordFieldOrBuilder() {
      if (operandCase_ == 1) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance();
    }

    public static final int SCALAR_FIELD_NUMBER = 2;
    /**
     * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
     * @return Whether the scalar field is set.
     */
    @java.lang.Override
    public boolean hasScalar() {
      return operandCase_ == 2;
    }
    /**
     * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
     * @return The scalar.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar getScalar() {
      if (operandCase_ == 2) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance();
    }
    /**
     * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.ScalarOrBuilder getScalarOrBuilder() {
      if (operandCase_ == 2) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance();
    }

    public static final int FIELD_GET_FIELD_NUMBER = 3;
    /**
     * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
     * @return Whether the fieldGet field is set.
     */
    @java.lang.Override
    public boolean hasFieldGet() {
      return operandCase_ == 3;
    }
    /**
     * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
     * @return The fieldGet.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet getFieldGet() {
      if (operandCase_ == 3) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance();
    }
    /**
     * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGetOrBuilder getFieldGetOrBuilder() {
      if (operandCase_ == 3) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance();
    }

    public static final int FUNCTION_FIELD_NUMBER = 4;
    /**
     * <code>.dataflow.calcite.Operand.Function function = 4;</code>
     * @return Whether the function field is set.
     */
    @java.lang.Override
    public boolean hasFunction() {
      return operandCase_ == 4;
    }
    /**
     * <code>.dataflow.calcite.Operand.Function function = 4;</code>
     * @return The function.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.Function getFunction() {
      if (operandCase_ == 4) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance();
    }
    /**
     * <code>.dataflow.calcite.Operand.Function function = 4;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.FunctionOrBuilder getFunctionOrBuilder() {
      if (operandCase_ == 4) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance();
    }

    public static final int CAST_FIELD_NUMBER = 5;
    /**
     * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
     * @return Whether the cast field is set.
     */
    @java.lang.Override
    public boolean hasCast() {
      return operandCase_ == 5;
    }
    /**
     * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
     * @return The cast.
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast getCast() {
      if (operandCase_ == 5) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance();
    }
    /**
     * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
     */
    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand.CastOrBuilder getCastOrBuilder() {
      if (operandCase_ == 5) {
         return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_;
      }
      return io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (operandCase_ == 1) {
        output.writeMessage(1, (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_);
      }
      if (operandCase_ == 2) {
        output.writeMessage(2, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_);
      }
      if (operandCase_ == 3) {
        output.writeMessage(3, (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_);
      }
      if (operandCase_ == 4) {
        output.writeMessage(4, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_);
      }
      if (operandCase_ == 5) {
        output.writeMessage(5, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (operandCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_);
      }
      if (operandCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_);
      }
      if (operandCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_);
      }
      if (operandCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_);
      }
      if (operandCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand)) {
        return super.equals(obj);
      }
      io.activej.dataflow.proto.calcite.OperandProto.Operand other = (io.activej.dataflow.proto.calcite.OperandProto.Operand) obj;

      if (!getOperandCase().equals(other.getOperandCase())) return false;
      switch (operandCase_) {
        case 1:
          if (!getRecordField()
              .equals(other.getRecordField())) return false;
          break;
        case 2:
          if (!getScalar()
              .equals(other.getScalar())) return false;
          break;
        case 3:
          if (!getFieldGet()
              .equals(other.getFieldGet())) return false;
          break;
        case 4:
          if (!getFunction()
              .equals(other.getFunction())) return false;
          break;
        case 5:
          if (!getCast()
              .equals(other.getCast())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (operandCase_) {
        case 1:
          hash = (37 * hash) + RECORD_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getRecordField().hashCode();
          break;
        case 2:
          hash = (37 * hash) + SCALAR_FIELD_NUMBER;
          hash = (53 * hash) + getScalar().hashCode();
          break;
        case 3:
          hash = (37 * hash) + FIELD_GET_FIELD_NUMBER;
          hash = (53 * hash) + getFieldGet().hashCode();
          break;
        case 4:
          hash = (37 * hash) + FUNCTION_FIELD_NUMBER;
          hash = (53 * hash) + getFunction().hashCode();
          break;
        case 5:
          hash = (37 * hash) + CAST_FIELD_NUMBER;
          hash = (53 * hash) + getCast().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.activej.dataflow.proto.calcite.OperandProto.Operand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.activej.dataflow.proto.calcite.OperandProto.Operand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dataflow.calcite.Operand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dataflow.calcite.Operand)
        io.activej.dataflow.proto.calcite.OperandProto.OperandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.activej.dataflow.proto.calcite.OperandProto.Operand.class, io.activej.dataflow.proto.calcite.OperandProto.Operand.Builder.class);
      }

      // Construct using io.activej.dataflow.proto.calcite.OperandProto.Operand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        operandCase_ = 0;
        operand_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.activej.dataflow.proto.calcite.OperandProto.internal_static_dataflow_calcite_Operand_descriptor;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand getDefaultInstanceForType() {
        return io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance();
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand build() {
        io.activej.dataflow.proto.calcite.OperandProto.Operand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand buildPartial() {
        io.activej.dataflow.proto.calcite.OperandProto.Operand result = new io.activej.dataflow.proto.calcite.OperandProto.Operand(this);
        if (operandCase_ == 1) {
          if (recordFieldBuilder_ == null) {
            result.operand_ = operand_;
          } else {
            result.operand_ = recordFieldBuilder_.build();
          }
        }
        if (operandCase_ == 2) {
          if (scalarBuilder_ == null) {
            result.operand_ = operand_;
          } else {
            result.operand_ = scalarBuilder_.build();
          }
        }
        if (operandCase_ == 3) {
          if (fieldGetBuilder_ == null) {
            result.operand_ = operand_;
          } else {
            result.operand_ = fieldGetBuilder_.build();
          }
        }
        if (operandCase_ == 4) {
          if (functionBuilder_ == null) {
            result.operand_ = operand_;
          } else {
            result.operand_ = functionBuilder_.build();
          }
        }
        if (operandCase_ == 5) {
          if (castBuilder_ == null) {
            result.operand_ = operand_;
          } else {
            result.operand_ = castBuilder_.build();
          }
        }
        result.operandCase_ = operandCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.activej.dataflow.proto.calcite.OperandProto.Operand) {
          return mergeFrom((io.activej.dataflow.proto.calcite.OperandProto.Operand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.activej.dataflow.proto.calcite.OperandProto.Operand other) {
        if (other == io.activej.dataflow.proto.calcite.OperandProto.Operand.getDefaultInstance()) return this;
        switch (other.getOperandCase()) {
          case RECORD_FIELD: {
            mergeRecordField(other.getRecordField());
            break;
          }
          case SCALAR: {
            mergeScalar(other.getScalar());
            break;
          }
          case FIELD_GET: {
            mergeFieldGet(other.getFieldGet());
            break;
          }
          case FUNCTION: {
            mergeFunction(other.getFunction());
            break;
          }
          case CAST: {
            mergeCast(other.getCast());
            break;
          }
          case OPERAND_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.activej.dataflow.proto.calcite.OperandProto.Operand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.activej.dataflow.proto.calcite.OperandProto.Operand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int operandCase_ = 0;
      private java.lang.Object operand_;
      public OperandCase
          getOperandCase() {
        return OperandCase.forNumber(
            operandCase_);
      }

      public Builder clearOperand() {
        operandCase_ = 0;
        operand_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField, io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordFieldOrBuilder> recordFieldBuilder_;
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       * @return Whether the recordField field is set.
       */
      @java.lang.Override
      public boolean hasRecordField() {
        return operandCase_ == 1;
      }
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       * @return The recordField.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField getRecordField() {
        if (recordFieldBuilder_ == null) {
          if (operandCase_ == 1) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance();
        } else {
          if (operandCase_ == 1) {
            return recordFieldBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       */
      public Builder setRecordField(io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField value) {
        if (recordFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operand_ = value;
          onChanged();
        } else {
          recordFieldBuilder_.setMessage(value);
        }
        operandCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       */
      public Builder setRecordField(
          io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.Builder builderForValue) {
        if (recordFieldBuilder_ == null) {
          operand_ = builderForValue.build();
          onChanged();
        } else {
          recordFieldBuilder_.setMessage(builderForValue.build());
        }
        operandCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       */
      public Builder mergeRecordField(io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField value) {
        if (recordFieldBuilder_ == null) {
          if (operandCase_ == 1 &&
              operand_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance()) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_)
                .mergeFrom(value).buildPartial();
          } else {
            operand_ = value;
          }
          onChanged();
        } else {
          if (operandCase_ == 1) {
            recordFieldBuilder_.mergeFrom(value);
          }
          recordFieldBuilder_.setMessage(value);
        }
        operandCase_ = 1;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       */
      public Builder clearRecordField() {
        if (recordFieldBuilder_ == null) {
          if (operandCase_ == 1) {
            operandCase_ = 0;
            operand_ = null;
            onChanged();
          }
        } else {
          if (operandCase_ == 1) {
            operandCase_ = 0;
            operand_ = null;
          }
          recordFieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       */
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.Builder getRecordFieldBuilder() {
        return getRecordFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordFieldOrBuilder getRecordFieldOrBuilder() {
        if ((operandCase_ == 1) && (recordFieldBuilder_ != null)) {
          return recordFieldBuilder_.getMessageOrBuilder();
        } else {
          if (operandCase_ == 1) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.RecordField record_field = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField, io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordFieldOrBuilder> 
          getRecordFieldFieldBuilder() {
        if (recordFieldBuilder_ == null) {
          if (!(operandCase_ == 1)) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.getDefaultInstance();
          }
          recordFieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField, io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordFieldOrBuilder>(
                  (io.activej.dataflow.proto.calcite.OperandProto.Operand.RecordField) operand_,
                  getParentForChildren(),
                  isClean());
          operand_ = null;
        }
        operandCase_ = 1;
        onChanged();;
        return recordFieldBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.ScalarOrBuilder> scalarBuilder_;
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       * @return Whether the scalar field is set.
       */
      @java.lang.Override
      public boolean hasScalar() {
        return operandCase_ == 2;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       * @return The scalar.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar getScalar() {
        if (scalarBuilder_ == null) {
          if (operandCase_ == 2) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance();
        } else {
          if (operandCase_ == 2) {
            return scalarBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       */
      public Builder setScalar(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar value) {
        if (scalarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operand_ = value;
          onChanged();
        } else {
          scalarBuilder_.setMessage(value);
        }
        operandCase_ = 2;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       */
      public Builder setScalar(
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Builder builderForValue) {
        if (scalarBuilder_ == null) {
          operand_ = builderForValue.build();
          onChanged();
        } else {
          scalarBuilder_.setMessage(builderForValue.build());
        }
        operandCase_ = 2;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       */
      public Builder mergeScalar(io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar value) {
        if (scalarBuilder_ == null) {
          if (operandCase_ == 2 &&
              operand_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance()) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_)
                .mergeFrom(value).buildPartial();
          } else {
            operand_ = value;
          }
          onChanged();
        } else {
          if (operandCase_ == 2) {
            scalarBuilder_.mergeFrom(value);
          }
          scalarBuilder_.setMessage(value);
        }
        operandCase_ = 2;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       */
      public Builder clearScalar() {
        if (scalarBuilder_ == null) {
          if (operandCase_ == 2) {
            operandCase_ = 0;
            operand_ = null;
            onChanged();
          }
        } else {
          if (operandCase_ == 2) {
            operandCase_ = 0;
            operand_ = null;
          }
          scalarBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       */
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Builder getScalarBuilder() {
        return getScalarFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.ScalarOrBuilder getScalarOrBuilder() {
        if ((operandCase_ == 2) && (scalarBuilder_ != null)) {
          return scalarBuilder_.getMessageOrBuilder();
        } else {
          if (operandCase_ == 2) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.Scalar scalar = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.ScalarOrBuilder> 
          getScalarFieldBuilder() {
        if (scalarBuilder_ == null) {
          if (!(operandCase_ == 2)) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.getDefaultInstance();
          }
          scalarBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar, io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.ScalarOrBuilder>(
                  (io.activej.dataflow.proto.calcite.OperandProto.Operand.Scalar) operand_,
                  getParentForChildren(),
                  isClean());
          operand_ = null;
        }
        operandCase_ = 2;
        onChanged();;
        return scalarBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet, io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGetOrBuilder> fieldGetBuilder_;
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       * @return Whether the fieldGet field is set.
       */
      @java.lang.Override
      public boolean hasFieldGet() {
        return operandCase_ == 3;
      }
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       * @return The fieldGet.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet getFieldGet() {
        if (fieldGetBuilder_ == null) {
          if (operandCase_ == 3) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance();
        } else {
          if (operandCase_ == 3) {
            return fieldGetBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       */
      public Builder setFieldGet(io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet value) {
        if (fieldGetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operand_ = value;
          onChanged();
        } else {
          fieldGetBuilder_.setMessage(value);
        }
        operandCase_ = 3;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       */
      public Builder setFieldGet(
          io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.Builder builderForValue) {
        if (fieldGetBuilder_ == null) {
          operand_ = builderForValue.build();
          onChanged();
        } else {
          fieldGetBuilder_.setMessage(builderForValue.build());
        }
        operandCase_ = 3;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       */
      public Builder mergeFieldGet(io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet value) {
        if (fieldGetBuilder_ == null) {
          if (operandCase_ == 3 &&
              operand_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance()) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_)
                .mergeFrom(value).buildPartial();
          } else {
            operand_ = value;
          }
          onChanged();
        } else {
          if (operandCase_ == 3) {
            fieldGetBuilder_.mergeFrom(value);
          }
          fieldGetBuilder_.setMessage(value);
        }
        operandCase_ = 3;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       */
      public Builder clearFieldGet() {
        if (fieldGetBuilder_ == null) {
          if (operandCase_ == 3) {
            operandCase_ = 0;
            operand_ = null;
            onChanged();
          }
        } else {
          if (operandCase_ == 3) {
            operandCase_ = 0;
            operand_ = null;
          }
          fieldGetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       */
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.Builder getFieldGetBuilder() {
        return getFieldGetFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGetOrBuilder getFieldGetOrBuilder() {
        if ((operandCase_ == 3) && (fieldGetBuilder_ != null)) {
          return fieldGetBuilder_.getMessageOrBuilder();
        } else {
          if (operandCase_ == 3) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.FieldGet field_get = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet, io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGetOrBuilder> 
          getFieldGetFieldBuilder() {
        if (fieldGetBuilder_ == null) {
          if (!(operandCase_ == 3)) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.getDefaultInstance();
          }
          fieldGetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet, io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGetOrBuilder>(
                  (io.activej.dataflow.proto.calcite.OperandProto.Operand.FieldGet) operand_,
                  getParentForChildren(),
                  isClean());
          operand_ = null;
        }
        operandCase_ = 3;
        onChanged();;
        return fieldGetBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Function, io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.FunctionOrBuilder> functionBuilder_;
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       * @return Whether the function field is set.
       */
      @java.lang.Override
      public boolean hasFunction() {
        return operandCase_ == 4;
      }
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       * @return The function.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Function getFunction() {
        if (functionBuilder_ == null) {
          if (operandCase_ == 4) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance();
        } else {
          if (operandCase_ == 4) {
            return functionBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       */
      public Builder setFunction(io.activej.dataflow.proto.calcite.OperandProto.Operand.Function value) {
        if (functionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operand_ = value;
          onChanged();
        } else {
          functionBuilder_.setMessage(value);
        }
        operandCase_ = 4;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       */
      public Builder setFunction(
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.Builder builderForValue) {
        if (functionBuilder_ == null) {
          operand_ = builderForValue.build();
          onChanged();
        } else {
          functionBuilder_.setMessage(builderForValue.build());
        }
        operandCase_ = 4;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       */
      public Builder mergeFunction(io.activej.dataflow.proto.calcite.OperandProto.Operand.Function value) {
        if (functionBuilder_ == null) {
          if (operandCase_ == 4 &&
              operand_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance()) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_)
                .mergeFrom(value).buildPartial();
          } else {
            operand_ = value;
          }
          onChanged();
        } else {
          if (operandCase_ == 4) {
            functionBuilder_.mergeFrom(value);
          }
          functionBuilder_.setMessage(value);
        }
        operandCase_ = 4;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       */
      public Builder clearFunction() {
        if (functionBuilder_ == null) {
          if (operandCase_ == 4) {
            operandCase_ = 0;
            operand_ = null;
            onChanged();
          }
        } else {
          if (operandCase_ == 4) {
            operandCase_ = 0;
            operand_ = null;
          }
          functionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       */
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.Builder getFunctionBuilder() {
        return getFunctionFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.FunctionOrBuilder getFunctionOrBuilder() {
        if ((operandCase_ == 4) && (functionBuilder_ != null)) {
          return functionBuilder_.getMessageOrBuilder();
        } else {
          if (operandCase_ == 4) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.Function function = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Function, io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.FunctionOrBuilder> 
          getFunctionFieldBuilder() {
        if (functionBuilder_ == null) {
          if (!(operandCase_ == 4)) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.getDefaultInstance();
          }
          functionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Function, io.activej.dataflow.proto.calcite.OperandProto.Operand.Function.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.FunctionOrBuilder>(
                  (io.activej.dataflow.proto.calcite.OperandProto.Operand.Function) operand_,
                  getParentForChildren(),
                  isClean());
          operand_ = null;
        }
        operandCase_ = 4;
        onChanged();;
        return functionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast, io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.CastOrBuilder> castBuilder_;
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       * @return Whether the cast field is set.
       */
      @java.lang.Override
      public boolean hasCast() {
        return operandCase_ == 5;
      }
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       * @return The cast.
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast getCast() {
        if (castBuilder_ == null) {
          if (operandCase_ == 5) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance();
        } else {
          if (operandCase_ == 5) {
            return castBuilder_.getMessage();
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       */
      public Builder setCast(io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast value) {
        if (castBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operand_ = value;
          onChanged();
        } else {
          castBuilder_.setMessage(value);
        }
        operandCase_ = 5;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       */
      public Builder setCast(
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.Builder builderForValue) {
        if (castBuilder_ == null) {
          operand_ = builderForValue.build();
          onChanged();
        } else {
          castBuilder_.setMessage(builderForValue.build());
        }
        operandCase_ = 5;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       */
      public Builder mergeCast(io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast value) {
        if (castBuilder_ == null) {
          if (operandCase_ == 5 &&
              operand_ != io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance()) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.newBuilder((io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_)
                .mergeFrom(value).buildPartial();
          } else {
            operand_ = value;
          }
          onChanged();
        } else {
          if (operandCase_ == 5) {
            castBuilder_.mergeFrom(value);
          }
          castBuilder_.setMessage(value);
        }
        operandCase_ = 5;
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       */
      public Builder clearCast() {
        if (castBuilder_ == null) {
          if (operandCase_ == 5) {
            operandCase_ = 0;
            operand_ = null;
            onChanged();
          }
        } else {
          if (operandCase_ == 5) {
            operandCase_ = 0;
            operand_ = null;
          }
          castBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       */
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.Builder getCastBuilder() {
        return getCastFieldBuilder().getBuilder();
      }
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       */
      @java.lang.Override
      public io.activej.dataflow.proto.calcite.OperandProto.Operand.CastOrBuilder getCastOrBuilder() {
        if ((operandCase_ == 5) && (castBuilder_ != null)) {
          return castBuilder_.getMessageOrBuilder();
        } else {
          if (operandCase_ == 5) {
            return (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_;
          }
          return io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance();
        }
      }
      /**
       * <code>.dataflow.calcite.Operand.Cast cast = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast, io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.CastOrBuilder> 
          getCastFieldBuilder() {
        if (castBuilder_ == null) {
          if (!(operandCase_ == 5)) {
            operand_ = io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.getDefaultInstance();
          }
          castBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast, io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast.Builder, io.activej.dataflow.proto.calcite.OperandProto.Operand.CastOrBuilder>(
                  (io.activej.dataflow.proto.calcite.OperandProto.Operand.Cast) operand_,
                  getParentForChildren(),
                  isClean());
          operand_ = null;
        }
        operandCase_ = 5;
        onChanged();;
        return castBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dataflow.calcite.Operand)
    }

    // @@protoc_insertion_point(class_scope:dataflow.calcite.Operand)
    private static final io.activej.dataflow.proto.calcite.OperandProto.Operand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.activej.dataflow.proto.calcite.OperandProto.Operand();
    }

    public static io.activej.dataflow.proto.calcite.OperandProto.Operand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Operand>
        PARSER = new com.google.protobuf.AbstractParser<Operand>() {
      @java.lang.Override
      public Operand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Operand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Operand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Operand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.activej.dataflow.proto.calcite.OperandProto.Operand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_RecordField_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_RecordField_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Scalar_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Scalar_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Scalar_None_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Scalar_None_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Scalar_BDecimal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Scalar_BDecimal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Scalar_BInteger_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Scalar_BInteger_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Scalar_Date_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Scalar_Date_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Scalar_Time_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Scalar_Time_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Scalar_Timestamp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Scalar_Timestamp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_FieldGet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_FieldGet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Function_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Function_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dataflow_calcite_Operand_Cast_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dataflow_calcite_Operand_Cast_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025calcite/operand.proto\022\020dataflow.calcit" +
      "e\"\365\t\n\007Operand\022=\n\014record_field\030\001 \001(\0132%.da" +
      "taflow.calcite.Operand.RecordFieldH\000\0222\n\006" +
      "scalar\030\002 \001(\0132 .dataflow.calcite.Operand." +
      "ScalarH\000\0227\n\tfield_get\030\003 \001(\0132\".dataflow.c" +
      "alcite.Operand.FieldGetH\000\0226\n\010function\030\004 " +
      "\001(\0132\".dataflow.calcite.Operand.FunctionH" +
      "\000\022.\n\004cast\030\005 \001(\0132\036.dataflow.calcite.Opera" +
      "nd.CastH\000\032\034\n\013RecordField\022\r\n\005index\030\001 \001(\005\032" +
      "\301\005\n\006Scalar\0225\n\004null\030\001 \001(\0132%.dataflow.calc" +
      "ite.Operand.Scalar.NoneH\000\022\021\n\007integer\030\002 \001" +
      "(\005H\000\022\016\n\004long\030\003 \001(\003H\000\022\017\n\005float\030\004 \001(\002H\000\022\020\n" +
      "\006double\030\005 \001(\001H\000\022\021\n\007boolean\030\006 \001(\010H\000\022\020\n\006st" +
      "ring\030\007 \001(\tH\000\022@\n\013big_decimal\030\010 \001(\0132).data" +
      "flow.calcite.Operand.Scalar.BDecimalH\000\0225" +
      "\n\004date\030\t \001(\0132%.dataflow.calcite.Operand." +
      "Scalar.DateH\000\0225\n\004time\030\n \001(\0132%.dataflow.c" +
      "alcite.Operand.Scalar.TimeH\000\022?\n\ttimestam" +
      "p\030\013 \001(\0132*.dataflow.calcite.Operand.Scala" +
      "r.TimestampH\000\032\006\n\004None\032U\n\010BDecimal\022\r\n\005sca" +
      "le\030\001 \001(\005\022:\n\007int_val\030\002 \001(\0132).dataflow.cal" +
      "cite.Operand.Scalar.BInteger\032\031\n\010BInteger" +
      "\022\r\n\005value\030\001 \001(\014\0320\n\004Date\022\014\n\004year\030\001 \001(\005\022\r\n" +
      "\005month\030\002 \001(\005\022\013\n\003day\030\003 \001(\005\032B\n\004Time\022\014\n\004hou" +
      "r\030\001 \001(\005\022\016\n\006minute\030\002 \001(\005\022\016\n\006second\030\003 \001(\005\022" +
      "\014\n\004nano\030\004 \001(\005\032+\n\tTimestamp\022\017\n\007seconds\030\001 " +
      "\001(\003\022\r\n\005nanos\030\002 \001(\005B\007\n\005value\032Q\n\010FieldGet\022" +
      "1\n\016object_operand\030\001 \001(\0132\031.dataflow.calci" +
      "te.Operand\022\022\n\nfield_name\030\002 \001(\t\032N\n\010Functi" +
      "on\022\025\n\rfunction_name\030\001 \001(\t\022+\n\010operands\030\002 " +
      "\003(\0132\031.dataflow.calcite.Operand\032F\n\004Cast\0220" +
      "\n\rvalue_operand\030\001 \001(\0132\031.dataflow.calcite" +
      ".Operand\022\014\n\004type\030\002 \001(\005B\t\n\007operandB3\n!io." +
      "activej.dataflow.proto.calciteB\014OperandP" +
      "rotoP\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_dataflow_calcite_Operand_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dataflow_calcite_Operand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_descriptor,
        new java.lang.String[] { "RecordField", "Scalar", "FieldGet", "Function", "Cast", "Operand", });
    internal_static_dataflow_calcite_Operand_RecordField_descriptor =
      internal_static_dataflow_calcite_Operand_descriptor.getNestedTypes().get(0);
    internal_static_dataflow_calcite_Operand_RecordField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_RecordField_descriptor,
        new java.lang.String[] { "Index", });
    internal_static_dataflow_calcite_Operand_Scalar_descriptor =
      internal_static_dataflow_calcite_Operand_descriptor.getNestedTypes().get(1);
    internal_static_dataflow_calcite_Operand_Scalar_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Scalar_descriptor,
        new java.lang.String[] { "Null", "Integer", "Long", "Float", "Double", "Boolean", "String", "BigDecimal", "Date", "Time", "Timestamp", "Value", });
    internal_static_dataflow_calcite_Operand_Scalar_None_descriptor =
      internal_static_dataflow_calcite_Operand_Scalar_descriptor.getNestedTypes().get(0);
    internal_static_dataflow_calcite_Operand_Scalar_None_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Scalar_None_descriptor,
        new java.lang.String[] { });
    internal_static_dataflow_calcite_Operand_Scalar_BDecimal_descriptor =
      internal_static_dataflow_calcite_Operand_Scalar_descriptor.getNestedTypes().get(1);
    internal_static_dataflow_calcite_Operand_Scalar_BDecimal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Scalar_BDecimal_descriptor,
        new java.lang.String[] { "Scale", "IntVal", });
    internal_static_dataflow_calcite_Operand_Scalar_BInteger_descriptor =
      internal_static_dataflow_calcite_Operand_Scalar_descriptor.getNestedTypes().get(2);
    internal_static_dataflow_calcite_Operand_Scalar_BInteger_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Scalar_BInteger_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_dataflow_calcite_Operand_Scalar_Date_descriptor =
      internal_static_dataflow_calcite_Operand_Scalar_descriptor.getNestedTypes().get(3);
    internal_static_dataflow_calcite_Operand_Scalar_Date_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Scalar_Date_descriptor,
        new java.lang.String[] { "Year", "Month", "Day", });
    internal_static_dataflow_calcite_Operand_Scalar_Time_descriptor =
      internal_static_dataflow_calcite_Operand_Scalar_descriptor.getNestedTypes().get(4);
    internal_static_dataflow_calcite_Operand_Scalar_Time_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Scalar_Time_descriptor,
        new java.lang.String[] { "Hour", "Minute", "Second", "Nano", });
    internal_static_dataflow_calcite_Operand_Scalar_Timestamp_descriptor =
      internal_static_dataflow_calcite_Operand_Scalar_descriptor.getNestedTypes().get(5);
    internal_static_dataflow_calcite_Operand_Scalar_Timestamp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Scalar_Timestamp_descriptor,
        new java.lang.String[] { "Seconds", "Nanos", });
    internal_static_dataflow_calcite_Operand_FieldGet_descriptor =
      internal_static_dataflow_calcite_Operand_descriptor.getNestedTypes().get(2);
    internal_static_dataflow_calcite_Operand_FieldGet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_FieldGet_descriptor,
        new java.lang.String[] { "ObjectOperand", "FieldName", });
    internal_static_dataflow_calcite_Operand_Function_descriptor =
      internal_static_dataflow_calcite_Operand_descriptor.getNestedTypes().get(3);
    internal_static_dataflow_calcite_Operand_Function_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Function_descriptor,
        new java.lang.String[] { "FunctionName", "Operands", });
    internal_static_dataflow_calcite_Operand_Cast_descriptor =
      internal_static_dataflow_calcite_Operand_descriptor.getNestedTypes().get(4);
    internal_static_dataflow_calcite_Operand_Cast_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dataflow_calcite_Operand_Cast_descriptor,
        new java.lang.String[] { "ValueOperand", "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
